

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Mar 16 22:22:05 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.10
    32                           ; Generated 31/07/2019 GMT
    33                           ; 
    34                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221                           
   222                           	psect	strings
   223  0003                     __pstrings:	
   224  0003                     stringtab:	
   225  0003                     __stringtab:	
   226  0003                     stringcode:	
   227                           ;	String table - string pointers are 1 byte each
   228                           
   229  0003                     stringdir:	
   230  0003  3000               	movlw	high stringdir
   231  0004  008A               	movwf	10
   232  0005  0804               	movf	4,w
   233  0006  0A84               	incf	4,f
   234  0007  0782               	addwf	2,f
   235  0008                     __stringbase:	
   236  0008  3400               	retlw	0
   237  0009                     __end_of__stringtab:	
   238  0009                     _a:	
   239  0009  3430               	retlw	48
   240  000A  3431               	retlw	49
   241  000B  3432               	retlw	50
   242  000C  3433               	retlw	51
   243  000D  3434               	retlw	52
   244  000E  3435               	retlw	53
   245  000F  3436               	retlw	54
   246  0010  3437               	retlw	55
   247  0011  3438               	retlw	56
   248  0012  3439               	retlw	57
   249  0013                     __end_of_a:	
   250  0008                     _PORTD	set	8
   251  0007                     _PORTC	set	7
   252  0005                     _PORTA	set	5
   253  0005                     _PORTAbits	set	5
   254  0006                     _PORTB	set	6
   255  0008                     _PORTDbits	set	8
   256  0013                     _SSPBUF	set	19
   257  0014                     _SSPCON	set	20
   258  0088                     _TRISDbits	set	136
   259  0087                     _TRISC	set	135
   260  0086                     _TRISB	set	134
   261  0085                     _TRISA	set	133
   262  008F                     _OSCCONbits	set	143
   263  0091                     _SSPCON2bits	set	145
   264  0087                     _TRISCbits	set	135
   265  0094                     _SSPSTAT	set	148
   266  0093                     _SSPADD	set	147
   267  0091                     _SSPCON2	set	145
   268  0189                     _ANSELH	set	393
   269  0188                     _ANSEL	set	392
   270  0013                     STR_5:	
   271  0013  3420               	retlw	32	;' '
   272  0014  3420               	retlw	32	;' '
   273  0015  3420               	retlw	32	;' '
   274  0016  3420               	retlw	32	;' '
   275  0017  3420               	retlw	32	;' '
   276  0018  3400               	retlw	0
   277  0019                     STR_6:	
   278  0019  3443               	retlw	67	;'C'
   279  001A  344C               	retlw	76	;'L'
   280  001B  344F               	retlw	79	;'O'
   281  001C  3453               	retlw	83	;'S'
   282  001D  3445               	retlw	69	;'E'
   283  001E  3400               	retlw	0
   284  001F                     STR_9:	
   285  001F  3443               	retlw	67	;'C'
   286  0020  3465               	retlw	101	;'e'
   287  0021  346C               	retlw	108	;'l'
   288  0022  3464               	retlw	100	;'d'
   289  0023  3461               	retlw	97	;'a'
   290  0024  3400               	retlw	0
   291  0025                     STR_8:	
   292  0025  344F               	retlw	79	;'O'
   293  0026  3450               	retlw	80	;'P'
   294  0027  3445               	retlw	69	;'E'
   295  0028  344E               	retlw	78	;'N'
   296  0029  3400               	retlw	0
   297  002A                     STR_4:	
   298  002A  344F               	retlw	79	;'O'
   299  002B  3446               	retlw	70	;'F'
   300  002C  3446               	retlw	70	;'F'
   301  002D  3400               	retlw	0
   302  002E                     STR_10:	
   303  002E  344C               	retlw	76	;'L'
   304  002F  3475               	retlw	117	;'u'
   305  0030  347A               	retlw	122	;'z'
   306  0031  3400               	retlw	0
   307  0032                     STR_2:	
   308  0032  344F               	retlw	79	;'O'
   309  0033  344E               	retlw	78	;'N'
   310  0034  3400               	retlw	0
   311  0015                     
   312                           ; #config settings
   313  0000                     
   314                           	psect	cinit
   315  07F0                     start_initialization:	
   316  07F0                     __initialization:	
   317                           
   318                           ; Clear objects allocated to BANK0
   319  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   320  07F1  1303               	bcf	3,6	;RP1=0, select bank0
   321  07F2  01A0               	clrf	__pbssBANK0& (0+127)
   322  07F3  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   323  07F4  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   324  07F5  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   325  07F6  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   326  07F7  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   327  07F8  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   328  07F9  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   329  07FA  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   330  07FB  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   331  07FC                     end_of_initialization:	
   332                           ;End of C runtime variable initialization code
   333                           
   334  07FC                     __end_of__initialization:	
   335  07FC  0183               	clrf	3
   336  07FD  120A  118A  2E61   	ljmp	_main	;jump to C main() function
   337                           
   338                           	psect	bssBANK0
   339  0020                     __pbssBANK0:	
   340  0020                     _y3:	
   341  0020                     	ds	2
   342  0022                     _y2:	
   343  0022                     	ds	2
   344  0024                     _y1:	
   345  0024                     	ds	2
   346  0026                     _y:	
   347  0026                     	ds	2
   348  0028                     _grados:	
   349  0028                     	ds	1
   350  0029                     _Luz:	
   351  0029                     	ds	1
   352                           
   353                           	psect	cstackCOMMON
   354  0070                     __pcstackCOMMON:	
   355  0070                     ?_I2C_Master_Wait:	
   356  0070                     ??_I2C_Master_Wait:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_I2C_Master_Start:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ??_I2C_Master_Start:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ?_I2C_Master_Stop:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ??_I2C_Master_Stop:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?_I2C_Master_Write:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ?_comando:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ??_comando:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ?_iniciarLCD:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_borrarv:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ?_imprimir:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ??_imprimir:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ?_mostrar:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ??_mostrar:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?_iniciarOSC:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ??_iniciarOSC:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ?_luces:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ?_celda:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ?_setup:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ??_setup:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_main:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?_I2C_Master_Read:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?___awdiv:	
   423                           ; 2 bytes @ 0x0
   424                           
   425  0070                     ?___awmod:	
   426                           ; 2 bytes @ 0x0
   427                           
   428  0070                     ?___lldiv:	
   429                           ; 2 bytes @ 0x0
   430                           
   431  0070                     I2C_Master_Write@d:	
   432                           ; 4 bytes @ 0x0
   433                           
   434  0070                     I2C_Master_Read@a:	
   435                           ; 2 bytes @ 0x0
   436                           
   437  0070                     ___awdiv@divisor:	
   438                           ; 2 bytes @ 0x0
   439                           
   440  0070                     ___awmod@divisor:	
   441                           ; 2 bytes @ 0x0
   442                           
   443  0070                     ___lldiv@divisor:	
   444                           ; 2 bytes @ 0x0
   445                           
   446                           
   447                           ; 4 bytes @ 0x0
   448  0070                     	ds	2
   449  0072                     ??_I2C_Master_Write:	
   450  0072                     ??_I2C_Master_Read:	
   451                           ; 1 bytes @ 0x2
   452                           
   453  0072                     comando@x:	
   454                           ; 1 bytes @ 0x2
   455                           
   456  0072                     mostrar@t:	
   457                           ; 1 bytes @ 0x2
   458                           
   459  0072                     iniciarOSC@frec:	
   460                           ; 1 bytes @ 0x2
   461                           
   462  0072                     imprimir@i:	
   463                           ; 1 bytes @ 0x2
   464                           
   465  0072                     ___awdiv@dividend:	
   466                           ; 2 bytes @ 0x2
   467                           
   468  0072                     ___awmod@dividend:	
   469                           ; 2 bytes @ 0x2
   470                           
   471                           
   472                           ; 2 bytes @ 0x2
   473  0072                     	ds	1
   474  0073                     ??_iniciarLCD:	
   475  0073                     ??_borrarv:	
   476                           ; 1 bytes @ 0x3
   477                           
   478  0073                     ?_colocar:	
   479                           ; 1 bytes @ 0x3
   480                           
   481  0073                     colocar@y:	
   482                           ; 1 bytes @ 0x3
   483                           
   484                           
   485                           ; 1 bytes @ 0x3
   486  0073                     	ds	1
   487  0074                     ??_colocar:	
   488  0074                     ??___awdiv:	
   489                           ; 1 bytes @ 0x4
   490                           
   491  0074                     ??___awmod:	
   492                           ; 1 bytes @ 0x4
   493                           
   494  0074                     imprimir@texto:	
   495                           ; 1 bytes @ 0x4
   496                           
   497  0074                     I2C_Master_Read@temp:	
   498                           ; 1 bytes @ 0x4
   499                           
   500  0074                     ___lldiv@dividend:	
   501                           ; 2 bytes @ 0x4
   502                           
   503                           
   504                           ; 4 bytes @ 0x4
   505  0074                     	ds	1
   506  0075                     colocar@x:	
   507  0075                     ___awdiv@counter:	
   508                           ; 1 bytes @ 0x5
   509                           
   510  0075                     ___awmod@counter:	
   511                           ; 1 bytes @ 0x5
   512                           
   513                           
   514                           ; 1 bytes @ 0x5
   515  0075                     	ds	1
   516  0076                     colocar@temp:	
   517  0076                     ___awdiv@sign:	
   518                           ; 1 bytes @ 0x6
   519                           
   520  0076                     ___awmod@sign:	
   521                           ; 1 bytes @ 0x6
   522                           
   523                           
   524                           ; 1 bytes @ 0x6
   525  0076                     	ds	1
   526  0077                     ??_celda:	
   527  0077                     ___awdiv@quotient:	
   528                           ; 1 bytes @ 0x7
   529                           
   530                           
   531                           ; 2 bytes @ 0x7
   532  0077                     	ds	1
   533  0078                     ??___lldiv:	
   534                           
   535                           ; 1 bytes @ 0x8
   536  0078                     	ds	1
   537  0079                     ??_luces:	
   538  0079                     ___lldiv@quotient:	
   539                           ; 1 bytes @ 0x9
   540                           
   541                           
   542                           ; 4 bytes @ 0x9
   543  0079                     	ds	4
   544  007D                     ___lldiv@counter:	
   545                           
   546                           ; 1 bytes @ 0xD
   547  007D                     	ds	1
   548                           
   549                           	psect	cstackBANK0
   550  002A                     __pcstackBANK0:	
   551  002A                     ?_I2C_Master_Init:	
   552  002A                     I2C_Master_Init@c:	
   553                           ; 1 bytes @ 0x0
   554                           
   555                           
   556                           ; 4 bytes @ 0x0
   557  002A                     	ds	4
   558  002E                     ??_I2C_Master_Init:	
   559                           
   560                           ; 1 bytes @ 0x4
   561  002E                     	ds	4
   562  0032                     ??_main:	
   563                           
   564                           ; 1 bytes @ 0x8
   565  0032                     	ds	2
   566                           
   567                           	psect	maintext
   568  0661                     __pmaintext:	
   569 ;;
   570 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   571 ;;
   572 ;; *************** function _main *****************
   573 ;; Defined at:
   574 ;;		line 133 in file "Carcelero.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;		None
   577 ;; Auto vars:     Size  Location     Type
   578 ;;		None
   579 ;; Return value:  Size  Location     Type
   580 ;;                  1    wreg      void 
   581 ;; Registers used:
   582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   583 ;; Tracked objects:
   584 ;;		On entry : B00/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   588 ;;      Params:         0       0       0       0       0
   589 ;;      Locals:         0       0       0       0       0
   590 ;;      Temps:          0       2       0       0       0
   591 ;;      Totals:         0       2       0       0       0
   592 ;;Total ram usage:        2 bytes
   593 ;; Hardware stack levels required when called:    3
   594 ;; This function calls:
   595 ;;		_I2C_Master_Init
   596 ;;		_I2C_Master_Read
   597 ;;		_I2C_Master_Start
   598 ;;		_I2C_Master_Stop
   599 ;;		_I2C_Master_Write
   600 ;;		_borrarv
   601 ;;		_celda
   602 ;;		_colocar
   603 ;;		_imprimir
   604 ;;		_iniciarLCD
   605 ;;		_iniciarOSC
   606 ;;		_luces
   607 ;;		_setup
   608 ;; This function is called by:
   609 ;;		Startup code after reset
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           
   614                           ;psect for function _main
   615  0661                     _main:	
   616  0661                     l1389:	
   617                           ;incstack = 0
   618                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   619                           
   620                           
   621                           ;Carcelero.c: 135:     iniciarOSC(6);
   622  0661  3006               	movlw	6
   623  0662  120A  118A  2533  120A  118A  	fcall	_iniciarOSC
   624  0667                     l1391:	
   625                           
   626                           ;Carcelero.c: 137:     setup();
   627  0667  120A  118A  2329  120A  118A  	fcall	_setup
   628  066C                     l1393:	
   629                           
   630                           ;Carcelero.c: 139:     iniciarLCD();
   631  066C  120A  118A  2431  120A  118A  	fcall	_iniciarLCD
   632  0671                     l1395:	
   633                           
   634                           ;Carcelero.c: 141:     borrarv();
   635  0671  120A  118A  233B  120A  118A  	fcall	_borrarv
   636  0676                     l1397:	
   637                           
   638                           ;Carcelero.c: 143:     I2C_Master_Init(100000);
   639  0676  3000               	movlw	0
   640  0677  1283               	bcf	3,5	;RP0=0, select bank0
   641  0678  1303               	bcf	3,6	;RP1=0, select bank0
   642  0679  00AD               	movwf	I2C_Master_Init@c+3
   643  067A  3001               	movlw	1
   644  067B  00AC               	movwf	I2C_Master_Init@c+2
   645  067C  3086               	movlw	134
   646  067D  00AB               	movwf	I2C_Master_Init@c+1
   647  067E  30A0               	movlw	160
   648  067F  00AA               	movwf	I2C_Master_Init@c
   649  0680  120A  118A  23F9  120A  118A  	fcall	_I2C_Master_Init
   650  0685                     l1399:	
   651                           
   652                           ;Carcelero.c: 145:     colocar(1,1);
   653  0685  01F3               	clrf	colocar@y
   654  0686  0AF3               	incf	colocar@y,f
   655  0687  3001               	movlw	1
   656  0688  120A  118A  2376  120A  118A  	fcall	_colocar
   657  068D                     l1401:	
   658                           
   659                           ;Carcelero.c: 146:     imprimir("Celda");
   660  068D  3017               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
   661  068E  120A  118A  23C8  120A  118A  	fcall	_imprimir
   662  0693                     l1403:	
   663                           
   664                           ;Carcelero.c: 148:     colocar(7,1);
   665  0693  01F3               	clrf	colocar@y
   666  0694  0AF3               	incf	colocar@y,f
   667  0695  3007               	movlw	7
   668  0696  120A  118A  2376  120A  118A  	fcall	_colocar
   669  069B                     l1405:	
   670                           
   671                           ;Carcelero.c: 149:     imprimir("Luz");
   672  069B  3026               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
   673  069C  120A  118A  23C8  120A  118A  	fcall	_imprimir
   674  06A1                     l1407:	
   675                           
   676                           ;Carcelero.c: 152:     {;Carcelero.c: 154:         I2C_Master_Start();
   677  06A1  120A  118A  2300  120A  118A  	fcall	_I2C_Master_Start
   678  06A6                     l1409:	
   679                           
   680                           ;Carcelero.c: 155:         I2C_Master_Write(0x21);
   681  06A6  3021               	movlw	33
   682  06A7  00F0               	movwf	I2C_Master_Write@d
   683  06A8  3000               	movlw	0
   684  06A9  00F1               	movwf	I2C_Master_Write@d+1
   685  06AA  120A  118A  2312  120A  118A  	fcall	_I2C_Master_Write
   686  06AF                     l1411:	
   687                           
   688                           ;Carcelero.c: 156:         grados = I2C_Master_Read(0);
   689  06AF  3000               	movlw	0
   690  06B0  00F0               	movwf	I2C_Master_Read@a
   691  06B1  00F1               	movwf	I2C_Master_Read@a+1
   692  06B2  120A  118A  239A  120A  118A  	fcall	_I2C_Master_Read
   693  06B7  0870               	movf	?_I2C_Master_Read,w
   694  06B8  1283               	bcf	3,5	;RP0=0, select bank0
   695  06B9  1303               	bcf	3,6	;RP1=0, select bank0
   696  06BA  00B2               	movwf	??_main
   697  06BB  0832               	movf	??_main,w
   698  06BC  00A8               	movwf	_grados
   699  06BD                     l1413:	
   700                           
   701                           ;Carcelero.c: 157:         I2C_Master_Stop();
   702  06BD  120A  118A  2309  120A  118A  	fcall	_I2C_Master_Stop
   703  06C2                     l1415:	
   704                           
   705                           ;Carcelero.c: 158:         _delay((unsigned long)((100)*(4000000/4000.0)));
   706  06C2  3082               	movlw	130
   707  06C3  1283               	bcf	3,5	;RP0=0, select bank0
   708  06C4  1303               	bcf	3,6	;RP1=0, select bank0
   709  06C5  00B3               	movwf	??_main+1
   710  06C6  30DD               	movlw	221
   711  06C7  00B2               	movwf	??_main
   712  06C8                     u737:	
   713  06C8  0BB2               	decfsz	??_main,f
   714  06C9  2EC8               	goto	u737
   715  06CA  0BB3               	decfsz	??_main+1,f
   716  06CB  2EC8               	goto	u737
   717  06CC                     l1417:	
   718                           
   719                           ;Carcelero.c: 161:         I2C_Master_Start();
   720  06CC  120A  118A  2300  120A  118A  	fcall	_I2C_Master_Start
   721  06D1                     l1419:	
   722                           
   723                           ;Carcelero.c: 162:         I2C_Master_Write(0x11);
   724  06D1  3011               	movlw	17
   725  06D2  00F0               	movwf	I2C_Master_Write@d
   726  06D3  3000               	movlw	0
   727  06D4  00F1               	movwf	I2C_Master_Write@d+1
   728  06D5  120A  118A  2312  120A  118A  	fcall	_I2C_Master_Write
   729  06DA                     l1421:	
   730                           
   731                           ;Carcelero.c: 163:         Luz = I2C_Master_Read(0);
   732  06DA  3000               	movlw	0
   733  06DB  00F0               	movwf	I2C_Master_Read@a
   734  06DC  00F1               	movwf	I2C_Master_Read@a+1
   735  06DD  120A  118A  239A  120A  118A  	fcall	_I2C_Master_Read
   736  06E2  0870               	movf	?_I2C_Master_Read,w
   737  06E3  1283               	bcf	3,5	;RP0=0, select bank0
   738  06E4  1303               	bcf	3,6	;RP1=0, select bank0
   739  06E5  00B2               	movwf	??_main
   740  06E6  0832               	movf	??_main,w
   741  06E7  00A9               	movwf	_Luz
   742  06E8                     l1423:	
   743                           
   744                           ;Carcelero.c: 164:         I2C_Master_Stop();
   745  06E8  120A  118A  2309  120A  118A  	fcall	_I2C_Master_Stop
   746  06ED                     l1425:	
   747                           
   748                           ;Carcelero.c: 165:         _delay((unsigned long)((100)*(4000000/4000.0)));
   749  06ED  3082               	movlw	130
   750  06EE  1283               	bcf	3,5	;RP0=0, select bank0
   751  06EF  1303               	bcf	3,6	;RP1=0, select bank0
   752  06F0  00B3               	movwf	??_main+1
   753  06F1  30DD               	movlw	221
   754  06F2  00B2               	movwf	??_main
   755  06F3                     u747:	
   756  06F3  0BB2               	decfsz	??_main,f
   757  06F4  2EF3               	goto	u747
   758  06F5  0BB3               	decfsz	??_main+1,f
   759  06F6  2EF3               	goto	u747
   760  06F7                     l1427:	
   761                           
   762                           ;Carcelero.c: 167:         luces();
   763  06F7  120A  118A  2705  120A  118A  	fcall	_luces
   764  06FC                     l1429:	
   765                           
   766                           ;Carcelero.c: 168:         celda();
   767  06FC  120A  118A  2485  120A  118A  	fcall	_celda
   768  0701  2EA1               	goto	l1407
   769  0702  120A  118A  2800   	ljmp	start
   770  0705                     __end_of_main:	
   771                           
   772                           	psect	text1
   773  0329                     __ptext1:	
   774 ;; *************** function _setup *****************
   775 ;; Defined at:
   776 ;;		line 115 in file "Carcelero.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;		None
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      void 
   783 ;; Registers used:
   784 ;;		status,2
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   790 ;;      Params:         0       0       0       0       0
   791 ;;      Locals:         0       0       0       0       0
   792 ;;      Temps:          0       0       0       0       0
   793 ;;      Totals:         0       0       0       0       0
   794 ;;Total ram usage:        0 bytes
   795 ;; Hardware stack levels used:    1
   796 ;; This function calls:
   797 ;;		Nothing
   798 ;; This function is called by:
   799 ;;		_main
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           
   804                           ;psect for function _setup
   805  0329                     _setup:	
   806  0329                     l1383:	
   807                           ;incstack = 0
   808                           ; Regs used in _setup: [status,2]
   809                           
   810                           
   811                           ;Carcelero.c: 117:     ANSEL = 0;
   812  0329  1683               	bsf	3,5	;RP0=1, select bank3
   813  032A  1703               	bsf	3,6	;RP1=1, select bank3
   814  032B  0188               	clrf	8	;volatile
   815                           
   816                           ;Carcelero.c: 118:     ANSELH = 0;
   817  032C  0189               	clrf	9	;volatile
   818                           
   819                           ;Carcelero.c: 120:     TRISA = 0;
   820  032D  1683               	bsf	3,5	;RP0=1, select bank1
   821  032E  1303               	bcf	3,6	;RP1=0, select bank1
   822  032F  0185               	clrf	5	;volatile
   823                           
   824                           ;Carcelero.c: 121:     TRISB = 0;
   825  0330  0186               	clrf	6	;volatile
   826                           
   827                           ;Carcelero.c: 122:     TRISC = 0;
   828  0331  0187               	clrf	7	;volatile
   829  0332                     l1385:	
   830                           
   831                           ;Carcelero.c: 124:     TRISDbits.TRISD6 = 0;
   832  0332  1308               	bcf	8,6	;volatile
   833  0333                     l1387:	
   834                           
   835                           ;Carcelero.c: 125:     TRISDbits.TRISD7 = 0;
   836  0333  1388               	bcf	8,7	;volatile
   837                           
   838                           ;Carcelero.c: 127:     PORTA = 0;
   839  0334  1283               	bcf	3,5	;RP0=0, select bank0
   840  0335  1303               	bcf	3,6	;RP1=0, select bank0
   841  0336  0185               	clrf	5	;volatile
   842                           
   843                           ;Carcelero.c: 128:     PORTB = 0;
   844  0337  0186               	clrf	6	;volatile
   845                           
   846                           ;Carcelero.c: 129:     PORTC = 0;
   847  0338  0187               	clrf	7	;volatile
   848                           
   849                           ;Carcelero.c: 130:     PORTD = 0;
   850  0339  0188               	clrf	8	;volatile
   851  033A                     l131:	
   852  033A  0008               	return
   853  033B                     __end_of_setup:	
   854                           
   855                           	psect	text2
   856  0705                     __ptext2:	
   857 ;; *************** function _luces *****************
   858 ;; Defined at:
   859 ;;		line 57 in file "Carcelero.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;		None
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   873 ;;      Params:         0       0       0       0       0
   874 ;;      Locals:         0       0       0       0       0
   875 ;;      Temps:          2       0       0       0       0
   876 ;;      Totals:         2       0       0       0       0
   877 ;;Total ram usage:        2 bytes
   878 ;; Hardware stack levels used:    1
   879 ;; Hardware stack levels required when called:    2
   880 ;; This function calls:
   881 ;;		___awdiv
   882 ;;		___awmod
   883 ;;		_colocar
   884 ;;		_imprimir
   885 ;;		_mostrar
   886 ;; This function is called by:
   887 ;;		_main
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           
   892                           ;psect for function _luces
   893  0705                     _luces:	
   894  0705                     l1335:	
   895                           ;incstack = 0
   896                           ; Regs used in _luces: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   897                           
   898                           
   899                           ;Carcelero.c: 59:     y = Luz/100;
   900  0705  3064               	movlw	100
   901  0706  00F0               	movwf	___awdiv@divisor
   902  0707  3000               	movlw	0
   903  0708  00F1               	movwf	___awdiv@divisor+1
   904  0709  1283               	bcf	3,5	;RP0=0, select bank0
   905  070A  1303               	bcf	3,6	;RP1=0, select bank0
   906  070B  0829               	movf	_Luz,w
   907  070C  00F9               	movwf	??_luces
   908  070D  01FA               	clrf	??_luces+1
   909  070E  0879               	movf	??_luces,w
   910  070F  00F2               	movwf	___awdiv@dividend
   911  0710  087A               	movf	??_luces+1,w
   912  0711  00F3               	movwf	___awdiv@dividend+1
   913  0712  120A  118A  25FA  120A  118A  	fcall	___awdiv
   914  0717  0871               	movf	?___awdiv+1,w
   915  0718  1283               	bcf	3,5	;RP0=0, select bank0
   916  0719  1303               	bcf	3,6	;RP1=0, select bank0
   917  071A  00A7               	movwf	_y+1
   918  071B  0870               	movf	?___awdiv,w
   919  071C  00A6               	movwf	_y
   920                           
   921                           ;Carcelero.c: 60:     y1 = Luz%100;
   922  071D  3064               	movlw	100
   923  071E  00F0               	movwf	___awmod@divisor
   924  071F  3000               	movlw	0
   925  0720  00F1               	movwf	___awmod@divisor+1
   926  0721  0829               	movf	_Luz,w
   927  0722  00F9               	movwf	??_luces
   928  0723  01FA               	clrf	??_luces+1
   929  0724  0879               	movf	??_luces,w
   930  0725  00F2               	movwf	___awmod@dividend
   931  0726  087A               	movf	??_luces+1,w
   932  0727  00F3               	movwf	___awmod@dividend+1
   933  0728  120A  118A  24DA  120A  118A  	fcall	___awmod
   934  072D  0871               	movf	?___awmod+1,w
   935  072E  1283               	bcf	3,5	;RP0=0, select bank0
   936  072F  1303               	bcf	3,6	;RP1=0, select bank0
   937  0730  00A5               	movwf	_y1+1
   938  0731  0870               	movf	?___awmod,w
   939  0732  00A4               	movwf	_y1
   940                           
   941                           ;Carcelero.c: 61:     y2 = y1/10;
   942  0733  300A               	movlw	10
   943  0734  00F0               	movwf	___awdiv@divisor
   944  0735  3000               	movlw	0
   945  0736  00F1               	movwf	___awdiv@divisor+1
   946  0737  0825               	movf	_y1+1,w
   947  0738  00F3               	movwf	___awdiv@dividend+1
   948  0739  0824               	movf	_y1,w
   949  073A  00F2               	movwf	___awdiv@dividend
   950  073B  120A  118A  25FA  120A  118A  	fcall	___awdiv
   951  0740  0871               	movf	?___awdiv+1,w
   952  0741  1283               	bcf	3,5	;RP0=0, select bank0
   953  0742  1303               	bcf	3,6	;RP1=0, select bank0
   954  0743  00A3               	movwf	_y2+1
   955  0744  0870               	movf	?___awdiv,w
   956  0745  00A2               	movwf	_y2
   957                           
   958                           ;Carcelero.c: 62:     y3 = y1%10;
   959  0746  300A               	movlw	10
   960  0747  00F0               	movwf	___awmod@divisor
   961  0748  3000               	movlw	0
   962  0749  00F1               	movwf	___awmod@divisor+1
   963  074A  0825               	movf	_y1+1,w
   964  074B  00F3               	movwf	___awmod@dividend+1
   965  074C  0824               	movf	_y1,w
   966  074D  00F2               	movwf	___awmod@dividend
   967  074E  120A  118A  24DA  120A  118A  	fcall	___awmod
   968  0753  0871               	movf	?___awmod+1,w
   969  0754  1283               	bcf	3,5	;RP0=0, select bank0
   970  0755  1303               	bcf	3,6	;RP1=0, select bank0
   971  0756  00A1               	movwf	_y3+1
   972  0757  0870               	movf	?___awmod,w
   973  0758  00A0               	movwf	_y3
   974                           
   975                           ;Carcelero.c: 64:     colocar(7,2);
   976  0759  3002               	movlw	2
   977  075A  00F9               	movwf	??_luces
   978  075B  0879               	movf	??_luces,w
   979  075C  00F3               	movwf	colocar@y
   980  075D  3007               	movlw	7
   981  075E  120A  118A  2376  120A  118A  	fcall	_colocar
   982  0763                     l1337:	
   983                           
   984                           ;Carcelero.c: 65:     mostrar(a[y]);
   985  0763  1283               	bcf	3,5	;RP0=0, select bank0
   986  0764  1303               	bcf	3,6	;RP1=0, select bank0
   987  0765  0826               	movf	_y,w
   988  0766  3E01               	addlw	low ((_a-__stringbase)| (0+32768))
   989  0767  0084               	movwf	4
   990  0768  120A  118A  2003  120A  118A  	fcall	stringdir
   991  076D  120A  118A  2362  120A  118A  	fcall	_mostrar
   992  0772                     l1339:	
   993                           
   994                           ;Carcelero.c: 66:     colocar(8,2);
   995  0772  3002               	movlw	2
   996  0773  00F9               	movwf	??_luces
   997  0774  0879               	movf	??_luces,w
   998  0775  00F3               	movwf	colocar@y
   999  0776  3008               	movlw	8
  1000  0777  120A  118A  2376  120A  118A  	fcall	_colocar
  1001                           
  1002                           ;Carcelero.c: 67:     mostrar(a[y2]);
  1003  077C  1283               	bcf	3,5	;RP0=0, select bank0
  1004  077D  1303               	bcf	3,6	;RP1=0, select bank0
  1005  077E  0822               	movf	_y2,w
  1006  077F  3E01               	addlw	low ((_a-__stringbase)| (0+32768))
  1007  0780  0084               	movwf	4
  1008  0781  120A  118A  2003  120A  118A  	fcall	stringdir
  1009  0786  120A  118A  2362  120A  118A  	fcall	_mostrar
  1010  078B                     l1341:	
  1011                           
  1012                           ;Carcelero.c: 68:     colocar(9,2);
  1013  078B  3002               	movlw	2
  1014  078C  00F9               	movwf	??_luces
  1015  078D  0879               	movf	??_luces,w
  1016  078E  00F3               	movwf	colocar@y
  1017  078F  3009               	movlw	9
  1018  0790  120A  118A  2376  120A  118A  	fcall	_colocar
  1019  0795                     l1343:	
  1020                           
  1021                           ;Carcelero.c: 69:     mostrar(a[y3]);
  1022  0795  1283               	bcf	3,5	;RP0=0, select bank0
  1023  0796  1303               	bcf	3,6	;RP1=0, select bank0
  1024  0797  0820               	movf	_y3,w
  1025  0798  3E01               	addlw	low ((_a-__stringbase)| (0+32768))
  1026  0799  0084               	movwf	4
  1027  079A  120A  118A  2003  120A  118A  	fcall	stringdir
  1028  079F  120A  118A  2362  120A  118A  	fcall	_mostrar
  1029  07A4                     l1345:	
  1030                           
  1031                           ;Carcelero.c: 71:     if (Luz < 50)
  1032  07A4  3032               	movlw	50
  1033  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  1034  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  1035  07A7  0229               	subwf	_Luz,w
  1036  07A8  1803               	skipnc
  1037  07A9  2FAB               	goto	u701
  1038  07AA  2FAC               	goto	u700
  1039  07AB                     u701:	
  1040  07AB  2FCE               	goto	l1355
  1041  07AC                     u700:	
  1042  07AC                     l1347:	
  1043                           
  1044                           ;Carcelero.c: 72:     {;Carcelero.c: 73:         colocar(11,2);
  1045  07AC  3002               	movlw	2
  1046  07AD  00F9               	movwf	??_luces
  1047  07AE  0879               	movf	??_luces,w
  1048  07AF  00F3               	movwf	colocar@y
  1049  07B0  300B               	movlw	11
  1050  07B1  120A  118A  2376  120A  118A  	fcall	_colocar
  1051  07B6                     l1349:	
  1052                           
  1053                           ;Carcelero.c: 74:         imprimir("   ");
  1054  07B6  300D               	movlw	(low (((STR_5+2)-__stringbase)| (0+32768)))& (0+255)
  1055  07B7  120A  118A  23C8  120A  118A  	fcall	_imprimir
  1056  07BC                     l1351:	
  1057                           
  1058                           ;Carcelero.c: 75:         colocar(11,1);
  1059  07BC  01F3               	clrf	colocar@y
  1060  07BD  0AF3               	incf	colocar@y,f
  1061  07BE  300B               	movlw	11
  1062  07BF  120A  118A  2376  120A  118A  	fcall	_colocar
  1063                           
  1064                           ;Carcelero.c: 76:         imprimir("ON");
  1065  07C4  302A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1066  07C5  120A  118A  23C8  120A  118A  	fcall	_imprimir
  1067  07CA                     l1353:	
  1068                           
  1069                           ;Carcelero.c: 77:         PORTAbits.RA2 = 1;
  1070  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  1071  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  1072  07CC  1505               	bsf	5,2	;volatile
  1073                           
  1074                           ;Carcelero.c: 78:     }
  1075  07CD  2FEF               	goto	l122
  1076  07CE                     l1355:	
  1077                           
  1078                           ;Carcelero.c: 81:     {;Carcelero.c: 82:         colocar(11,1);
  1079  07CE  01F3               	clrf	colocar@y
  1080  07CF  0AF3               	incf	colocar@y,f
  1081  07D0  300B               	movlw	11
  1082  07D1  120A  118A  2376  120A  118A  	fcall	_colocar
  1083  07D6                     l1357:	
  1084                           
  1085                           ;Carcelero.c: 83:         imprimir("   ");
  1086  07D6  300D               	movlw	(low (((STR_5+2)-__stringbase)| (0+32768)))& (0+255)
  1087  07D7  120A  118A  23C8  120A  118A  	fcall	_imprimir
  1088  07DC                     l1359:	
  1089                           
  1090                           ;Carcelero.c: 84:         colocar(11,2);
  1091  07DC  3002               	movlw	2
  1092  07DD  00F9               	movwf	??_luces
  1093  07DE  0879               	movf	??_luces,w
  1094  07DF  00F3               	movwf	colocar@y
  1095  07E0  300B               	movlw	11
  1096  07E1  120A  118A  2376  120A  118A  	fcall	_colocar
  1097                           
  1098                           ;Carcelero.c: 85:         imprimir("OFF");
  1099  07E6  3022               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1100  07E7  120A  118A  23C8  120A  118A  	fcall	_imprimir
  1101  07EC                     l1361:	
  1102                           
  1103                           ;Carcelero.c: 86:         PORTAbits.RA2 = 0;
  1104  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  1105  07ED  1303               	bcf	3,6	;RP1=0, select bank0
  1106  07EE  1105               	bcf	5,2	;volatile
  1107  07EF                     l122:	
  1108  07EF  0008               	return
  1109  07F0                     __end_of_luces:	
  1110                           
  1111                           	psect	text3
  1112  0362                     __ptext3:	
  1113 ;; *************** function _mostrar *****************
  1114 ;; Defined at:
  1115 ;;		line 90 in file "./LCD.h"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;  t               1    wreg     const unsigned char 
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;  t               1    2[COMMON] const unsigned char 
  1120 ;; Return value:  Size  Location     Type
  1121 ;;                  1    wreg      void 
  1122 ;; Registers used:
  1123 ;;		wreg
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1129 ;;      Params:         0       0       0       0       0
  1130 ;;      Locals:         1       0       0       0       0
  1131 ;;      Temps:          2       0       0       0       0
  1132 ;;      Totals:         3       0       0       0       0
  1133 ;;Total ram usage:        3 bytes
  1134 ;; Hardware stack levels used:    1
  1135 ;; This function calls:
  1136 ;;		Nothing
  1137 ;; This function is called by:
  1138 ;;		_luces
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           
  1143                           ;psect for function _mostrar
  1144  0362                     _mostrar:	
  1145                           
  1146                           ;incstack = 0
  1147                           ; Regs used in _mostrar: [wreg]
  1148                           ;mostrar@t stored from wreg
  1149  0362  00F2               	movwf	mostrar@t
  1150  0363                     l1127:	
  1151                           
  1152                           ;./LCD.h: 90: void mostrar(const char t);./LCD.h: 91: {;./LCD.h: 92:     PORTDbits.RD6 =
      +                           1;
  1153  0363  1283               	bcf	3,5	;RP0=0, select bank0
  1154  0364  1303               	bcf	3,6	;RP1=0, select bank0
  1155  0365  1708               	bsf	8,6	;volatile
  1156  0366                     l1129:	
  1157                           
  1158                           ;./LCD.h: 93:     PORTB = t;
  1159  0366  0872               	movf	mostrar@t,w
  1160  0367  0086               	movwf	6	;volatile
  1161  0368                     l1131:	
  1162                           
  1163                           ;./LCD.h: 94:     PORTDbits.RD7 = 1;
  1164  0368  1788               	bsf	8,7	;volatile
  1165                           
  1166                           ;./LCD.h: 95:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1167  0369  3003               	movlw	3
  1168  036A  00F1               	movwf	??_mostrar+1
  1169  036B  3097               	movlw	151
  1170  036C  00F0               	movwf	??_mostrar
  1171  036D                     u757:	
  1172  036D  0BF0               	decfsz	??_mostrar,f
  1173  036E  2B6D               	goto	u757
  1174  036F  0BF1               	decfsz	??_mostrar+1,f
  1175  0370  2B6D               	goto	u757
  1176  0371  2B72               	nop2
  1177  0372                     l1133:	
  1178                           
  1179                           ;./LCD.h: 96:     PORTDbits.RD7 = 0;
  1180  0372  1283               	bcf	3,5	;RP0=0, select bank0
  1181  0373  1303               	bcf	3,6	;RP1=0, select bank0
  1182  0374  1388               	bcf	8,7	;volatile
  1183  0375                     l89:	
  1184  0375  0008               	return
  1185  0376                     __end_of_mostrar:	
  1186                           
  1187                           	psect	text4
  1188  04DA                     __ptext4:	
  1189 ;; *************** function ___awmod *****************
  1190 ;; Defined at:
  1191 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;  divisor         2    0[COMMON] int 
  1194 ;;  dividend        2    2[COMMON] int 
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;  sign            1    6[COMMON] unsigned char 
  1197 ;;  counter         1    5[COMMON] unsigned char 
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  2    0[COMMON] int 
  1200 ;; Registers used:
  1201 ;;		wreg, status,2, status,0
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1207 ;;      Params:         4       0       0       0       0
  1208 ;;      Locals:         2       0       0       0       0
  1209 ;;      Temps:          1       0       0       0       0
  1210 ;;      Totals:         7       0       0       0       0
  1211 ;;Total ram usage:        7 bytes
  1212 ;; Hardware stack levels used:    1
  1213 ;; This function calls:
  1214 ;;		Nothing
  1215 ;; This function is called by:
  1216 ;;		_luces
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           
  1221                           ;psect for function ___awmod
  1222  04DA                     ___awmod:	
  1223  04DA                     l1203:	
  1224                           ;incstack = 0
  1225                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1226                           
  1227  04DA  01F6               	clrf	___awmod@sign
  1228  04DB                     l1205:	
  1229  04DB  1FF3               	btfss	___awmod@dividend+1,7
  1230  04DC  2CDE               	goto	u591
  1231  04DD  2CDF               	goto	u590
  1232  04DE                     u591:	
  1233  04DE  2CE6               	goto	l1211
  1234  04DF                     u590:	
  1235  04DF                     l1207:	
  1236  04DF  09F2               	comf	___awmod@dividend,f
  1237  04E0  09F3               	comf	___awmod@dividend+1,f
  1238  04E1  0AF2               	incf	___awmod@dividend,f
  1239  04E2  1903               	skipnz
  1240  04E3  0AF3               	incf	___awmod@dividend+1,f
  1241  04E4                     l1209:	
  1242  04E4  01F6               	clrf	___awmod@sign
  1243  04E5  0AF6               	incf	___awmod@sign,f
  1244  04E6                     l1211:	
  1245  04E6  1FF1               	btfss	___awmod@divisor+1,7
  1246  04E7  2CE9               	goto	u601
  1247  04E8  2CEA               	goto	u600
  1248  04E9                     u601:	
  1249  04E9  2CEF               	goto	l1215
  1250  04EA                     u600:	
  1251  04EA                     l1213:	
  1252  04EA  09F0               	comf	___awmod@divisor,f
  1253  04EB  09F1               	comf	___awmod@divisor+1,f
  1254  04EC  0AF0               	incf	___awmod@divisor,f
  1255  04ED  1903               	skipnz
  1256  04EE  0AF1               	incf	___awmod@divisor+1,f
  1257  04EF                     l1215:	
  1258  04EF  0870               	movf	___awmod@divisor,w
  1259  04F0  0471               	iorwf	___awmod@divisor+1,w
  1260  04F1  1903               	btfsc	3,2
  1261  04F2  2CF4               	goto	u611
  1262  04F3  2CF5               	goto	u610
  1263  04F4                     u611:	
  1264  04F4  2D24               	goto	l1233
  1265  04F5                     u610:	
  1266  04F5                     l1217:	
  1267  04F5  01F5               	clrf	___awmod@counter
  1268  04F6  0AF5               	incf	___awmod@counter,f
  1269  04F7  2D03               	goto	l1223
  1270  04F8                     l1219:	
  1271  04F8  3001               	movlw	1
  1272  04F9                     u625:	
  1273  04F9  1003               	clrc
  1274  04FA  0DF0               	rlf	___awmod@divisor,f
  1275  04FB  0DF1               	rlf	___awmod@divisor+1,f
  1276  04FC  3EFF               	addlw	-1
  1277  04FD  1D03               	skipz
  1278  04FE  2CF9               	goto	u625
  1279  04FF                     l1221:	
  1280  04FF  3001               	movlw	1
  1281  0500  00F4               	movwf	??___awmod
  1282  0501  0874               	movf	??___awmod,w
  1283  0502  07F5               	addwf	___awmod@counter,f
  1284  0503                     l1223:	
  1285  0503  1FF1               	btfss	___awmod@divisor+1,7
  1286  0504  2D06               	goto	u631
  1287  0505  2D07               	goto	u630
  1288  0506                     u631:	
  1289  0506  2CF8               	goto	l1219
  1290  0507                     u630:	
  1291  0507                     l1225:	
  1292  0507  0871               	movf	___awmod@divisor+1,w
  1293  0508  0273               	subwf	___awmod@dividend+1,w
  1294  0509  1D03               	skipz
  1295  050A  2D0D               	goto	u645
  1296  050B  0870               	movf	___awmod@divisor,w
  1297  050C  0272               	subwf	___awmod@dividend,w
  1298  050D                     u645:	
  1299  050D  1C03               	skipc
  1300  050E  2D10               	goto	u641
  1301  050F  2D11               	goto	u640
  1302  0510                     u641:	
  1303  0510  2D17               	goto	l1229
  1304  0511                     u640:	
  1305  0511                     l1227:	
  1306  0511  0870               	movf	___awmod@divisor,w
  1307  0512  02F2               	subwf	___awmod@dividend,f
  1308  0513  0871               	movf	___awmod@divisor+1,w
  1309  0514  1C03               	skipc
  1310  0515  03F3               	decf	___awmod@dividend+1,f
  1311  0516  02F3               	subwf	___awmod@dividend+1,f
  1312  0517                     l1229:	
  1313  0517  3001               	movlw	1
  1314  0518                     u655:	
  1315  0518  1003               	clrc
  1316  0519  0CF1               	rrf	___awmod@divisor+1,f
  1317  051A  0CF0               	rrf	___awmod@divisor,f
  1318  051B  3EFF               	addlw	-1
  1319  051C  1D03               	skipz
  1320  051D  2D18               	goto	u655
  1321  051E                     l1231:	
  1322  051E  3001               	movlw	1
  1323  051F  02F5               	subwf	___awmod@counter,f
  1324  0520  1D03               	btfss	3,2
  1325  0521  2D23               	goto	u661
  1326  0522  2D24               	goto	u660
  1327  0523                     u661:	
  1328  0523  2D07               	goto	l1225
  1329  0524                     u660:	
  1330  0524                     l1233:	
  1331  0524  0876               	movf	___awmod@sign,w
  1332  0525  1903               	btfsc	3,2
  1333  0526  2D28               	goto	u671
  1334  0527  2D29               	goto	u670
  1335  0528                     u671:	
  1336  0528  2D2E               	goto	l1237
  1337  0529                     u670:	
  1338  0529                     l1235:	
  1339  0529  09F2               	comf	___awmod@dividend,f
  1340  052A  09F3               	comf	___awmod@dividend+1,f
  1341  052B  0AF2               	incf	___awmod@dividend,f
  1342  052C  1903               	skipnz
  1343  052D  0AF3               	incf	___awmod@dividend+1,f
  1344  052E                     l1237:	
  1345  052E  0873               	movf	___awmod@dividend+1,w
  1346  052F  00F1               	movwf	?___awmod+1
  1347  0530  0872               	movf	___awmod@dividend,w
  1348  0531  00F0               	movwf	?___awmod
  1349  0532                     l391:	
  1350  0532  0008               	return
  1351  0533                     __end_of___awmod:	
  1352                           
  1353                           	psect	text5
  1354  05FA                     __ptext5:	
  1355 ;; *************** function ___awdiv *****************
  1356 ;; Defined at:
  1357 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;  divisor         2    0[COMMON] int 
  1360 ;;  dividend        2    2[COMMON] int 
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  quotient        2    7[COMMON] int 
  1363 ;;  sign            1    6[COMMON] unsigned char 
  1364 ;;  counter         1    5[COMMON] unsigned char 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  2    0[COMMON] int 
  1367 ;; Registers used:
  1368 ;;		wreg, status,2, status,0
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1374 ;;      Params:         4       0       0       0       0
  1375 ;;      Locals:         4       0       0       0       0
  1376 ;;      Temps:          1       0       0       0       0
  1377 ;;      Totals:         9       0       0       0       0
  1378 ;;Total ram usage:        9 bytes
  1379 ;; Hardware stack levels used:    1
  1380 ;; This function calls:
  1381 ;;		Nothing
  1382 ;; This function is called by:
  1383 ;;		_luces
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           
  1388                           ;psect for function ___awdiv
  1389  05FA                     ___awdiv:	
  1390  05FA                     l1159:	
  1391                           ;incstack = 0
  1392                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1393                           
  1394  05FA  01F6               	clrf	___awdiv@sign
  1395  05FB                     l1161:	
  1396  05FB  1FF1               	btfss	___awdiv@divisor+1,7
  1397  05FC  2DFE               	goto	u491
  1398  05FD  2DFF               	goto	u490
  1399  05FE                     u491:	
  1400  05FE  2E06               	goto	l1167
  1401  05FF                     u490:	
  1402  05FF                     l1163:	
  1403  05FF  09F0               	comf	___awdiv@divisor,f
  1404  0600  09F1               	comf	___awdiv@divisor+1,f
  1405  0601  0AF0               	incf	___awdiv@divisor,f
  1406  0602  1903               	skipnz
  1407  0603  0AF1               	incf	___awdiv@divisor+1,f
  1408  0604                     l1165:	
  1409  0604  01F6               	clrf	___awdiv@sign
  1410  0605  0AF6               	incf	___awdiv@sign,f
  1411  0606                     l1167:	
  1412  0606  1FF3               	btfss	___awdiv@dividend+1,7
  1413  0607  2E09               	goto	u501
  1414  0608  2E0A               	goto	u500
  1415  0609                     u501:	
  1416  0609  2E13               	goto	l1173
  1417  060A                     u500:	
  1418  060A                     l1169:	
  1419  060A  09F2               	comf	___awdiv@dividend,f
  1420  060B  09F3               	comf	___awdiv@dividend+1,f
  1421  060C  0AF2               	incf	___awdiv@dividend,f
  1422  060D  1903               	skipnz
  1423  060E  0AF3               	incf	___awdiv@dividend+1,f
  1424  060F                     l1171:	
  1425  060F  3001               	movlw	1
  1426  0610  00F4               	movwf	??___awdiv
  1427  0611  0874               	movf	??___awdiv,w
  1428  0612  06F6               	xorwf	___awdiv@sign,f
  1429  0613                     l1173:	
  1430  0613  01F7               	clrf	___awdiv@quotient
  1431  0614  01F8               	clrf	___awdiv@quotient+1
  1432  0615                     l1175:	
  1433  0615  0870               	movf	___awdiv@divisor,w
  1434  0616  0471               	iorwf	___awdiv@divisor+1,w
  1435  0617  1903               	btfsc	3,2
  1436  0618  2E1A               	goto	u511
  1437  0619  2E1B               	goto	u510
  1438  061A                     u511:	
  1439  061A  2E52               	goto	l1195
  1440  061B                     u510:	
  1441  061B                     l1177:	
  1442  061B  01F5               	clrf	___awdiv@counter
  1443  061C  0AF5               	incf	___awdiv@counter,f
  1444  061D  2E29               	goto	l1183
  1445  061E                     l1179:	
  1446  061E  3001               	movlw	1
  1447  061F                     u525:	
  1448  061F  1003               	clrc
  1449  0620  0DF0               	rlf	___awdiv@divisor,f
  1450  0621  0DF1               	rlf	___awdiv@divisor+1,f
  1451  0622  3EFF               	addlw	-1
  1452  0623  1D03               	skipz
  1453  0624  2E1F               	goto	u525
  1454  0625                     l1181:	
  1455  0625  3001               	movlw	1
  1456  0626  00F4               	movwf	??___awdiv
  1457  0627  0874               	movf	??___awdiv,w
  1458  0628  07F5               	addwf	___awdiv@counter,f
  1459  0629                     l1183:	
  1460  0629  1FF1               	btfss	___awdiv@divisor+1,7
  1461  062A  2E2C               	goto	u531
  1462  062B  2E2D               	goto	u530
  1463  062C                     u531:	
  1464  062C  2E1E               	goto	l1179
  1465  062D                     u530:	
  1466  062D                     l1185:	
  1467  062D  3001               	movlw	1
  1468  062E                     u545:	
  1469  062E  1003               	clrc
  1470  062F  0DF7               	rlf	___awdiv@quotient,f
  1471  0630  0DF8               	rlf	___awdiv@quotient+1,f
  1472  0631  3EFF               	addlw	-1
  1473  0632  1D03               	skipz
  1474  0633  2E2E               	goto	u545
  1475  0634  0871               	movf	___awdiv@divisor+1,w
  1476  0635  0273               	subwf	___awdiv@dividend+1,w
  1477  0636  1D03               	skipz
  1478  0637  2E3A               	goto	u555
  1479  0638  0870               	movf	___awdiv@divisor,w
  1480  0639  0272               	subwf	___awdiv@dividend,w
  1481  063A                     u555:	
  1482  063A  1C03               	skipc
  1483  063B  2E3D               	goto	u551
  1484  063C  2E3E               	goto	u550
  1485  063D                     u551:	
  1486  063D  2E45               	goto	l1191
  1487  063E                     u550:	
  1488  063E                     l1187:	
  1489  063E  0870               	movf	___awdiv@divisor,w
  1490  063F  02F2               	subwf	___awdiv@dividend,f
  1491  0640  0871               	movf	___awdiv@divisor+1,w
  1492  0641  1C03               	skipc
  1493  0642  03F3               	decf	___awdiv@dividend+1,f
  1494  0643  02F3               	subwf	___awdiv@dividend+1,f
  1495  0644                     l1189:	
  1496  0644  1477               	bsf	___awdiv@quotient,0
  1497  0645                     l1191:	
  1498  0645  3001               	movlw	1
  1499  0646                     u565:	
  1500  0646  1003               	clrc
  1501  0647  0CF1               	rrf	___awdiv@divisor+1,f
  1502  0648  0CF0               	rrf	___awdiv@divisor,f
  1503  0649  3EFF               	addlw	-1
  1504  064A  1D03               	skipz
  1505  064B  2E46               	goto	u565
  1506  064C                     l1193:	
  1507  064C  3001               	movlw	1
  1508  064D  02F5               	subwf	___awdiv@counter,f
  1509  064E  1D03               	btfss	3,2
  1510  064F  2E51               	goto	u571
  1511  0650  2E52               	goto	u570
  1512  0651                     u571:	
  1513  0651  2E2D               	goto	l1185
  1514  0652                     u570:	
  1515  0652                     l1195:	
  1516  0652  0876               	movf	___awdiv@sign,w
  1517  0653  1903               	btfsc	3,2
  1518  0654  2E56               	goto	u581
  1519  0655  2E57               	goto	u580
  1520  0656                     u581:	
  1521  0656  2E5C               	goto	l1199
  1522  0657                     u580:	
  1523  0657                     l1197:	
  1524  0657  09F7               	comf	___awdiv@quotient,f
  1525  0658  09F8               	comf	___awdiv@quotient+1,f
  1526  0659  0AF7               	incf	___awdiv@quotient,f
  1527  065A  1903               	skipnz
  1528  065B  0AF8               	incf	___awdiv@quotient+1,f
  1529  065C                     l1199:	
  1530  065C  0878               	movf	___awdiv@quotient+1,w
  1531  065D  00F1               	movwf	?___awdiv+1
  1532  065E  0877               	movf	___awdiv@quotient,w
  1533  065F  00F0               	movwf	?___awdiv
  1534  0660                     l378:	
  1535  0660  0008               	return
  1536  0661                     __end_of___awdiv:	
  1537                           
  1538                           	psect	text6
  1539  0533                     __ptext6:	
  1540 ;; *************** function _iniciarOSC *****************
  1541 ;; Defined at:
  1542 ;;		line 5 in file "./Oscilador.h"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;  frec            1    wreg     unsigned char 
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;  frec            1    2[COMMON] unsigned char 
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  1    wreg      void 
  1549 ;; Registers used:
  1550 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1556 ;;      Params:         0       0       0       0       0
  1557 ;;      Locals:         1       0       0       0       0
  1558 ;;      Temps:          2       0       0       0       0
  1559 ;;      Totals:         3       0       0       0       0
  1560 ;;Total ram usage:        3 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; This function calls:
  1563 ;;		Nothing
  1564 ;; This function is called by:
  1565 ;;		_main
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           
  1570                           ;psect for function _iniciarOSC
  1571  0533                     _iniciarOSC:	
  1572                           
  1573                           ;incstack = 0
  1574                           ; Regs used in _iniciarOSC: [wreg-fsr0h+status,2+status,0]
  1575                           ;iniciarOSC@frec stored from wreg
  1576  0533  00F2               	movwf	iniciarOSC@frec
  1577  0534                     l1307:	
  1578                           
  1579                           ;./Oscilador.h: 5: void iniciarOSC(uint8_t frec);./Oscilador.h: 6: {;./Oscilador.h: 7:  
      +                             switch(frec)
  1580  0534  2D70               	goto	l1329
  1581  0535                     l1309:	
  1582                           
  1583                           ;./Oscilador.h: 10:             OSCCONbits.IRCF = 0b000;
  1584  0535  308F               	movlw	-113
  1585  0536  1683               	bsf	3,5	;RP0=1, select bank1
  1586  0537  1303               	bcf	3,6	;RP1=0, select bank1
  1587  0538  058F               	andwf	15,f	;volatile
  1588                           
  1589                           ;./Oscilador.h: 11:             break;
  1590  0539  2D92               	goto	l94
  1591  053A                     l1311:	
  1592                           
  1593                           ;./Oscilador.h: 14:             OSCCONbits.IRCF = 0b001;
  1594  053A  1683               	bsf	3,5	;RP0=1, select bank1
  1595  053B  1303               	bcf	3,6	;RP1=0, select bank1
  1596  053C  080F               	movf	15,w	;volatile
  1597  053D  398F               	andlw	-113
  1598  053E  3810               	iorlw	16
  1599  053F  008F               	movwf	15	;volatile
  1600                           
  1601                           ;./Oscilador.h: 15:             break;
  1602  0540  2D92               	goto	l94
  1603  0541                     l1313:	
  1604                           
  1605                           ;./Oscilador.h: 18:             OSCCONbits.IRCF = 0b010;
  1606  0541  1683               	bsf	3,5	;RP0=1, select bank1
  1607  0542  1303               	bcf	3,6	;RP1=0, select bank1
  1608  0543  080F               	movf	15,w	;volatile
  1609  0544  398F               	andlw	-113
  1610  0545  3820               	iorlw	32
  1611  0546  008F               	movwf	15	;volatile
  1612                           
  1613                           ;./Oscilador.h: 19:             break;
  1614  0547  2D92               	goto	l94
  1615  0548                     l1315:	
  1616                           
  1617                           ;./Oscilador.h: 22:             OSCCONbits.IRCF = 0b001;
  1618  0548  1683               	bsf	3,5	;RP0=1, select bank1
  1619  0549  1303               	bcf	3,6	;RP1=0, select bank1
  1620  054A  080F               	movf	15,w	;volatile
  1621  054B  398F               	andlw	-113
  1622  054C  3810               	iorlw	16
  1623  054D  008F               	movwf	15	;volatile
  1624                           
  1625                           ;./Oscilador.h: 23:             break;
  1626  054E  2D92               	goto	l94
  1627  054F                     l1317:	
  1628                           
  1629                           ;./Oscilador.h: 26:             OSCCONbits.IRCF = 0b100;
  1630  054F  1683               	bsf	3,5	;RP0=1, select bank1
  1631  0550  1303               	bcf	3,6	;RP1=0, select bank1
  1632  0551  080F               	movf	15,w	;volatile
  1633  0552  398F               	andlw	-113
  1634  0553  3840               	iorlw	64
  1635  0554  008F               	movwf	15	;volatile
  1636                           
  1637                           ;./Oscilador.h: 27:             break;
  1638  0555  2D92               	goto	l94
  1639  0556                     l1319:	
  1640                           
  1641                           ;./Oscilador.h: 30:             OSCCONbits.IRCF = 0b101;
  1642  0556  1683               	bsf	3,5	;RP0=1, select bank1
  1643  0557  1303               	bcf	3,6	;RP1=0, select bank1
  1644  0558  080F               	movf	15,w	;volatile
  1645  0559  398F               	andlw	-113
  1646  055A  3850               	iorlw	80
  1647  055B  008F               	movwf	15	;volatile
  1648                           
  1649                           ;./Oscilador.h: 31:             break;
  1650  055C  2D92               	goto	l94
  1651  055D                     l1321:	
  1652                           
  1653                           ;./Oscilador.h: 34:             OSCCONbits.IRCF = 0b110;
  1654  055D  1683               	bsf	3,5	;RP0=1, select bank1
  1655  055E  1303               	bcf	3,6	;RP1=0, select bank1
  1656  055F  080F               	movf	15,w	;volatile
  1657  0560  398F               	andlw	-113
  1658  0561  3860               	iorlw	96
  1659  0562  008F               	movwf	15	;volatile
  1660                           
  1661                           ;./Oscilador.h: 35:             break;
  1662  0563  2D92               	goto	l94
  1663  0564                     l1323:	
  1664                           
  1665                           ;./Oscilador.h: 38:             OSCCONbits.IRCF = 0b111;
  1666  0564  3070               	movlw	112
  1667  0565  1683               	bsf	3,5	;RP0=1, select bank1
  1668  0566  1303               	bcf	3,6	;RP1=0, select bank1
  1669  0567  048F               	iorwf	15,f	;volatile
  1670                           
  1671                           ;./Oscilador.h: 39:             break;
  1672  0568  2D92               	goto	l94
  1673  0569                     l1325:	
  1674                           
  1675                           ;./Oscilador.h: 42:             OSCCONbits.IRCF = 0b110;
  1676  0569  1683               	bsf	3,5	;RP0=1, select bank1
  1677  056A  1303               	bcf	3,6	;RP1=0, select bank1
  1678  056B  080F               	movf	15,w	;volatile
  1679  056C  398F               	andlw	-113
  1680  056D  3860               	iorlw	96
  1681  056E  008F               	movwf	15	;volatile
  1682                           
  1683                           ;./Oscilador.h: 43:             break;
  1684  056F  2D92               	goto	l94
  1685  0570                     l1329:	
  1686  0570  0872               	movf	iniciarOSC@frec,w
  1687  0571  00F0               	movwf	??_iniciarOSC
  1688  0572  01F1               	clrf	??_iniciarOSC+1
  1689                           
  1690                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1691                           ; Switch size 1, requested type "simple"
  1692                           ; Number of cases is 1, Range of values is 0 to 0
  1693                           ; switch strategies available:
  1694                           ; Name         Instructions Cycles
  1695                           ; simple_byte            4     3 (average)
  1696                           ; direct_byte           11     8 (fixed)
  1697                           ; jumptable            260     6 (fixed)
  1698                           ;	Chosen strategy is simple_byte
  1699  0573  0871               	movf	??_iniciarOSC+1,w
  1700  0574  3A00               	xorlw	0	; case 0
  1701  0575  1903               	skipnz
  1702  0576  2D78               	goto	l1451
  1703  0577  2D69               	goto	l1325
  1704  0578                     l1451:	
  1705                           
  1706                           ; Switch size 1, requested type "simple"
  1707                           ; Number of cases is 8, Range of values is 0 to 7
  1708                           ; switch strategies available:
  1709                           ; Name         Instructions Cycles
  1710                           ; simple_byte           25    13 (average)
  1711                           ; direct_byte           32     8 (fixed)
  1712                           ; jumptable            260     6 (fixed)
  1713                           ;	Chosen strategy is simple_byte
  1714  0578  0870               	movf	??_iniciarOSC,w
  1715  0579  3A00               	xorlw	0	; case 0
  1716  057A  1903               	skipnz
  1717  057B  2D35               	goto	l1309
  1718  057C  3A01               	xorlw	1	; case 1
  1719  057D  1903               	skipnz
  1720  057E  2D3A               	goto	l1311
  1721  057F  3A03               	xorlw	3	; case 2
  1722  0580  1903               	skipnz
  1723  0581  2D41               	goto	l1313
  1724  0582  3A01               	xorlw	1	; case 3
  1725  0583  1903               	skipnz
  1726  0584  2D48               	goto	l1315
  1727  0585  3A07               	xorlw	7	; case 4
  1728  0586  1903               	skipnz
  1729  0587  2D4F               	goto	l1317
  1730  0588  3A01               	xorlw	1	; case 5
  1731  0589  1903               	skipnz
  1732  058A  2D56               	goto	l1319
  1733  058B  3A03               	xorlw	3	; case 6
  1734  058C  1903               	skipnz
  1735  058D  2D5D               	goto	l1321
  1736  058E  3A01               	xorlw	1	; case 7
  1737  058F  1903               	skipnz
  1738  0590  2D64               	goto	l1323
  1739  0591  2D69               	goto	l1325
  1740  0592                     l94:	
  1741                           
  1742                           ;./Oscilador.h: 47:     OSCCONbits.SCS = 1;
  1743  0592  140F               	bsf	15,0	;volatile
  1744  0593                     l103:	
  1745  0593  0008               	return
  1746  0594                     __end_of_iniciarOSC:	
  1747                           
  1748                           	psect	text7
  1749  0431                     __ptext7:	
  1750 ;; *************** function _iniciarLCD *****************
  1751 ;; Defined at:
  1752 ;;		line 25 in file "./LCD.h"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;		None
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;		None
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  1    wreg      void 
  1759 ;; Registers used:
  1760 ;;		wreg, status,2, status,0, pclath, cstack
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1766 ;;      Params:         0       0       0       0       0
  1767 ;;      Locals:         0       0       0       0       0
  1768 ;;      Temps:          2       0       0       0       0
  1769 ;;      Totals:         2       0       0       0       0
  1770 ;;Total ram usage:        2 bytes
  1771 ;; Hardware stack levels used:    1
  1772 ;; Hardware stack levels required when called:    1
  1773 ;; This function calls:
  1774 ;;		_comando
  1775 ;; This function is called by:
  1776 ;;		_main
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           
  1781                           ;psect for function _iniciarLCD
  1782  0431                     _iniciarLCD:	
  1783  0431                     l1281:	
  1784                           ;incstack = 0
  1785                           ; Regs used in _iniciarLCD: [wreg+status,2+status,0+pclath+cstack]
  1786                           
  1787                           
  1788                           ;./LCD.h: 27:     PORTDbits.RD6 = 0;
  1789  0431  1283               	bcf	3,5	;RP0=0, select bank0
  1790  0432  1303               	bcf	3,6	;RP1=0, select bank0
  1791  0433  1308               	bcf	8,6	;volatile
  1792  0434                     l1283:	
  1793                           
  1794                           ;./LCD.h: 29:     comando(0);
  1795  0434  3000               	movlw	0
  1796  0435  120A  118A  234E  120A  118A  	fcall	_comando
  1797  043A                     l1285:	
  1798                           
  1799                           ;./LCD.h: 31:     _delay((unsigned long)((15)*(4000000/4000.0)));
  1800  043A  3014               	movlw	20
  1801  043B  00F4               	movwf	??_iniciarLCD+1
  1802  043C  3079               	movlw	121
  1803  043D  00F3               	movwf	??_iniciarLCD
  1804  043E                     u767:	
  1805  043E  0BF3               	decfsz	??_iniciarLCD,f
  1806  043F  2C3E               	goto	u767
  1807  0440  0BF4               	decfsz	??_iniciarLCD+1,f
  1808  0441  2C3E               	goto	u767
  1809  0442  2C43               	nop2
  1810  0443                     l1287:	
  1811                           
  1812                           ;./LCD.h: 33:     comando(0x30);
  1813  0443  3030               	movlw	48
  1814  0444  120A  118A  234E  120A  118A  	fcall	_comando
  1815                           
  1816                           ;./LCD.h: 34:     _delay((unsigned long)((4)*(4000000/4000.0)));
  1817  0449  3006               	movlw	6
  1818  044A  00F4               	movwf	??_iniciarLCD+1
  1819  044B  3030               	movlw	48
  1820  044C  00F3               	movwf	??_iniciarLCD
  1821  044D                     u777:	
  1822  044D  0BF3               	decfsz	??_iniciarLCD,f
  1823  044E  2C4D               	goto	u777
  1824  044F  0BF4               	decfsz	??_iniciarLCD+1,f
  1825  0450  2C4D               	goto	u777
  1826  0451  0000               	nop
  1827  0452                     l1289:	
  1828                           
  1829                           ;./LCD.h: 36:     comando(0x30);
  1830  0452  3030               	movlw	48
  1831  0453  120A  118A  234E  120A  118A  	fcall	_comando
  1832  0458                     l1291:	
  1833                           
  1834                           ;./LCD.h: 37:     _delay((unsigned long)((160)*(4000000/4000000.0)));
  1835  0458  3035               	movlw	53
  1836  0459  00F3               	movwf	??_iniciarLCD
  1837  045A                     u787:	
  1838  045A  0BF3               	decfsz	??_iniciarLCD,f
  1839  045B  2C5A               	goto	u787
  1840                           
  1841                           ;./LCD.h: 39:     comando(0x30);
  1842  045C  3030               	movlw	48
  1843  045D  120A  118A  234E  120A  118A  	fcall	_comando
  1844  0462                     l1293:	
  1845                           
  1846                           ;./LCD.h: 40:     _delay((unsigned long)((160)*(4000000/4000000.0)));
  1847  0462  3035               	movlw	53
  1848  0463  00F3               	movwf	??_iniciarLCD
  1849  0464                     u797:	
  1850  0464  0BF3               	decfsz	??_iniciarLCD,f
  1851  0465  2C64               	goto	u797
  1852  0466                     l1295:	
  1853                           
  1854                           ;./LCD.h: 42:     comando(0x38);
  1855  0466  3038               	movlw	56
  1856  0467  120A  118A  234E  120A  118A  	fcall	_comando
  1857  046C                     l1297:	
  1858                           
  1859                           ;./LCD.h: 44:     comando(0x10);
  1860  046C  3010               	movlw	16
  1861  046D  120A  118A  234E  120A  118A  	fcall	_comando
  1862  0472                     l1299:	
  1863                           
  1864                           ;./LCD.h: 46:     comando(0x01);
  1865  0472  3001               	movlw	1
  1866  0473  120A  118A  234E  120A  118A  	fcall	_comando
  1867  0478                     l1301:	
  1868                           
  1869                           ;./LCD.h: 48:     comando(0x06);
  1870  0478  3006               	movlw	6
  1871  0479  120A  118A  234E  120A  118A  	fcall	_comando
  1872  047E                     l1303:	
  1873                           
  1874                           ;./LCD.h: 50:     comando(0x0F);
  1875  047E  300F               	movlw	15
  1876  047F  120A  118A  234E  120A  118A  	fcall	_comando
  1877  0484                     l71:	
  1878  0484  0008               	return
  1879  0485                     __end_of_iniciarLCD:	
  1880                           
  1881                           	psect	text8
  1882  0485                     __ptext8:	
  1883 ;; *************** function _celda *****************
  1884 ;; Defined at:
  1885 ;;		line 90 in file "Carcelero.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;		None
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;		None
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1899 ;;      Params:         0       0       0       0       0
  1900 ;;      Locals:         0       0       0       0       0
  1901 ;;      Temps:          1       0       0       0       0
  1902 ;;      Totals:         1       0       0       0       0
  1903 ;;Total ram usage:        1 bytes
  1904 ;; Hardware stack levels used:    1
  1905 ;; Hardware stack levels required when called:    2
  1906 ;; This function calls:
  1907 ;;		_colocar
  1908 ;;		_imprimir
  1909 ;; This function is called by:
  1910 ;;		_main
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           
  1915                           ;psect for function _celda
  1916  0485                     _celda:	
  1917  0485                     l1363:	
  1918                           ;incstack = 0
  1919                           ; Regs used in _celda: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1920                           
  1921                           
  1922                           ;Carcelero.c: 92:     if (grados == 0)
  1923  0485  1283               	bcf	3,5	;RP0=0, select bank0
  1924  0486  1303               	bcf	3,6	;RP1=0, select bank0
  1925  0487  0828               	movf	_grados,w
  1926  0488  1D03               	btfss	3,2
  1927  0489  2C8B               	goto	u711
  1928  048A  2C8C               	goto	u710
  1929  048B                     u711:	
  1930  048B  2CB0               	goto	l1373
  1931  048C                     u710:	
  1932  048C                     l1365:	
  1933                           
  1934                           ;Carcelero.c: 93:     {;Carcelero.c: 94:         colocar(1,2);
  1935  048C  3002               	movlw	2
  1936  048D  00F7               	movwf	??_celda
  1937  048E  0877               	movf	??_celda,w
  1938  048F  00F3               	movwf	colocar@y
  1939  0490  3001               	movlw	1
  1940  0491  120A  118A  2376  120A  118A  	fcall	_colocar
  1941  0496                     l1367:	
  1942                           
  1943                           ;Carcelero.c: 95:         imprimir("     ");
  1944  0496  300B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1945  0497  120A  118A  23C8  120A  118A  	fcall	_imprimir
  1946  049C                     l1369:	
  1947                           
  1948                           ;Carcelero.c: 97:         PORTAbits.RA1 = 0;
  1949  049C  1283               	bcf	3,5	;RP0=0, select bank0
  1950  049D  1303               	bcf	3,6	;RP1=0, select bank0
  1951  049E  1085               	bcf	5,1	;volatile
  1952  049F                     l1371:	
  1953                           
  1954                           ;Carcelero.c: 99:         colocar(1,2);
  1955  049F  3002               	movlw	2
  1956  04A0  00F7               	movwf	??_celda
  1957  04A1  0877               	movf	??_celda,w
  1958  04A2  00F3               	movwf	colocar@y
  1959  04A3  3001               	movlw	1
  1960  04A4  120A  118A  2376  120A  118A  	fcall	_colocar
  1961                           
  1962                           ;Carcelero.c: 100:         imprimir("CLOSE");
  1963  04A9  3011               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1964  04AA  120A  118A  23C8  120A  118A  	fcall	_imprimir
  1965                           
  1966                           ;Carcelero.c: 101:     }
  1967  04AF  2CD9               	goto	l128
  1968  04B0                     l1373:	
  1969  04B0  305A               	movlw	90
  1970  04B1  0628               	xorwf	_grados,w
  1971  04B2  1D03               	btfss	3,2
  1972  04B3  2CB5               	goto	u721
  1973  04B4  2CB6               	goto	u720
  1974  04B5                     u721:	
  1975  04B5  2CD9               	goto	l128
  1976  04B6                     u720:	
  1977  04B6                     l1375:	
  1978                           
  1979                           ;Carcelero.c: 104:     {;Carcelero.c: 105:         colocar(1,2);
  1980  04B6  3002               	movlw	2
  1981  04B7  00F7               	movwf	??_celda
  1982  04B8  0877               	movf	??_celda,w
  1983  04B9  00F3               	movwf	colocar@y
  1984  04BA  3001               	movlw	1
  1985  04BB  120A  118A  2376  120A  118A  	fcall	_colocar
  1986  04C0                     l1377:	
  1987                           
  1988                           ;Carcelero.c: 106:         imprimir("     ");
  1989  04C0  300B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1990  04C1  120A  118A  23C8  120A  118A  	fcall	_imprimir
  1991  04C6                     l1379:	
  1992                           
  1993                           ;Carcelero.c: 108:         PORTAbits.RA1 = 1;
  1994  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  1995  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  1996  04C8  1485               	bsf	5,1	;volatile
  1997  04C9                     l1381:	
  1998                           
  1999                           ;Carcelero.c: 110:         colocar(1,2);
  2000  04C9  3002               	movlw	2
  2001  04CA  00F7               	movwf	??_celda
  2002  04CB  0877               	movf	??_celda,w
  2003  04CC  00F3               	movwf	colocar@y
  2004  04CD  3001               	movlw	1
  2005  04CE  120A  118A  2376  120A  118A  	fcall	_colocar
  2006                           
  2007                           ;Carcelero.c: 111:         imprimir("OPEN");
  2008  04D3  301D               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2009  04D4  120A  118A  23C8  120A  118A  	fcall	_imprimir
  2010  04D9                     l128:	
  2011  04D9  0008               	return
  2012  04DA                     __end_of_celda:	
  2013                           
  2014                           	psect	text9
  2015  03C8                     __ptext9:	
  2016 ;; *************** function _imprimir *****************
  2017 ;; Defined at:
  2018 ;;		line 78 in file "./LCD.h"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  texto           1    wreg     PTR const unsigned char 
  2021 ;;		 -> STR_10(4), STR_9(6), STR_8(5), STR_7(6), 
  2022 ;;		 -> STR_6(6), STR_5(6), STR_4(4), STR_3(4), 
  2023 ;;		 -> STR_2(3), STR_1(4), 
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;  texto           1    4[COMMON] PTR const unsigned char 
  2026 ;;		 -> STR_10(4), STR_9(6), STR_8(5), STR_7(6), 
  2027 ;;		 -> STR_6(6), STR_5(6), STR_4(4), STR_3(4), 
  2028 ;;		 -> STR_2(3), STR_1(4), 
  2029 ;;  i               2    2[COMMON] int 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2039 ;;      Params:         0       0       0       0       0
  2040 ;;      Locals:         3       0       0       0       0
  2041 ;;      Temps:          2       0       0       0       0
  2042 ;;      Totals:         5       0       0       0       0
  2043 ;;Total ram usage:        5 bytes
  2044 ;; Hardware stack levels used:    2
  2045 ;; This function calls:
  2046 ;;		Nothing
  2047 ;; This function is called by:
  2048 ;;		_luces
  2049 ;;		_celda
  2050 ;;		_main
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           
  2055                           ;psect for function _imprimir
  2056  03C8                     _imprimir:	
  2057                           
  2058                           ;incstack = 0
  2059                           ; Regs used in _imprimir: [wreg-fsr0h+status,2+status,0+pclath]
  2060                           ;imprimir@texto stored from wreg
  2061  03C8  00F4               	movwf	imprimir@texto
  2062  03C9                     l1115:	
  2063                           
  2064                           ;./LCD.h: 78: void imprimir(const char *texto);./LCD.h: 79: {;./LCD.h: 80:     for(int i
      +                           = 0; texto[i] != '\0'; i++)
  2065  03C9  01F2               	clrf	imprimir@i
  2066  03CA  01F3               	clrf	imprimir@i+1
  2067  03CB  2BEB               	goto	l83
  2068  03CC                     l84:	
  2069                           
  2070                           ;./LCD.h: 81:     {;./LCD.h: 82:         PORTDbits.RD6 = 1;
  2071  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  2072  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  2073  03CE  1708               	bsf	8,6	;volatile
  2074  03CF                     l1117:	
  2075                           
  2076                           ;./LCD.h: 83:         PORTB = texto[i];
  2077  03CF  0872               	movf	imprimir@i,w
  2078  03D0  0774               	addwf	imprimir@texto,w
  2079  03D1  0084               	movwf	4
  2080  03D2  120A  118A  2003  120A  118A  	fcall	stringdir
  2081  03D7  0086               	movwf	6	;volatile
  2082  03D8                     l1119:	
  2083                           
  2084                           ;./LCD.h: 84:         PORTDbits.RD7 = 1;
  2085  03D8  1788               	bsf	8,7	;volatile
  2086  03D9                     l1121:	
  2087                           
  2088                           ;./LCD.h: 85:         _delay((unsigned long)((2)*(4000000/4000.0)));
  2089  03D9  3003               	movlw	3
  2090  03DA  00F1               	movwf	??_imprimir+1
  2091  03DB  3097               	movlw	151
  2092  03DC  00F0               	movwf	??_imprimir
  2093  03DD                     u807:	
  2094  03DD  0BF0               	decfsz	??_imprimir,f
  2095  03DE  2BDD               	goto	u807
  2096  03DF  0BF1               	decfsz	??_imprimir+1,f
  2097  03E0  2BDD               	goto	u807
  2098  03E1  2BE2               	nop2
  2099  03E2                     l1123:	
  2100                           
  2101                           ;./LCD.h: 86:         PORTDbits.RD7 = 0;
  2102  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  2103  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  2104  03E4  1388               	bcf	8,7	;volatile
  2105  03E5                     l1125:	
  2106                           
  2107                           ;./LCD.h: 87:     }
  2108  03E5  3001               	movlw	1
  2109  03E6  07F2               	addwf	imprimir@i,f
  2110  03E7  1803               	skipnc
  2111  03E8  0AF3               	incf	imprimir@i+1,f
  2112  03E9  3000               	movlw	0
  2113  03EA  07F3               	addwf	imprimir@i+1,f
  2114  03EB                     l83:	
  2115  03EB  0872               	movf	imprimir@i,w
  2116  03EC  0774               	addwf	imprimir@texto,w
  2117  03ED  0084               	movwf	4
  2118  03EE  120A  118A  2003  120A  118A  	fcall	stringdir
  2119  03F3  3A00               	xorlw	0
  2120  03F4  1D03               	skipz
  2121  03F5  2BF7               	goto	u411
  2122  03F6  2BF8               	goto	u410
  2123  03F7                     u411:	
  2124  03F7  2BCC               	goto	l84
  2125  03F8                     u410:	
  2126  03F8                     l86:	
  2127  03F8  0008               	return
  2128  03F9                     __end_of_imprimir:	
  2129                           
  2130                           	psect	text10
  2131  0376                     __ptext10:	
  2132 ;; *************** function _colocar *****************
  2133 ;; Defined at:
  2134 ;;		line 62 in file "./LCD.h"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  x               1    wreg     const unsigned char 
  2137 ;;  y               1    3[COMMON] const unsigned char 
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;  x               1    5[COMMON] const unsigned char 
  2140 ;;  temp            1    6[COMMON] unsigned char 
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  1    wreg      void 
  2143 ;; Registers used:
  2144 ;;		wreg, status,2, status,0, pclath, cstack
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2150 ;;      Params:         1       0       0       0       0
  2151 ;;      Locals:         2       0       0       0       0
  2152 ;;      Temps:          1       0       0       0       0
  2153 ;;      Totals:         4       0       0       0       0
  2154 ;;Total ram usage:        4 bytes
  2155 ;; Hardware stack levels used:    1
  2156 ;; Hardware stack levels required when called:    1
  2157 ;; This function calls:
  2158 ;;		_comando
  2159 ;; This function is called by:
  2160 ;;		_luces
  2161 ;;		_celda
  2162 ;;		_main
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           
  2167                           ;psect for function _colocar
  2168  0376                     _colocar:	
  2169                           
  2170                           ;incstack = 0
  2171                           ; Regs used in _colocar: [wreg+status,2+status,0+pclath+cstack]
  2172                           ;colocar@x stored from wreg
  2173  0376  00F5               	movwf	colocar@x
  2174  0377                     l1103:	
  2175                           
  2176                           ;./LCD.h: 62: void colocar(const char x,const char y);./LCD.h: 63: {;./LCD.h: 64:     ch
      +                          ar temp;;./LCD.h: 66:     if (y == 1)
  2177  0377  0373               	decf	colocar@y,w
  2178  0378  1D03               	btfss	3,2
  2179  0379  2B7B               	goto	u391
  2180  037A  2B7C               	goto	u390
  2181  037B                     u391:	
  2182  037B  2B88               	goto	l1109
  2183  037C                     u390:	
  2184  037C                     l1105:	
  2185                           
  2186                           ;./LCD.h: 67:     {;./LCD.h: 68:         temp = 0x80 + x - 1;
  2187  037C  0875               	movf	colocar@x,w
  2188  037D  3E7F               	addlw	127
  2189  037E  00F4               	movwf	??_colocar
  2190  037F  0874               	movf	??_colocar,w
  2191  0380  00F6               	movwf	colocar@temp
  2192  0381                     l1107:	
  2193                           
  2194                           ;./LCD.h: 69:         comando(temp);
  2195  0381  0876               	movf	colocar@temp,w
  2196  0382  120A  118A  234E  120A  118A  	fcall	_comando
  2197                           
  2198                           ;./LCD.h: 70:     }
  2199  0387  2B99               	goto	l80
  2200  0388                     l1109:	
  2201  0388  3002               	movlw	2
  2202  0389  0673               	xorwf	colocar@y,w
  2203  038A  1D03               	btfss	3,2
  2204  038B  2B8D               	goto	u401
  2205  038C  2B8E               	goto	u400
  2206  038D                     u401:	
  2207  038D  2B99               	goto	l80
  2208  038E                     u400:	
  2209  038E                     l1111:	
  2210                           
  2211                           ;./LCD.h: 72:     {;./LCD.h: 73:         temp = 0xC0 + x - 1;
  2212  038E  0875               	movf	colocar@x,w
  2213  038F  3EBF               	addlw	191
  2214  0390  00F4               	movwf	??_colocar
  2215  0391  0874               	movf	??_colocar,w
  2216  0392  00F6               	movwf	colocar@temp
  2217  0393                     l1113:	
  2218                           
  2219                           ;./LCD.h: 74:         comando(temp);
  2220  0393  0876               	movf	colocar@temp,w
  2221  0394  120A  118A  234E  120A  118A  	fcall	_comando
  2222  0399                     l80:	
  2223  0399  0008               	return
  2224  039A                     __end_of_colocar:	
  2225                           
  2226                           	psect	text11
  2227  033B                     __ptext11:	
  2228 ;; *************** function _borrarv *****************
  2229 ;; Defined at:
  2230 ;;		line 54 in file "./LCD.h"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;		None
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;		None
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  1    wreg      void 
  2237 ;; Registers used:
  2238 ;;		wreg, status,2, status,0, pclath, cstack
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2244 ;;      Params:         0       0       0       0       0
  2245 ;;      Locals:         0       0       0       0       0
  2246 ;;      Temps:          0       0       0       0       0
  2247 ;;      Totals:         0       0       0       0       0
  2248 ;;Total ram usage:        0 bytes
  2249 ;; Hardware stack levels used:    1
  2250 ;; Hardware stack levels required when called:    1
  2251 ;; This function calls:
  2252 ;;		_comando
  2253 ;; This function is called by:
  2254 ;;		_main
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           
  2259                           ;psect for function _borrarv
  2260  033B                     _borrarv:	
  2261  033B                     l1305:	
  2262                           ;incstack = 0
  2263                           ; Regs used in _borrarv: [wreg+status,2+status,0+pclath+cstack]
  2264                           
  2265                           
  2266                           ;./LCD.h: 56:     comando(0);
  2267  033B  3000               	movlw	0
  2268  033C  120A  118A  234E  120A  118A  	fcall	_comando
  2269                           
  2270                           ;./LCD.h: 57:     comando(1);
  2271  0341  3001               	movlw	1
  2272  0342  120A  118A  234E  120A  118A  	fcall	_comando
  2273                           
  2274                           ;./LCD.h: 59:     comando(0x0C);
  2275  0347  300C               	movlw	12
  2276  0348  120A  118A  234E  120A  118A  	fcall	_comando
  2277  034D                     l74:	
  2278  034D  0008               	return
  2279  034E                     __end_of_borrarv:	
  2280                           
  2281                           	psect	text12
  2282  034E                     __ptext12:	
  2283 ;; *************** function _comando *****************
  2284 ;; Defined at:
  2285 ;;		line 16 in file "./LCD.h"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;  x               1    wreg     const unsigned char 
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;  x               1    2[COMMON] const unsigned char 
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  1    wreg      void 
  2292 ;; Registers used:
  2293 ;;		wreg
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2299 ;;      Params:         0       0       0       0       0
  2300 ;;      Locals:         1       0       0       0       0
  2301 ;;      Temps:          2       0       0       0       0
  2302 ;;      Totals:         3       0       0       0       0
  2303 ;;Total ram usage:        3 bytes
  2304 ;; Hardware stack levels used:    1
  2305 ;; This function calls:
  2306 ;;		Nothing
  2307 ;; This function is called by:
  2308 ;;		_iniciarLCD
  2309 ;;		_borrarv
  2310 ;;		_colocar
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           
  2315                           ;psect for function _comando
  2316  034E                     _comando:	
  2317                           
  2318                           ;incstack = 0
  2319                           ; Regs used in _comando: [wreg]
  2320                           ;comando@x stored from wreg
  2321  034E  00F2               	movwf	comando@x
  2322  034F                     l1091:	
  2323                           
  2324                           ;./LCD.h: 16: void comando(const char x);./LCD.h: 17: {;./LCD.h: 18:     PORTDbits.RD6 =
      +                           0;
  2325  034F  1283               	bcf	3,5	;RP0=0, select bank0
  2326  0350  1303               	bcf	3,6	;RP1=0, select bank0
  2327  0351  1308               	bcf	8,6	;volatile
  2328  0352                     l1093:	
  2329                           
  2330                           ;./LCD.h: 19:     PORTB = x;
  2331  0352  0872               	movf	comando@x,w
  2332  0353  0086               	movwf	6	;volatile
  2333  0354                     l1095:	
  2334                           
  2335                           ;./LCD.h: 20:     PORTDbits.RD7 = 1;
  2336  0354  1788               	bsf	8,7	;volatile
  2337                           
  2338                           ;./LCD.h: 21:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2339  0355  3006               	movlw	6
  2340  0356  00F1               	movwf	??_comando+1
  2341  0357  3030               	movlw	48
  2342  0358  00F0               	movwf	??_comando
  2343  0359                     u817:	
  2344  0359  0BF0               	decfsz	??_comando,f
  2345  035A  2B59               	goto	u817
  2346  035B  0BF1               	decfsz	??_comando+1,f
  2347  035C  2B59               	goto	u817
  2348  035D  0000               	nop
  2349  035E                     l1097:	
  2350                           
  2351                           ;./LCD.h: 22:     PORTDbits.RD7 = 0;
  2352  035E  1283               	bcf	3,5	;RP0=0, select bank0
  2353  035F  1303               	bcf	3,6	;RP1=0, select bank0
  2354  0360  1388               	bcf	8,7	;volatile
  2355  0361                     l68:	
  2356  0361  0008               	return
  2357  0362                     __end_of_comando:	
  2358                           
  2359                           	psect	text13
  2360  0312                     __ptext13:	
  2361 ;; *************** function _I2C_Master_Write *****************
  2362 ;; Defined at:
  2363 ;;		line 65 in file "./I2Cmaestro.h"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;  d               2    0[COMMON] unsigned int 
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;		None
  2368 ;; Return value:  Size  Location     Type
  2369 ;;                  1    wreg      void 
  2370 ;; Registers used:
  2371 ;;		wreg, status,2, status,0, pclath, cstack
  2372 ;; Tracked objects:
  2373 ;;		On entry : 0/0
  2374 ;;		On exit  : 0/0
  2375 ;;		Unchanged: 0/0
  2376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2377 ;;      Params:         2       0       0       0       0
  2378 ;;      Locals:         0       0       0       0       0
  2379 ;;      Temps:          0       0       0       0       0
  2380 ;;      Totals:         2       0       0       0       0
  2381 ;;Total ram usage:        2 bytes
  2382 ;; Hardware stack levels used:    1
  2383 ;; Hardware stack levels required when called:    1
  2384 ;; This function calls:
  2385 ;;		_I2C_Master_Wait
  2386 ;; This function is called by:
  2387 ;;		_main
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           
  2392                           ;psect for function _I2C_Master_Write
  2393  0312                     _I2C_Master_Write:	
  2394  0312                     l1261:	
  2395                           ;incstack = 0
  2396                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2397                           
  2398                           
  2399                           ;./I2Cmaestro.h: 65: void I2C_Master_Write(unsigned d);./I2Cmaestro.h: 66: {;./I2Cmaestr
      +                          o.h: 67:     I2C_Master_Wait();
  2400  0312  120A  118A  231C  120A  118A  	fcall	_I2C_Master_Wait
  2401  0317                     l1263:	
  2402                           
  2403                           ;./I2Cmaestro.h: 68:     SSPBUF = d;
  2404  0317  0870               	movf	I2C_Master_Write@d,w
  2405  0318  1283               	bcf	3,5	;RP0=0, select bank0
  2406  0319  1303               	bcf	3,6	;RP1=0, select bank0
  2407  031A  0093               	movwf	19	;volatile
  2408  031B                     l60:	
  2409  031B  0008               	return
  2410  031C                     __end_of_I2C_Master_Write:	
  2411                           
  2412                           	psect	text14
  2413  0309                     __ptext14:	
  2414 ;; *************** function _I2C_Master_Stop *****************
  2415 ;; Defined at:
  2416 ;;		line 55 in file "./I2Cmaestro.h"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;		None
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;		None
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      void 
  2423 ;; Registers used:
  2424 ;;		wreg, status,2, status,0, pclath, cstack
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2430 ;;      Params:         0       0       0       0       0
  2431 ;;      Locals:         0       0       0       0       0
  2432 ;;      Temps:          0       0       0       0       0
  2433 ;;      Totals:         0       0       0       0       0
  2434 ;;Total ram usage:        0 bytes
  2435 ;; Hardware stack levels used:    1
  2436 ;; Hardware stack levels required when called:    1
  2437 ;; This function calls:
  2438 ;;		_I2C_Master_Wait
  2439 ;; This function is called by:
  2440 ;;		_main
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444                           
  2445                           ;psect for function _I2C_Master_Stop
  2446  0309                     _I2C_Master_Stop:	
  2447  0309                     l1257:	
  2448                           ;incstack = 0
  2449                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2450                           
  2451                           
  2452                           ;./I2Cmaestro.h: 57:     I2C_Master_Wait();
  2453  0309  120A  118A  231C  120A  118A  	fcall	_I2C_Master_Wait
  2454  030E                     l1259:	
  2455                           
  2456                           ;./I2Cmaestro.h: 58:     SSPCON2bits.PEN = 1;
  2457  030E  1683               	bsf	3,5	;RP0=1, select bank1
  2458  030F  1303               	bcf	3,6	;RP1=0, select bank1
  2459  0310  1511               	bsf	17,2	;volatile
  2460  0311                     l57:	
  2461  0311  0008               	return
  2462  0312                     __end_of_I2C_Master_Stop:	
  2463                           
  2464                           	psect	text15
  2465  0300                     __ptext15:	
  2466 ;; *************** function _I2C_Master_Start *****************
  2467 ;; Defined at:
  2468 ;;		line 39 in file "./I2Cmaestro.h"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;		None
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;		None
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  1    wreg      void 
  2475 ;; Registers used:
  2476 ;;		wreg, status,2, status,0, pclath, cstack
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2482 ;;      Params:         0       0       0       0       0
  2483 ;;      Locals:         0       0       0       0       0
  2484 ;;      Temps:          0       0       0       0       0
  2485 ;;      Totals:         0       0       0       0       0
  2486 ;;Total ram usage:        0 bytes
  2487 ;; Hardware stack levels used:    1
  2488 ;; Hardware stack levels required when called:    1
  2489 ;; This function calls:
  2490 ;;		_I2C_Master_Wait
  2491 ;; This function is called by:
  2492 ;;		_main
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           
  2497                           ;psect for function _I2C_Master_Start
  2498  0300                     _I2C_Master_Start:	
  2499  0300                     l1253:	
  2500                           ;incstack = 0
  2501                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2502                           
  2503                           
  2504                           ;./I2Cmaestro.h: 41:     I2C_Master_Wait();
  2505  0300  120A  118A  231C  120A  118A  	fcall	_I2C_Master_Wait
  2506  0305                     l1255:	
  2507                           
  2508                           ;./I2Cmaestro.h: 42:     SSPCON2bits.SEN = 1;
  2509  0305  1683               	bsf	3,5	;RP0=1, select bank1
  2510  0306  1303               	bcf	3,6	;RP1=0, select bank1
  2511  0307  1411               	bsf	17,0	;volatile
  2512  0308                     l54:	
  2513  0308  0008               	return
  2514  0309                     __end_of_I2C_Master_Start:	
  2515                           
  2516                           	psect	text16
  2517  039A                     __ptext16:	
  2518 ;; *************** function _I2C_Master_Read *****************
  2519 ;; Defined at:
  2520 ;;		line 74 in file "./I2Cmaestro.h"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;  a               2    0[COMMON] unsigned short 
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;  temp            2    4[COMMON] unsigned short 
  2525 ;; Return value:  Size  Location     Type
  2526 ;;                  2    0[COMMON] unsigned short 
  2527 ;; Registers used:
  2528 ;;		wreg, status,2, status,0, pclath, cstack
  2529 ;; Tracked objects:
  2530 ;;		On entry : 0/0
  2531 ;;		On exit  : 0/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2534 ;;      Params:         2       0       0       0       0
  2535 ;;      Locals:         2       0       0       0       0
  2536 ;;      Temps:          2       0       0       0       0
  2537 ;;      Totals:         6       0       0       0       0
  2538 ;;Total ram usage:        6 bytes
  2539 ;; Hardware stack levels used:    1
  2540 ;; Hardware stack levels required when called:    1
  2541 ;; This function calls:
  2542 ;;		_I2C_Master_Wait
  2543 ;; This function is called by:
  2544 ;;		_main
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           
  2549                           ;psect for function _I2C_Master_Read
  2550  039A                     _I2C_Master_Read:	
  2551  039A                     l1265:	
  2552                           ;incstack = 0
  2553                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2554                           
  2555                           
  2556                           ;./I2Cmaestro.h: 74: unsigned short I2C_Master_Read(unsigned short a);./I2Cmaestro.h: 75
      +                          : {;./I2Cmaestro.h: 76:     unsigned short temp;;./I2Cmaestro.h: 77:     I2C_Master_Wait
      +                          ();
  2557  039A  120A  118A  231C  120A  118A  	fcall	_I2C_Master_Wait
  2558  039F                     l1267:	
  2559                           
  2560                           ;./I2Cmaestro.h: 78:     SSPCON2bits.RCEN = 1;
  2561  039F  1683               	bsf	3,5	;RP0=1, select bank1
  2562  03A0  1303               	bcf	3,6	;RP1=0, select bank1
  2563  03A1  1591               	bsf	17,3	;volatile
  2564                           
  2565                           ;./I2Cmaestro.h: 79:     I2C_Master_Wait();
  2566  03A2  120A  118A  231C  120A  118A  	fcall	_I2C_Master_Wait
  2567  03A7                     l1269:	
  2568                           
  2569                           ;./I2Cmaestro.h: 80:     temp = SSPBUF;
  2570  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  2571  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  2572  03A9  0813               	movf	19,w	;volatile
  2573  03AA  00F2               	movwf	??_I2C_Master_Read
  2574  03AB  01F3               	clrf	??_I2C_Master_Read+1
  2575  03AC  0872               	movf	??_I2C_Master_Read,w
  2576  03AD  00F4               	movwf	I2C_Master_Read@temp
  2577  03AE  0873               	movf	??_I2C_Master_Read+1,w
  2578  03AF  00F5               	movwf	I2C_Master_Read@temp+1
  2579  03B0                     l1271:	
  2580                           
  2581                           ;./I2Cmaestro.h: 81:     I2C_Master_Wait();
  2582  03B0  120A  118A  231C  120A  118A  	fcall	_I2C_Master_Wait
  2583  03B5                     l1273:	
  2584                           
  2585                           ;./I2Cmaestro.h: 82:     if(a == 1){
  2586  03B5  0370               	decf	I2C_Master_Read@a,w
  2587  03B6  0471               	iorwf	I2C_Master_Read@a+1,w
  2588  03B7  1D03               	btfss	3,2
  2589  03B8  2BBA               	goto	u691
  2590  03B9  2BBB               	goto	u690
  2591  03BA                     u691:	
  2592  03BA  2BBF               	goto	l63
  2593  03BB                     u690:	
  2594  03BB                     l1275:	
  2595                           
  2596                           ;./I2Cmaestro.h: 83:         SSPCON2bits.ACKDT = 0;
  2597  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  2598  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  2599  03BD  1291               	bcf	17,5	;volatile
  2600                           
  2601                           ;./I2Cmaestro.h: 84:     }else{
  2602  03BE  2BC2               	goto	l64
  2603  03BF                     l63:	
  2604                           
  2605                           ;./I2Cmaestro.h: 85:         SSPCON2bits.ACKDT = 1;
  2606  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  2607  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  2608  03C1  1691               	bsf	17,5	;volatile
  2609  03C2                     l64:	
  2610                           ;./I2Cmaestro.h: 86:     }
  2611                           
  2612                           
  2613                           ;./I2Cmaestro.h: 87:     SSPCON2bits.ACKEN = 1;
  2614  03C2  1611               	bsf	17,4	;volatile
  2615  03C3                     l1277:	
  2616                           
  2617                           ;./I2Cmaestro.h: 88:     return temp;
  2618  03C3  0875               	movf	I2C_Master_Read@temp+1,w
  2619  03C4  00F1               	movwf	?_I2C_Master_Read+1
  2620  03C5  0874               	movf	I2C_Master_Read@temp,w
  2621  03C6  00F0               	movwf	?_I2C_Master_Read
  2622  03C7                     l65:	
  2623  03C7  0008               	return
  2624  03C8                     __end_of_I2C_Master_Read:	
  2625                           
  2626                           	psect	text17
  2627  031C                     __ptext17:	
  2628 ;; *************** function _I2C_Master_Wait *****************
  2629 ;; Defined at:
  2630 ;;		line 32 in file "./I2Cmaestro.h"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;		None
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;		None
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  1    wreg      void 
  2637 ;; Registers used:
  2638 ;;		wreg, status,2
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2644 ;;      Params:         0       0       0       0       0
  2645 ;;      Locals:         0       0       0       0       0
  2646 ;;      Temps:          0       0       0       0       0
  2647 ;;      Totals:         0       0       0       0       0
  2648 ;;Total ram usage:        0 bytes
  2649 ;; Hardware stack levels used:    1
  2650 ;; This function calls:
  2651 ;;		Nothing
  2652 ;; This function is called by:
  2653 ;;		_I2C_Master_Start
  2654 ;;		_I2C_Master_Stop
  2655 ;;		_I2C_Master_Write
  2656 ;;		_I2C_Master_Read
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           
  2661                           ;psect for function _I2C_Master_Wait
  2662  031C                     _I2C_Master_Wait:	
  2663  031C                     l1099:	
  2664                           ;incstack = 0
  2665                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2666                           
  2667  031C                     l48:	
  2668                           ;./I2Cmaestro.h: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2669                           
  2670  031C  1683               	bsf	3,5	;RP0=1, select bank1
  2671  031D  1303               	bcf	3,6	;RP1=0, select bank1
  2672  031E  1914               	btfsc	20,2	;volatile
  2673  031F  2B21               	goto	u371
  2674  0320  2B22               	goto	u370
  2675  0321                     u371:	
  2676  0321  2B1C               	goto	l48
  2677  0322                     u370:	
  2678  0322                     l1101:	
  2679  0322  0811               	movf	17,w	;volatile
  2680  0323  391F               	andlw	31
  2681  0324  1D03               	btfss	3,2
  2682  0325  2B27               	goto	u381
  2683  0326  2B28               	goto	u380
  2684  0327                     u381:	
  2685  0327  2B1C               	goto	l48
  2686  0328                     u380:	
  2687  0328                     l51:	
  2688  0328  0008               	return
  2689  0329                     __end_of_I2C_Master_Wait:	
  2690                           
  2691                           	psect	text18
  2692  03F9                     __ptext18:	
  2693 ;; *************** function _I2C_Master_Init *****************
  2694 ;; Defined at:
  2695 ;;		line 16 in file "./I2Cmaestro.h"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;  c               4    0[BANK0 ] const unsigned long 
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;		None
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  1    wreg      void 
  2702 ;; Registers used:
  2703 ;;		wreg, status,2, status,0, pclath, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2709 ;;      Params:         0       4       0       0       0
  2710 ;;      Locals:         0       0       0       0       0
  2711 ;;      Temps:          0       4       0       0       0
  2712 ;;      Totals:         0       8       0       0       0
  2713 ;;Total ram usage:        8 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    1
  2716 ;; This function calls:
  2717 ;;		___lldiv
  2718 ;; This function is called by:
  2719 ;;		_main
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           
  2724                           ;psect for function _I2C_Master_Init
  2725  03F9                     _I2C_Master_Init:	
  2726  03F9                     l1241:	
  2727                           ;incstack = 0
  2728                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2729                           
  2730                           
  2731                           ;./I2Cmaestro.h: 16: void I2C_Master_Init(const unsigned long c);./I2Cmaestro.h: 17: {;.
      +                          /I2Cmaestro.h: 18:     SSPCON = 0b00101000;
  2732  03F9  3028               	movlw	40
  2733  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2734  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2735  03FC  0094               	movwf	20	;volatile
  2736  03FD                     l1243:	
  2737                           
  2738                           ;./I2Cmaestro.h: 19:     SSPCON2 = 0;
  2739  03FD  1683               	bsf	3,5	;RP0=1, select bank1
  2740  03FE  1303               	bcf	3,6	;RP1=0, select bank1
  2741  03FF  0191               	clrf	17	;volatile
  2742  0400                     l1245:	
  2743                           
  2744                           ;./I2Cmaestro.h: 20:     SSPADD = (4000000/(4*c))-1;
  2745  0400  1283               	bcf	3,5	;RP0=0, select bank0
  2746  0401  1303               	bcf	3,6	;RP1=0, select bank0
  2747  0402  082A               	movf	I2C_Master_Init@c,w
  2748  0403  00AE               	movwf	??_I2C_Master_Init
  2749  0404  082B               	movf	I2C_Master_Init@c+1,w
  2750  0405  00AF               	movwf	??_I2C_Master_Init+1
  2751  0406  082C               	movf	I2C_Master_Init@c+2,w
  2752  0407  00B0               	movwf	??_I2C_Master_Init+2
  2753  0408  082D               	movf	I2C_Master_Init@c+3,w
  2754  0409  00B1               	movwf	??_I2C_Master_Init+3
  2755  040A  3002               	movlw	2
  2756  040B                     u685:	
  2757  040B  1003               	clrc
  2758  040C  0DAE               	rlf	??_I2C_Master_Init,f
  2759  040D  0DAF               	rlf	??_I2C_Master_Init+1,f
  2760  040E  0DB0               	rlf	??_I2C_Master_Init+2,f
  2761  040F  0DB1               	rlf	??_I2C_Master_Init+3,f
  2762  0410                     u680:	
  2763  0410  3EFF               	addlw	-1
  2764  0411  1D03               	skipz
  2765  0412  2C0B               	goto	u685
  2766  0413  0831               	movf	??_I2C_Master_Init+3,w
  2767  0414  00F3               	movwf	___lldiv@divisor+3
  2768  0415  0830               	movf	??_I2C_Master_Init+2,w
  2769  0416  00F2               	movwf	___lldiv@divisor+2
  2770  0417  082F               	movf	??_I2C_Master_Init+1,w
  2771  0418  00F1               	movwf	___lldiv@divisor+1
  2772  0419  082E               	movf	??_I2C_Master_Init,w
  2773  041A  00F0               	movwf	___lldiv@divisor
  2774  041B  3000               	movlw	0
  2775  041C  00F7               	movwf	___lldiv@dividend+3
  2776  041D  303D               	movlw	61
  2777  041E  00F6               	movwf	___lldiv@dividend+2
  2778  041F  3009               	movlw	9
  2779  0420  00F5               	movwf	___lldiv@dividend+1
  2780  0421  3000               	movlw	0
  2781  0422  00F4               	movwf	___lldiv@dividend
  2782  0423  120A  118A  2594  120A  118A  	fcall	___lldiv
  2783  0428  0870               	movf	?___lldiv,w
  2784  0429  3EFF               	addlw	255
  2785  042A  1683               	bsf	3,5	;RP0=1, select bank1
  2786  042B  1303               	bcf	3,6	;RP1=0, select bank1
  2787  042C  0093               	movwf	19	;volatile
  2788  042D                     l1247:	
  2789                           
  2790                           ;./I2Cmaestro.h: 21:     SSPSTAT = 0;
  2791  042D  0194               	clrf	20	;volatile
  2792  042E                     l1249:	
  2793                           
  2794                           ;./I2Cmaestro.h: 22:     TRISCbits.TRISC3 = 1;
  2795  042E  1587               	bsf	7,3	;volatile
  2796  042F                     l1251:	
  2797                           
  2798                           ;./I2Cmaestro.h: 23:     TRISCbits.TRISC4 = 1;
  2799  042F  1607               	bsf	7,4	;volatile
  2800  0430                     l45:	
  2801  0430  0008               	return
  2802  0431                     __end_of_I2C_Master_Init:	
  2803                           
  2804                           	psect	text19
  2805  0594                     __ptext19:	
  2806 ;; *************** function ___lldiv *****************
  2807 ;; Defined at:
  2808 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;  divisor         4    0[COMMON] unsigned long 
  2811 ;;  dividend        4    4[COMMON] unsigned long 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  quotient        4    9[COMMON] unsigned long 
  2814 ;;  counter         1   13[COMMON] unsigned char 
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  4    0[COMMON] unsigned long 
  2817 ;; Registers used:
  2818 ;;		wreg, status,2, status,0
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2824 ;;      Params:         8       0       0       0       0
  2825 ;;      Locals:         5       0       0       0       0
  2826 ;;      Temps:          1       0       0       0       0
  2827 ;;      Totals:        14       0       0       0       0
  2828 ;;Total ram usage:       14 bytes
  2829 ;; Hardware stack levels used:    1
  2830 ;; This function calls:
  2831 ;;		Nothing
  2832 ;; This function is called by:
  2833 ;;		_I2C_Master_Init
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           
  2838                           ;psect for function ___lldiv
  2839  0594                     ___lldiv:	
  2840  0594                     l1135:	
  2841                           ;incstack = 0
  2842                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2843                           
  2844  0594  3000               	movlw	0
  2845  0595  00FC               	movwf	___lldiv@quotient+3
  2846  0596  3000               	movlw	0
  2847  0597  00FB               	movwf	___lldiv@quotient+2
  2848  0598  3000               	movlw	0
  2849  0599  00FA               	movwf	___lldiv@quotient+1
  2850  059A  3000               	movlw	0
  2851  059B  00F9               	movwf	___lldiv@quotient
  2852  059C  0873               	movf	___lldiv@divisor+3,w
  2853  059D  0472               	iorwf	___lldiv@divisor+2,w
  2854  059E  0471               	iorwf	___lldiv@divisor+1,w
  2855  059F  0470               	iorwf	___lldiv@divisor,w
  2856  05A0  1903               	skipnz
  2857  05A1  2DA3               	goto	u421
  2858  05A2  2DA4               	goto	u420
  2859  05A3                     u421:	
  2860  05A3  2DF1               	goto	l1155
  2861  05A4                     u420:	
  2862  05A4                     l1137:	
  2863  05A4  01FD               	clrf	___lldiv@counter
  2864  05A5  0AFD               	incf	___lldiv@counter,f
  2865  05A6  2DB4               	goto	l1141
  2866  05A7                     l1139:	
  2867  05A7  3001               	movlw	1
  2868  05A8  00F8               	movwf	??___lldiv
  2869  05A9                     u435:	
  2870  05A9  1003               	clrc
  2871  05AA  0DF0               	rlf	___lldiv@divisor,f
  2872  05AB  0DF1               	rlf	___lldiv@divisor+1,f
  2873  05AC  0DF2               	rlf	___lldiv@divisor+2,f
  2874  05AD  0DF3               	rlf	___lldiv@divisor+3,f
  2875  05AE  0BF8               	decfsz	??___lldiv,f
  2876  05AF  2DA9               	goto	u435
  2877  05B0  3001               	movlw	1
  2878  05B1  00F8               	movwf	??___lldiv
  2879  05B2  0878               	movf	??___lldiv,w
  2880  05B3  07FD               	addwf	___lldiv@counter,f
  2881  05B4                     l1141:	
  2882  05B4  1FF3               	btfss	___lldiv@divisor+3,7
  2883  05B5  2DB7               	goto	u441
  2884  05B6  2DB8               	goto	u440
  2885  05B7                     u441:	
  2886  05B7  2DA7               	goto	l1139
  2887  05B8                     u440:	
  2888  05B8                     l1143:	
  2889  05B8  3001               	movlw	1
  2890  05B9  00F8               	movwf	??___lldiv
  2891  05BA                     u455:	
  2892  05BA  1003               	clrc
  2893  05BB  0DF9               	rlf	___lldiv@quotient,f
  2894  05BC  0DFA               	rlf	___lldiv@quotient+1,f
  2895  05BD  0DFB               	rlf	___lldiv@quotient+2,f
  2896  05BE  0DFC               	rlf	___lldiv@quotient+3,f
  2897  05BF  0BF8               	decfsz	??___lldiv,f
  2898  05C0  2DBA               	goto	u455
  2899  05C1                     l1145:	
  2900  05C1  0873               	movf	___lldiv@divisor+3,w
  2901  05C2  0277               	subwf	___lldiv@dividend+3,w
  2902  05C3  1D03               	skipz
  2903  05C4  2DCF               	goto	u465
  2904  05C5  0872               	movf	___lldiv@divisor+2,w
  2905  05C6  0276               	subwf	___lldiv@dividend+2,w
  2906  05C7  1D03               	skipz
  2907  05C8  2DCF               	goto	u465
  2908  05C9  0871               	movf	___lldiv@divisor+1,w
  2909  05CA  0275               	subwf	___lldiv@dividend+1,w
  2910  05CB  1D03               	skipz
  2911  05CC  2DCF               	goto	u465
  2912  05CD  0870               	movf	___lldiv@divisor,w
  2913  05CE  0274               	subwf	___lldiv@dividend,w
  2914  05CF                     u465:	
  2915  05CF  1C03               	skipc
  2916  05D0  2DD2               	goto	u461
  2917  05D1  2DD3               	goto	u460
  2918  05D2                     u461:	
  2919  05D2  2DE2               	goto	l1151
  2920  05D3                     u460:	
  2921  05D3                     l1147:	
  2922  05D3  0870               	movf	___lldiv@divisor,w
  2923  05D4  02F4               	subwf	___lldiv@dividend,f
  2924  05D5  0871               	movf	___lldiv@divisor+1,w
  2925  05D6  1C03               	skipc
  2926  05D7  0F71               	incfsz	___lldiv@divisor+1,w
  2927  05D8  02F5               	subwf	___lldiv@dividend+1,f
  2928  05D9  0872               	movf	___lldiv@divisor+2,w
  2929  05DA  1C03               	skipc
  2930  05DB  0F72               	incfsz	___lldiv@divisor+2,w
  2931  05DC  02F6               	subwf	___lldiv@dividend+2,f
  2932  05DD  0873               	movf	___lldiv@divisor+3,w
  2933  05DE  1C03               	skipc
  2934  05DF  0F73               	incfsz	___lldiv@divisor+3,w
  2935  05E0  02F7               	subwf	___lldiv@dividend+3,f
  2936  05E1                     l1149:	
  2937  05E1  1479               	bsf	___lldiv@quotient,0
  2938  05E2                     l1151:	
  2939  05E2  3001               	movlw	1
  2940  05E3                     u475:	
  2941  05E3  1003               	clrc
  2942  05E4  0CF3               	rrf	___lldiv@divisor+3,f
  2943  05E5  0CF2               	rrf	___lldiv@divisor+2,f
  2944  05E6  0CF1               	rrf	___lldiv@divisor+1,f
  2945  05E7  0CF0               	rrf	___lldiv@divisor,f
  2946  05E8  3EFF               	addlw	-1
  2947  05E9  1D03               	skipz
  2948  05EA  2DE3               	goto	u475
  2949  05EB                     l1153:	
  2950  05EB  3001               	movlw	1
  2951  05EC  02FD               	subwf	___lldiv@counter,f
  2952  05ED  1D03               	btfss	3,2
  2953  05EE  2DF0               	goto	u481
  2954  05EF  2DF1               	goto	u480
  2955  05F0                     u481:	
  2956  05F0  2DB8               	goto	l1143
  2957  05F1                     u480:	
  2958  05F1                     l1155:	
  2959  05F1  087C               	movf	___lldiv@quotient+3,w
  2960  05F2  00F3               	movwf	?___lldiv+3
  2961  05F3  087B               	movf	___lldiv@quotient+2,w
  2962  05F4  00F2               	movwf	?___lldiv+2
  2963  05F5  087A               	movf	___lldiv@quotient+1,w
  2964  05F6  00F1               	movwf	?___lldiv+1
  2965  05F7  0879               	movf	___lldiv@quotient,w
  2966  05F8  00F0               	movwf	?___lldiv
  2967  05F9                     l261:	
  2968  05F9  0008               	return
  2969  05FA                     __end_of___lldiv:	
  2970  007E                     btemp	set	126	;btemp
  2971  007E                     wtemp0	set	126


Data Sizes:
    Strings     34
    Constant    10
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    imprimir@texto	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_10(CODE[4]), STR_9(CODE[6]), STR_8(CODE[5]), STR_7(CODE[6]), 
		 -> STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _luces->___awdiv
    _iniciarLCD->_comando
    _celda->_colocar
    _colocar->_comando
    _borrarv->_comando
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6767
                                              8 BANK0      2     2      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _borrarv
                              _celda
                            _colocar
                           _imprimir
                         _iniciarLCD
                         _iniciarOSC
                              _luces
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _luces                                                2     2      0    2790
                                              9 COMMON     2     2      0
                            ___awdiv
                            ___awmod
                            _colocar
                           _imprimir
                            _mostrar
 ---------------------------------------------------------------------------------
 (2) _mostrar                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _iniciarOSC                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _iniciarLCD                                           2     2      0      22
                                              3 COMMON     2     2      0
                            _comando
 ---------------------------------------------------------------------------------
 (1) _celda                                                1     1      0    1564
                                              7 COMMON     1     1      0
                            _colocar
                           _imprimir
 ---------------------------------------------------------------------------------
 (3) _imprimir                                             5     5      0     420
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _colocar                                              4     3      1    1144
                                              3 COMMON     4     3      1
                            _comando
 ---------------------------------------------------------------------------------
 (1) _borrarv                                              0     0      0      22
                            _comando
 ---------------------------------------------------------------------------------
 (3) _comando                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     174
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _borrarv
     _comando
   _celda
     _colocar
       _comando
     _imprimir
   _colocar
     _comando
   _imprimir
   _iniciarLCD
     _comando
   _iniciarOSC
   _luces
     ___awdiv
     ___awmod
     _colocar
       _comando
     _imprimir
     _mostrar
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      22       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A      14       5       25.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      22      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Mar 16 22:22:05 2020

                        _a 0009                          _y 0026                          pc 0002  
              __CFG_CP$OFF 0000                         l51 0328                         l60 031B  
                       l45 0430                         l54 0308                         l63 03BF  
                       l71 0484                         l48 031C                         l64 03C2  
                       l80 0399                         l65 03C7                         l57 0311  
                       l74 034D                         l83 03EB                         l68 0361  
                       l84 03CC                         l86 03F8                         l94 0592  
                       l89 0375               ___awdiv@sign 0076                         _y1 0024  
                       _y2 0022                         _y3 0020                         fsr 0004  
                      l103 0593                        l122 07EF                        l131 033A  
                      l128 04D9                        l261 05F9                        l391 0532  
                      l378 0660                        u400 038E                        u401 038D  
                      u410 03F8                        u411 03F7                        u420 05A4  
                      u500 060A                        u421 05A3                        u501 0609  
                      u510 061B                        u511 061A                        u440 05B8  
                      u600 04EA                        u441 05B7                        u601 04E9  
                      u370 0322                        u530 062D                        u610 04F5  
             __CFG_CPD$OFF 0000                        u435 05A9                        u371 0321  
                      u531 062C                        u611 04F4                        u460 05D3  
                      u380 0328                        u700 07AC                        u461 05D2  
                      u381 0327                        u525 061F                        u701 07AB  
                      u390 037C                        u710 048C                        u550 063E  
                      u630 0507                        u455 05BA                        u391 037B  
                      u711 048B                        u551 063D                        u631 0506  
                      u480 05F1                        u720 04B6                        u640 0511  
                      u481 05F0                        u465 05CF                        u721 04B5  
                      u545 062E                        u641 0510                        u625 04F9  
                      u570 0652                        u490 05FF                        u475 05E3  
                      u571 0651                        u555 063A                        u491 05FE  
                      u580 0657                        u660 0524                        u581 0656  
                      u565 0646                        u661 0523                        u645 050D  
                      u670 0529                        u590 04DF                        u807 03DD  
                      u671 0528                        u655 0518                        u591 04DE  
                      u680 0410                        u817 0359                        u737 06C8  
                      u690 03BB                        u691 03BA                        u747 06F3  
                      u685 040B                        u757 036D                        u767 043E  
                      u777 044D                        u787 045A                        u797 0464  
                      _Luz 0029                        fsr0 0004               ___awmod@sign 0076  
              colocar@temp 0076               __CFG_LVP$OFF 0000                       l1101 0322  
                     l1111 038E                       l1103 0377                       l1113 0393  
                     l1105 037C                       l1121 03D9                       l1107 0381  
                     l1123 03E2                       l1115 03C9                       l1211 04E6  
                     l1203 04DA                       l1131 0368                       l1141 05B4  
                     l1109 0388                       l1125 03E5                       l1117 03CF  
                     l1301 0478                       l1221 04FF                       l1213 04EA  
                     l1205 04DB                       l1133 0372                       l1151 05E2  
                     l1143 05B8                       l1135 0594                       l1119 03D8  
                     l1303 047E                       l1311 053A                       l1231 051E  
                     l1223 0503                       l1215 04EF                       l1207 04DF  
                     l1127 0363                       l1153 05EB                       l1145 05C1  
                     l1137 05A4                       l1241 03F9                       l1305 033B  
                     l1321 055D                       l1313 0541                       l1161 05FB  
                     l1225 0507                       l1217 04F5                       l1233 0524  
                     l1209 04E4                       l1129 0366                       l1401 068D  
                     l1147 05D3                       l1139 05A7                       l1155 05F1  
                     l1251 042F                       l1243 03FD                       l1091 034F  
                     l1323 0564                       l1315 0548                       l1307 0534  
                     l1171 060F                       l1163 05FF                       l1235 0529  
                     l1227 0511                       l1219 04F8                       l1411 06AF  
                     l1403 0693                       l1149 05E1                       l1245 0400  
                     l1253 0300                       l1261 0312                       l1093 0352  
                     l1325 0569                       l1317 054F                       l1309 0535  
                     l1181 0625                       l1173 0613                       l1165 0604  
                     l1237 052E                       l1229 0517                       l1341 078B  
                     l1421 06DA                       l1413 06BD                       l1405 069B  
                     l1247 042D                       l1271 03B0                       l1255 0305  
                     l1263 0317                       l1095 0354                       l1319 0556  
                     l1191 0645                       l1183 0629                       l1175 0615  
                     l1167 0606                       l1159 05FA                       l1351 07BC  
                     l1343 0795                       l1335 0705                       l1423 06E8  
                     l1415 06C2                       l1407 06A1                       l1249 042E  
                     l1273 03B5                       l1265 039A                       l1257 0309  
                     l1097 035E                       l1281 0431                       l1329 0570  
                     l1193 064C                       l1185 062D                       l1177 061B  
                     l1169 060A                       l1361 07EC                       l1353 07CA  
                     l1345 07A4                       l1337 0763                       l1425 06ED  
                     l1417 06CC                       l1409 06A6                       l1099 031C  
                     l1275 03BB                       l1267 039F                       l1259 030E  
                     l1371 049F                       l1363 0485                       l1291 0458  
                     l1283 0434                       l1451 0578                       l1187 063E  
                     l1179 061E                       l1195 0652                       l1347 07AC  
                     l1355 07CE                       l1339 0772                       l1427 06F7  
                     l1419 06D1                       l1277 03C3                       l1269 03A7  
                     l1381 04C9                       l1365 048C                       l1373 04B0  
                     l1293 0462                       l1285 043A                       l1197 0657  
                     l1189 0644                       l1357 07D6                       l1349 07B6  
                     l1429 06FC                       l1375 04B6                       l1367 0496  
                     l1295 0466                       l1287 0443                       l1199 065C  
                     l1359 07DC                       l1383 0329                       l1391 0667  
                     l1377 04C0                       l1369 049C                       l1297 046C  
                     l1289 0452                       l1385 0332                       l1393 066C  
                     l1379 04C6                       l1299 0472                       l1387 0333  
                     l1395 0671                       l1397 0676                       l1389 0661  
                     l1399 0685                       STR_1 0015                       STR_2 0032  
                     STR_3 0015                       STR_4 002A                       STR_5 0013  
                     STR_6 0019                       STR_7 0013                       STR_8 0025  
                     STR_9 001F               __CFG_WRT$OFF 0000                       _main 0661  
                     btemp 007E                       start 0000              __CFG_IESO$OFF 0000  
         ?_I2C_Master_Init 002A           ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070                      ?_main 0070            __end_of___awdiv 0661  
                    STR_10 002E              __CFG_WDTE$OFF 0000            __end_of___awmod 0533  
                    _ANSEL 0188            __end_of___lldiv 05FA            ___awdiv@divisor 0070  
          ___awdiv@counter 0075                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087             __CFG_FCMEN$OFF 0000  
          __end_of_comando 0362            __end_of_colocar 039A            __end_of_borrarv 034E  
                    _celda 0485              imprimir@texto 0074                      _luces 0705  
                    _setup 0329             __CFG_BOREN$OFF 0000                      pclath 000A  
          __end_of_mostrar 0376                      status 0003                      wtemp0 007E  
           __CFG_MCLRE$OFF 0000            __initialization 07F0               __end_of_main 0705  
                   ??_main 0032          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070  
                   ?_celda 0070         ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072  
                   ?_luces 0070           ___awdiv@dividend 0072                     ?_setup 0070  
                   _ANSELH 0189                     _SSPADD 0093                     _SSPCON 0014  
                   _SSPBUF 0013             __CFG_PWRTE$OFF 0000                  ??___awdiv 0074  
                ??___awmod 0074                  ??___lldiv 0078             iniciarOSC@frec 0072  
                   _grados 0028           ___awdiv@quotient 0077            ___awmod@divisor 0070  
         __end_of_imprimir 03F9            ___awmod@counter 0075                  ??_comando 0070  
                ??_colocar 0074                  ??_borrarv 0073                  ??_mostrar 0070  
  __end_of__initialization 07FC             __pcstackCOMMON 0070              __end_of_celda 04DA  
            __end_of_luces 07F0              __end_of_setup 033B                    ??_celda 0077  
                  ??_luces 0079                    ??_setup 0070                 __pbssBANK0 0020  
               __pmaintext 0661                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 0003                  ?_imprimir 0070                 _iniciarLCD 0431  
               _iniciarOSC 0533                    ___awdiv 05FA                    ___awmod 04DA  
                  ___lldiv 0594                    __ptext1 0329                    __ptext2 0705  
                  __ptext3 0362                    __ptext4 04DA                    __ptext5 05FA  
                  __ptext6 0533                    __ptext7 0431                    __ptext8 0485  
                  __ptext9 03C8                    _comando 034E                    _colocar 0376  
                  _borrarv 033B           ___awmod@dividend 0072   __size_of_I2C_Master_Init 0038  
 __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
                  _mostrar 0362       end_of_initialization 07FC                 ??_imprimir 0070  
__size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070  
          ___lldiv@counter 007D           I2C_Master_Init@c 002A           I2C_Master_Read@a 0070  
                _PORTAbits 0005                  _PORTDbits 0008                  _TRISCbits 0087  
                _TRISDbits 0088                ?_iniciarLCD 0070                ?_iniciarOSC 0070  
      start_initialization 07F0          ??_I2C_Master_Init 002E          ??_I2C_Master_Read 0072  
        ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070   __CFG_FOSC$INTRC_NOCLKOUT 0000  
                ___latbits 0002              __pcstackBANK0 002A        __size_of_iniciarLCD 0054  
      __size_of_iniciarOSC 0061                  __end_of_a 0013           _I2C_Master_Start 0300  
         _I2C_Master_Write 0312          __size_of_imprimir 0031                   ?___awdiv 0070  
                 ?___awmod 0070                   ?___lldiv 0070                  __pstrings 0003  
                 ?_comando 0070                   ?_colocar 0073                   ?_borrarv 0070  
                 ?_mostrar 0070             __size_of_celda 0055             __size_of_luces 00EB  
           __size_of_setup 0012                __stringbase 0008        I2C_Master_Read@temp 0074  
             ??_iniciarLCD 0073               ??_iniciarOSC 0070           __size_of___awdiv 0067  
         __size_of___awmod 0059           __size_of___lldiv 0066         __end_of__stringtab 0009  
                imprimir@i 0072           __size_of_comando 0014           __size_of_colocar 0024  
         __size_of_borrarv 0013            _I2C_Master_Init 03F9            _I2C_Master_Read 039A  
          _I2C_Master_Wait 031C            _I2C_Master_Stop 0309         __end_of_iniciarLCD 0485  
                 __ptext10 0376                   __ptext11 033B                   __ptext12 034E  
                 __ptext13 0312                   __ptext14 0309                   __ptext15 0300  
                 __ptext16 039A                   __ptext17 031C                   __ptext18 03F9  
                 __ptext19 0594         __end_of_iniciarOSC 0594          __CFG_BOR4V$BOR40V 0000  
         __size_of_mostrar 0014              __size_of_main 00A4                   _imprimir 03C8  
                 comando@x 0072                   colocar@x 0075                   colocar@y 0073  
 __end_of_I2C_Master_Start 0309   __end_of_I2C_Master_Write 031C           ___lldiv@dividend 0074  
                stringcode 0003                 _OSCCONbits 008F                   mostrar@t 0072  
  __end_of_I2C_Master_Init 0431    __end_of_I2C_Master_Read 03C8    __end_of_I2C_Master_Wait 0329  
  __end_of_I2C_Master_Stop 0312           ___lldiv@quotient 0079          I2C_Master_Write@d 0070  
                 stringdir 0003                   stringtab 0003                _SSPCON2bits 0091  
