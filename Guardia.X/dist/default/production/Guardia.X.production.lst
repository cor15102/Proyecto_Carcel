

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Mar 20 16:07:23 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.10
    33                           ; Generated 31/07/2019 GMT
    34                           ; 
    35                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222                           
   223                           	psect	strings
   224  0003                     __pstrings:	
   225  0003                     stringtab:	
   226  0003                     __stringtab:	
   227  0003                     stringcode:	
   228                           ;	String table - string pointers are 1 byte each
   229                           
   230  0003                     stringdir:	
   231  0003  3000               	movlw	high stringdir
   232  0004  008A               	movwf	10
   233  0005  0804               	movf	4,w
   234  0006  0A84               	incf	4,f
   235  0007  0782               	addwf	2,f
   236  0008                     __stringbase:	
   237  0008  3400               	retlw	0
   238  0009                     __end_of__stringtab:	
   239  0009                     _a:	
   240  0009  3430               	retlw	48
   241  000A  3431               	retlw	49
   242  000B  3432               	retlw	50
   243  000C  3433               	retlw	51
   244  000D  3434               	retlw	52
   245  000E  3435               	retlw	53
   246  000F  3436               	retlw	54
   247  0010  3437               	retlw	55
   248  0011  3438               	retlw	56
   249  0012  3439               	retlw	57
   250  0013                     __end_of_a:	
   251  0008                     _PORTD	set	8
   252  0007                     _PORTC	set	7
   253  0005                     _PORTA	set	5
   254  0005                     _PORTAbits	set	5
   255  0006                     _PORTB	set	6
   256  0008                     _PORTDbits	set	8
   257  0013                     _SSPBUF	set	19
   258  0014                     _SSPCON	set	20
   259  0088                     _TRISDbits	set	136
   260  0087                     _TRISC	set	135
   261  0086                     _TRISB	set	134
   262  0085                     _TRISA	set	133
   263  008F                     _OSCCONbits	set	143
   264  0091                     _SSPCON2bits	set	145
   265  0087                     _TRISCbits	set	135
   266  0094                     _SSPSTAT	set	148
   267  0093                     _SSPADD	set	147
   268  0091                     _SSPCON2	set	145
   269  0189                     _ANSELH	set	393
   270  0188                     _ANSEL	set	392
   271  0013                     STR_2:	
   272  0013  3420               	retlw	32	;' '
   273  0014  3420               	retlw	32	;' '
   274  0015  3420               	retlw	32	;' '
   275  0016  3420               	retlw	32	;' '
   276  0017  3420               	retlw	32	;' '
   277  0018  3420               	retlw	32	;' '
   278  0019  3400               	retlw	0
   279  001A                     STR_1:	
   280  001A  3441               	retlw	65	;'A'
   281  001B  344C               	retlw	76	;'L'
   282  001C  3445               	retlw	69	;'E'
   283  001D  3452               	retlw	82	;'R'
   284  001E  3454               	retlw	84	;'T'
   285  001F  3441               	retlw	65	;'A'
   286  0020  3400               	retlw	0
   287  0021                     STR_9:	
   288  0021  3448               	retlw	72	;'H'
   289  0022  346F               	retlw	111	;'o'
   290  0023  346C               	retlw	108	;'l'
   291  0024  3461               	retlw	97	;'a'
   292  0025  3400               	retlw	0
   293  0026                     STR_6:	
   294  0026  344F               	retlw	79	;'O'
   295  0027  3446               	retlw	70	;'F'
   296  0028  3446               	retlw	70	;'F'
   297  0029  3400               	retlw	0
   298  002A                     STR_7:	
   299  002A  344C               	retlw	76	;'L'
   300  002B  3475               	retlw	117	;'u'
   301  002C  347A               	retlw	122	;'z'
   302  002D  3400               	retlw	0
   303  002E                     STR_8:	
   304  002E  3458               	retlw	88	;'X'
   305  002F  343A               	retlw	58	;':'
   306  0030  3400               	retlw	0
   307  0031                     STR_4:	
   308  0031  344F               	retlw	79	;'O'
   309  0032  344E               	retlw	78	;'N'
   310  0033  3400               	retlw	0
   311  0016                     
   312                           ; #config settings
   313  0000                     
   314                           	psect	cinit
   315  07F3                     start_initialization:	
   316  07F3                     __initialization:	
   317                           
   318                           ; Clear objects allocated to BANK0
   319  07F3  1383               	bcf	3,7	;select IRP bank0
   320  07F4  3020               	movlw	low __pbssBANK0
   321  07F5  0084               	movwf	4
   322  07F6  3033               	movlw	low (__pbssBANK0+19)
   323  07F7  120A  118A  228B  120A  118A  	fcall	clear_ram0
   324  07FC                     end_of_initialization:	
   325                           ;End of C runtime variable initialization code
   326                           
   327  07FC                     __end_of__initialization:	
   328  07FC  0183               	clrf	3
   329  07FD  120A  118A  2E2B   	ljmp	_main	;jump to C main() function
   330                           
   331                           	psect	bssBANK0
   332  0020                     __pbssBANK0:	
   333  0020                     _z3:	
   334  0020                     	ds	2
   335  0022                     _z2:	
   336  0022                     	ds	2
   337  0024                     _z1:	
   338  0024                     	ds	2
   339  0026                     _z:	
   340  0026                     	ds	2
   341  0028                     _y3:	
   342  0028                     	ds	2
   343  002A                     _y2:	
   344  002A                     	ds	2
   345  002C                     _y1:	
   346  002C                     	ds	2
   347  002E                     _y:	
   348  002E                     	ds	2
   349  0030                     _Distancia:	
   350  0030                     	ds	1
   351  0031                     _grados:	
   352  0031                     	ds	1
   353  0032                     _Luz:	
   354  0032                     	ds	1
   355                           
   356                           	psect	clrtext
   357  028B                     clear_ram0:	
   358                           ;	Called with FSR containing the base address, and
   359                           ;	W with the last address+1
   360                           
   361  028B  0064               	clrwdt	;clear the watchdog before getting into this loop
   362  028C                     clrloop0:	
   363  028C  0180               	clrf	0	;clear RAM location pointed to by FSR
   364  028D  0A84               	incf	4,f	;increment pointer
   365  028E  0604               	xorwf	4,w	;XOR with final address
   366  028F  1903               	btfsc	3,2	;have we reached the end yet?
   367  0290  3400               	retlw	0	;all done for this memory range, return
   368  0291  0604               	xorwf	4,w	;XOR again to restore value
   369  0292  2A8C               	goto	clrloop0	;do the next byte
   370                           
   371                           	psect	cstackCOMMON
   372  0070                     __pcstackCOMMON:	
   373  0070                     ?_I2C_Master_Wait:	
   374  0070                     ??_I2C_Master_Wait:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ?_I2C_Master_Start:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ??_I2C_Master_Start:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_I2C_Master_Stop:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ??_I2C_Master_Stop:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ?_I2C_Master_Write:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ?_comando:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ??_comando:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?_iniciarLCD:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ?_borrarv:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ?_imprimir:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ??_imprimir:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ?_mostrar:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ??_mostrar:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_iniciarOSC:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ??_iniciarOSC:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_ultrasonico:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_luces:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_setup:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ??_setup:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_main:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ?_I2C_Master_Read:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?___awdiv:	
   441                           ; 2 bytes @ 0x0
   442                           
   443  0070                     ?___awmod:	
   444                           ; 2 bytes @ 0x0
   445                           
   446  0070                     ?___lldiv:	
   447                           ; 2 bytes @ 0x0
   448                           
   449  0070                     I2C_Master_Write@d:	
   450                           ; 4 bytes @ 0x0
   451                           
   452  0070                     I2C_Master_Read@a:	
   453                           ; 2 bytes @ 0x0
   454                           
   455  0070                     ___awdiv@divisor:	
   456                           ; 2 bytes @ 0x0
   457                           
   458  0070                     ___awmod@divisor:	
   459                           ; 2 bytes @ 0x0
   460                           
   461  0070                     ___lldiv@divisor:	
   462                           ; 2 bytes @ 0x0
   463                           
   464                           
   465                           ; 4 bytes @ 0x0
   466  0070                     	ds	2
   467  0072                     ??_I2C_Master_Write:	
   468  0072                     ??_I2C_Master_Read:	
   469                           ; 1 bytes @ 0x2
   470                           
   471  0072                     comando@x:	
   472                           ; 1 bytes @ 0x2
   473                           
   474  0072                     mostrar@t:	
   475                           ; 1 bytes @ 0x2
   476                           
   477  0072                     iniciarOSC@frec:	
   478                           ; 1 bytes @ 0x2
   479                           
   480  0072                     imprimir@i:	
   481                           ; 1 bytes @ 0x2
   482                           
   483  0072                     ___awdiv@dividend:	
   484                           ; 2 bytes @ 0x2
   485                           
   486  0072                     ___awmod@dividend:	
   487                           ; 2 bytes @ 0x2
   488                           
   489                           
   490                           ; 2 bytes @ 0x2
   491  0072                     	ds	1
   492  0073                     ??_iniciarLCD:	
   493  0073                     ??_borrarv:	
   494                           ; 1 bytes @ 0x3
   495                           
   496  0073                     ?_colocar:	
   497                           ; 1 bytes @ 0x3
   498                           
   499  0073                     colocar@y:	
   500                           ; 1 bytes @ 0x3
   501                           
   502                           
   503                           ; 1 bytes @ 0x3
   504  0073                     	ds	1
   505  0074                     ??_colocar:	
   506  0074                     ??___awdiv:	
   507                           ; 1 bytes @ 0x4
   508                           
   509  0074                     ??___awmod:	
   510                           ; 1 bytes @ 0x4
   511                           
   512  0074                     imprimir@texto:	
   513                           ; 1 bytes @ 0x4
   514                           
   515  0074                     I2C_Master_Read@temp:	
   516                           ; 1 bytes @ 0x4
   517                           
   518  0074                     ___lldiv@dividend:	
   519                           ; 2 bytes @ 0x4
   520                           
   521                           
   522                           ; 4 bytes @ 0x4
   523  0074                     	ds	1
   524  0075                     colocar@x:	
   525  0075                     ___awdiv@counter:	
   526                           ; 1 bytes @ 0x5
   527                           
   528  0075                     ___awmod@counter:	
   529                           ; 1 bytes @ 0x5
   530                           
   531                           
   532                           ; 1 bytes @ 0x5
   533  0075                     	ds	1
   534  0076                     colocar@temp:	
   535  0076                     ___awdiv@sign:	
   536                           ; 1 bytes @ 0x6
   537                           
   538  0076                     ___awmod@sign:	
   539                           ; 1 bytes @ 0x6
   540                           
   541                           
   542                           ; 1 bytes @ 0x6
   543  0076                     	ds	1
   544  0077                     ___awdiv@quotient:	
   545                           
   546                           ; 2 bytes @ 0x7
   547  0077                     	ds	1
   548  0078                     ??___lldiv:	
   549                           
   550                           ; 1 bytes @ 0x8
   551  0078                     	ds	1
   552  0079                     ??_ultrasonico:	
   553  0079                     ??_luces:	
   554                           ; 1 bytes @ 0x9
   555                           
   556  0079                     ___lldiv@quotient:	
   557                           ; 1 bytes @ 0x9
   558                           
   559                           
   560                           ; 4 bytes @ 0x9
   561  0079                     	ds	4
   562  007D                     ___lldiv@counter:	
   563                           
   564                           ; 1 bytes @ 0xD
   565  007D                     	ds	1
   566                           
   567                           	psect	cstackBANK0
   568  0033                     __pcstackBANK0:	
   569  0033                     ?_I2C_Master_Init:	
   570  0033                     I2C_Master_Init@c:	
   571                           ; 1 bytes @ 0x0
   572                           
   573                           
   574                           ; 4 bytes @ 0x0
   575  0033                     	ds	4
   576  0037                     ??_I2C_Master_Init:	
   577                           
   578                           ; 1 bytes @ 0x4
   579  0037                     	ds	4
   580  003B                     ??_main:	
   581                           
   582                           ; 1 bytes @ 0x8
   583  003B                     	ds	2
   584                           
   585                           	psect	maintext
   586  062B                     __pmaintext:	
   587 ;;
   588 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   589 ;;
   590 ;; *************** function _main *****************
   591 ;; Defined at:
   592 ;;		line 166 in file "Carcelero.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;		None
   597 ;; Return value:  Size  Location     Type
   598 ;;                  1    wreg      void 
   599 ;; Registers used:
   600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   601 ;; Tracked objects:
   602 ;;		On entry : B00/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   606 ;;      Params:         0       0       0       0       0
   607 ;;      Locals:         0       0       0       0       0
   608 ;;      Temps:          0       2       0       0       0
   609 ;;      Totals:         0       2       0       0       0
   610 ;;Total ram usage:        2 bytes
   611 ;; Hardware stack levels required when called:    3
   612 ;; This function calls:
   613 ;;		_I2C_Master_Init
   614 ;;		_I2C_Master_Read
   615 ;;		_I2C_Master_Start
   616 ;;		_I2C_Master_Stop
   617 ;;		_I2C_Master_Write
   618 ;;		_borrarv
   619 ;;		_colocar
   620 ;;		_imprimir
   621 ;;		_iniciarLCD
   622 ;;		_iniciarOSC
   623 ;;		_luces
   624 ;;		_setup
   625 ;;		_ultrasonico
   626 ;; This function is called by:
   627 ;;		Startup code after reset
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           
   632                           ;psect for function _main
   633  062B                     _main:	
   634  062B                     l1404:	
   635                           ;incstack = 0
   636                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   637                           
   638                           
   639                           ;Carcelero.c: 168:     iniciarOSC(6);
   640  062B  3006               	movlw	6
   641  062C  120A  118A  2471  120A  118A  	fcall	_iniciarOSC
   642  0631                     l1406:	
   643                           
   644                           ;Carcelero.c: 170:     setup();
   645  0631  120A  118A  22BC  120A  118A  	fcall	_setup
   646  0636                     l1408:	
   647                           
   648                           ;Carcelero.c: 172:     iniciarLCD();
   649  0636  120A  118A  23C4  120A  118A  	fcall	_iniciarLCD
   650  063B                     l1410:	
   651                           
   652                           ;Carcelero.c: 174:     borrarv();
   653  063B  120A  118A  22CE  120A  118A  	fcall	_borrarv
   654  0640                     l1412:	
   655                           
   656                           ;Carcelero.c: 176:     I2C_Master_Init(100000);
   657  0640  3000               	movlw	0
   658  0641  1283               	bcf	3,5	;RP0=0, select bank0
   659  0642  1303               	bcf	3,6	;RP1=0, select bank0
   660  0643  00B6               	movwf	I2C_Master_Init@c+3
   661  0644  3001               	movlw	1
   662  0645  00B5               	movwf	I2C_Master_Init@c+2
   663  0646  3086               	movlw	134
   664  0647  00B4               	movwf	I2C_Master_Init@c+1
   665  0648  30A0               	movlw	160
   666  0649  00B3               	movwf	I2C_Master_Init@c
   667  064A  120A  118A  238C  120A  118A  	fcall	_I2C_Master_Init
   668  064F                     l1414:	
   669                           
   670                           ;Carcelero.c: 181:     colocar(10,1);
   671  064F  01F3               	clrf	colocar@y
   672  0650  0AF3               	incf	colocar@y,f
   673  0651  300A               	movlw	10
   674  0652  120A  118A  2309  120A  118A  	fcall	_colocar
   675  0657                     l1416:	
   676                           
   677                           ;Carcelero.c: 182:     imprimir("Luz");
   678  0657  3022               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   679  0658  120A  118A  235B  120A  118A  	fcall	_imprimir
   680  065D                     l1418:	
   681                           
   682                           ;Carcelero.c: 184:     colocar(1,1);
   683  065D  01F3               	clrf	colocar@y
   684  065E  0AF3               	incf	colocar@y,f
   685  065F  3001               	movlw	1
   686  0660  120A  118A  2309  120A  118A  	fcall	_colocar
   687  0665                     l1420:	
   688                           
   689                           ;Carcelero.c: 185:     imprimir("X:");
   690  0665  3026               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
   691  0666  120A  118A  235B  120A  118A  	fcall	_imprimir
   692  066B                     l1422:	
   693                           
   694                           ;Carcelero.c: 187:     colocar(30,1);
   695  066B  01F3               	clrf	colocar@y
   696  066C  0AF3               	incf	colocar@y,f
   697  066D  301E               	movlw	30
   698  066E  120A  118A  2309  120A  118A  	fcall	_colocar
   699  0673                     l1424:	
   700                           
   701                           ;Carcelero.c: 188:     imprimir("Hola");
   702  0673  3019               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
   703  0674  120A  118A  235B  120A  118A  	fcall	_imprimir
   704  0679                     l1426:	
   705                           
   706                           ;Carcelero.c: 191:     {;Carcelero.c: 193:         I2C_Master_Start();
   707  0679  120A  118A  2293  120A  118A  	fcall	_I2C_Master_Start
   708  067E                     l1428:	
   709                           
   710                           ;Carcelero.c: 194:         I2C_Master_Write(0x21);
   711  067E  3021               	movlw	33
   712  067F  00F0               	movwf	I2C_Master_Write@d
   713  0680  3000               	movlw	0
   714  0681  00F1               	movwf	I2C_Master_Write@d+1
   715  0682  120A  118A  22A5  120A  118A  	fcall	_I2C_Master_Write
   716  0687                     l1430:	
   717                           
   718                           ;Carcelero.c: 195:         grados = I2C_Master_Read(0);
   719  0687  3000               	movlw	0
   720  0688  00F0               	movwf	I2C_Master_Read@a
   721  0689  00F1               	movwf	I2C_Master_Read@a+1
   722  068A  120A  118A  232D  120A  118A  	fcall	_I2C_Master_Read
   723  068F  0870               	movf	?_I2C_Master_Read,w
   724  0690  1283               	bcf	3,5	;RP0=0, select bank0
   725  0691  1303               	bcf	3,6	;RP1=0, select bank0
   726  0692  00BB               	movwf	??_main
   727  0693  083B               	movf	??_main,w
   728  0694  00B1               	movwf	_grados
   729  0695                     l1432:	
   730                           
   731                           ;Carcelero.c: 196:         I2C_Master_Stop();
   732  0695  120A  118A  229C  120A  118A  	fcall	_I2C_Master_Stop
   733  069A                     l1434:	
   734                           
   735                           ;Carcelero.c: 197:         _delay((unsigned long)((100)*(4000000/4000.0)));
   736  069A  3082               	movlw	130
   737  069B  1283               	bcf	3,5	;RP0=0, select bank0
   738  069C  1303               	bcf	3,6	;RP1=0, select bank0
   739  069D  00BC               	movwf	??_main+1
   740  069E  30DD               	movlw	221
   741  069F  00BB               	movwf	??_main
   742  06A0                     u717:	
   743  06A0  0BBB               	decfsz	??_main,f
   744  06A1  2EA0               	goto	u717
   745  06A2  0BBC               	decfsz	??_main+1,f
   746  06A3  2EA0               	goto	u717
   747                           
   748                           ;Carcelero.c: 200:         I2C_Master_Start();
   749  06A4  120A  118A  2293  120A  118A  	fcall	_I2C_Master_Start
   750                           
   751                           ;Carcelero.c: 201:         I2C_Master_Write(0x11);
   752  06A9  3011               	movlw	17
   753  06AA  00F0               	movwf	I2C_Master_Write@d
   754  06AB  3000               	movlw	0
   755  06AC  00F1               	movwf	I2C_Master_Write@d+1
   756  06AD  120A  118A  22A5  120A  118A  	fcall	_I2C_Master_Write
   757                           
   758                           ;Carcelero.c: 202:         Luz = I2C_Master_Read(0);
   759  06B2  3000               	movlw	0
   760  06B3  00F0               	movwf	I2C_Master_Read@a
   761  06B4  00F1               	movwf	I2C_Master_Read@a+1
   762  06B5  120A  118A  232D  120A  118A  	fcall	_I2C_Master_Read
   763  06BA  0870               	movf	?_I2C_Master_Read,w
   764  06BB  1283               	bcf	3,5	;RP0=0, select bank0
   765  06BC  1303               	bcf	3,6	;RP1=0, select bank0
   766  06BD  00BB               	movwf	??_main
   767  06BE  083B               	movf	??_main,w
   768  06BF  00B2               	movwf	_Luz
   769                           
   770                           ;Carcelero.c: 203:         I2C_Master_Stop();
   771  06C0  120A  118A  229C  120A  118A  	fcall	_I2C_Master_Stop
   772  06C5                     l1436:	
   773                           
   774                           ;Carcelero.c: 204:         _delay((unsigned long)((100)*(4000000/4000.0)));
   775  06C5  3082               	movlw	130
   776  06C6  1283               	bcf	3,5	;RP0=0, select bank0
   777  06C7  1303               	bcf	3,6	;RP1=0, select bank0
   778  06C8  00BC               	movwf	??_main+1
   779  06C9  30DD               	movlw	221
   780  06CA  00BB               	movwf	??_main
   781  06CB                     u727:	
   782  06CB  0BBB               	decfsz	??_main,f
   783  06CC  2ECB               	goto	u727
   784  06CD  0BBC               	decfsz	??_main+1,f
   785  06CE  2ECB               	goto	u727
   786  06CF                     l1438:	
   787                           
   788                           ;Carcelero.c: 207:         I2C_Master_Start();
   789  06CF  120A  118A  2293  120A  118A  	fcall	_I2C_Master_Start
   790  06D4                     l1440:	
   791                           
   792                           ;Carcelero.c: 208:         I2C_Master_Write(0x31);
   793  06D4  3031               	movlw	49
   794  06D5  00F0               	movwf	I2C_Master_Write@d
   795  06D6  3000               	movlw	0
   796  06D7  00F1               	movwf	I2C_Master_Write@d+1
   797  06D8  120A  118A  22A5  120A  118A  	fcall	_I2C_Master_Write
   798  06DD                     l1442:	
   799                           
   800                           ;Carcelero.c: 209:         Distancia = I2C_Master_Read(0);
   801  06DD  3000               	movlw	0
   802  06DE  00F0               	movwf	I2C_Master_Read@a
   803  06DF  00F1               	movwf	I2C_Master_Read@a+1
   804  06E0  120A  118A  232D  120A  118A  	fcall	_I2C_Master_Read
   805  06E5  0870               	movf	?_I2C_Master_Read,w
   806  06E6  1283               	bcf	3,5	;RP0=0, select bank0
   807  06E7  1303               	bcf	3,6	;RP1=0, select bank0
   808  06E8  00BB               	movwf	??_main
   809  06E9  083B               	movf	??_main,w
   810  06EA  00B0               	movwf	_Distancia
   811  06EB                     l1444:	
   812                           
   813                           ;Carcelero.c: 210:         I2C_Master_Stop();
   814  06EB  120A  118A  229C  120A  118A  	fcall	_I2C_Master_Stop
   815  06F0                     l1446:	
   816                           
   817                           ;Carcelero.c: 211:         _delay((unsigned long)((100)*(4000000/4000.0)));
   818  06F0  3082               	movlw	130
   819  06F1  1283               	bcf	3,5	;RP0=0, select bank0
   820  06F2  1303               	bcf	3,6	;RP1=0, select bank0
   821  06F3  00BC               	movwf	??_main+1
   822  06F4  30DD               	movlw	221
   823  06F5  00BB               	movwf	??_main
   824  06F6                     u737:	
   825  06F6  0BBB               	decfsz	??_main,f
   826  06F7  2EF6               	goto	u737
   827  06F8  0BBC               	decfsz	??_main+1,f
   828  06F9  2EF6               	goto	u737
   829  06FA                     l1448:	
   830                           
   831                           ;Carcelero.c: 213:         luces();
   832  06FA  120A  118A  2708  120A  118A  	fcall	_luces
   833  06FF                     l1450:	
   834                           
   835                           ;Carcelero.c: 215:         ultrasonico();
   836  06FF  120A  118A  259F  120A  118A  	fcall	_ultrasonico
   837  0704  2E79               	goto	l1426
   838  0705  120A  118A  2800   	ljmp	start
   839  0708                     __end_of_main:	
   840                           
   841                           	psect	text1
   842  059F                     __ptext1:	
   843 ;; *************** function _ultrasonico *****************
   844 ;; Defined at:
   845 ;;		line 61 in file "Carcelero.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   859 ;;      Params:         0       0       0       0       0
   860 ;;      Locals:         0       0       0       0       0
   861 ;;      Temps:          2       0       0       0       0
   862 ;;      Totals:         2       0       0       0       0
   863 ;;Total ram usage:        2 bytes
   864 ;; Hardware stack levels used:    1
   865 ;; Hardware stack levels required when called:    2
   866 ;; This function calls:
   867 ;;		___awdiv
   868 ;;		___awmod
   869 ;;		_colocar
   870 ;;		_imprimir
   871 ;;		_mostrar
   872 ;; This function is called by:
   873 ;;		_main
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           
   878                           ;psect for function _ultrasonico
   879  059F                     _ultrasonico:	
   880  059F                     l1350:	
   881                           ;incstack = 0
   882                           ; Regs used in _ultrasonico: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   883                           
   884                           
   885                           ;Carcelero.c: 63:     z = Distancia/10;
   886  059F  300A               	movlw	10
   887  05A0  00F0               	movwf	___awdiv@divisor
   888  05A1  3000               	movlw	0
   889  05A2  00F1               	movwf	___awdiv@divisor+1
   890  05A3  1283               	bcf	3,5	;RP0=0, select bank0
   891  05A4  1303               	bcf	3,6	;RP1=0, select bank0
   892  05A5  0830               	movf	_Distancia,w
   893  05A6  00F9               	movwf	??_ultrasonico
   894  05A7  01FA               	clrf	??_ultrasonico+1
   895  05A8  0879               	movf	??_ultrasonico,w
   896  05A9  00F2               	movwf	___awdiv@dividend
   897  05AA  087A               	movf	??_ultrasonico+1,w
   898  05AB  00F3               	movwf	___awdiv@dividend+1
   899  05AC  120A  118A  2538  120A  118A  	fcall	___awdiv
   900  05B1  0871               	movf	?___awdiv+1,w
   901  05B2  1283               	bcf	3,5	;RP0=0, select bank0
   902  05B3  1303               	bcf	3,6	;RP1=0, select bank0
   903  05B4  00A7               	movwf	_z+1
   904  05B5  0870               	movf	?___awdiv,w
   905  05B6  00A6               	movwf	_z
   906                           
   907                           ;Carcelero.c: 64:     z1 = Distancia%10;
   908  05B7  300A               	movlw	10
   909  05B8  00F0               	movwf	___awmod@divisor
   910  05B9  3000               	movlw	0
   911  05BA  00F1               	movwf	___awmod@divisor+1
   912  05BB  0830               	movf	_Distancia,w
   913  05BC  00F9               	movwf	??_ultrasonico
   914  05BD  01FA               	clrf	??_ultrasonico+1
   915  05BE  0879               	movf	??_ultrasonico,w
   916  05BF  00F2               	movwf	___awmod@dividend
   917  05C0  087A               	movf	??_ultrasonico+1,w
   918  05C1  00F3               	movwf	___awmod@dividend+1
   919  05C2  120A  118A  2418  120A  118A  	fcall	___awmod
   920  05C7  0871               	movf	?___awmod+1,w
   921  05C8  1283               	bcf	3,5	;RP0=0, select bank0
   922  05C9  1303               	bcf	3,6	;RP1=0, select bank0
   923  05CA  00A5               	movwf	_z1+1
   924  05CB  0870               	movf	?___awmod,w
   925  05CC  00A4               	movwf	_z1
   926                           
   927                           ;Carcelero.c: 68:     colocar(4,1);
   928  05CD  01F3               	clrf	colocar@y
   929  05CE  0AF3               	incf	colocar@y,f
   930  05CF  3004               	movlw	4
   931  05D0  120A  118A  2309  120A  118A  	fcall	_colocar
   932  05D5                     l1352:	
   933                           
   934                           ;Carcelero.c: 69:     mostrar(a[z]);
   935  05D5  1283               	bcf	3,5	;RP0=0, select bank0
   936  05D6  1303               	bcf	3,6	;RP1=0, select bank0
   937  05D7  0826               	movf	_z,w
   938  05D8  3E01               	addlw	low ((_a-__stringbase)| (0+32768))
   939  05D9  0084               	movwf	4
   940  05DA  120A  118A  2003  120A  118A  	fcall	stringdir
   941  05DF  120A  118A  22F5  120A  118A  	fcall	_mostrar
   942  05E4                     l1354:	
   943                           
   944                           ;Carcelero.c: 70:     colocar(5,1);
   945  05E4  01F3               	clrf	colocar@y
   946  05E5  0AF3               	incf	colocar@y,f
   947  05E6  3005               	movlw	5
   948  05E7  120A  118A  2309  120A  118A  	fcall	_colocar
   949                           
   950                           ;Carcelero.c: 71:     mostrar(a[z1]);
   951  05EC  1283               	bcf	3,5	;RP0=0, select bank0
   952  05ED  1303               	bcf	3,6	;RP1=0, select bank0
   953  05EE  0824               	movf	_z1,w
   954  05EF  3E01               	addlw	low ((_a-__stringbase)| (0+32768))
   955  05F0  0084               	movwf	4
   956  05F1  120A  118A  2003  120A  118A  	fcall	stringdir
   957  05F6  120A  118A  22F5  120A  118A  	fcall	_mostrar
   958  05FB                     l1356:	
   959                           
   960                           ;Carcelero.c: 75:     if (Distancia < 20)
   961  05FB  3014               	movlw	20
   962  05FC  1283               	bcf	3,5	;RP0=0, select bank0
   963  05FD  1303               	bcf	3,6	;RP1=0, select bank0
   964  05FE  0230               	subwf	_Distancia,w
   965  05FF  1803               	skipnc
   966  0600  2E02               	goto	u691
   967  0601  2E03               	goto	u690
   968  0602                     u691:	
   969  0602  2E17               	goto	l1364
   970  0603                     u690:	
   971  0603                     l1358:	
   972                           
   973                           ;Carcelero.c: 76:     {;Carcelero.c: 77:         colocar(1,2);
   974  0603  3002               	movlw	2
   975  0604  00F9               	movwf	??_ultrasonico
   976  0605  0879               	movf	??_ultrasonico,w
   977  0606  00F3               	movwf	colocar@y
   978  0607  3001               	movlw	1
   979  0608  120A  118A  2309  120A  118A  	fcall	_colocar
   980  060D                     l1360:	
   981                           
   982                           ;Carcelero.c: 78:         imprimir("ALERTA");
   983  060D  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   984  060E  120A  118A  235B  120A  118A  	fcall	_imprimir
   985  0613                     l1362:	
   986                           
   987                           ;Carcelero.c: 79:         PORTAbits.RA3 = 1;
   988  0613  1283               	bcf	3,5	;RP0=0, select bank0
   989  0614  1303               	bcf	3,6	;RP1=0, select bank0
   990  0615  1585               	bsf	5,3	;volatile
   991                           
   992                           ;Carcelero.c: 80:     }
   993  0616  2E2A               	goto	l132
   994  0617                     l1364:	
   995                           
   996                           ;Carcelero.c: 83:     {;Carcelero.c: 84:         colocar(1,2);
   997  0617  3002               	movlw	2
   998  0618  00F9               	movwf	??_ultrasonico
   999  0619  0879               	movf	??_ultrasonico,w
  1000  061A  00F3               	movwf	colocar@y
  1001  061B  3001               	movlw	1
  1002  061C  120A  118A  2309  120A  118A  	fcall	_colocar
  1003  0621                     l1366:	
  1004                           
  1005                           ;Carcelero.c: 85:         imprimir("      ");
  1006  0621  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1007  0622  120A  118A  235B  120A  118A  	fcall	_imprimir
  1008  0627                     l1368:	
  1009                           
  1010                           ;Carcelero.c: 86:         PORTAbits.RA3 = 0;
  1011  0627  1283               	bcf	3,5	;RP0=0, select bank0
  1012  0628  1303               	bcf	3,6	;RP1=0, select bank0
  1013  0629  1185               	bcf	5,3	;volatile
  1014  062A                     l132:	
  1015  062A  0008               	return
  1016  062B                     __end_of_ultrasonico:	
  1017                           
  1018                           	psect	text2
  1019  02BC                     __ptext2:	
  1020 ;; *************** function _setup *****************
  1021 ;; Defined at:
  1022 ;;		line 148 in file "Carcelero.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;		None
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;		None
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  1    wreg      void 
  1029 ;; Registers used:
  1030 ;;		status,2
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1036 ;;      Params:         0       0       0       0       0
  1037 ;;      Locals:         0       0       0       0       0
  1038 ;;      Temps:          0       0       0       0       0
  1039 ;;      Totals:         0       0       0       0       0
  1040 ;;Total ram usage:        0 bytes
  1041 ;; Hardware stack levels used:    1
  1042 ;; This function calls:
  1043 ;;		Nothing
  1044 ;; This function is called by:
  1045 ;;		_main
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           
  1050                           ;psect for function _setup
  1051  02BC                     _setup:	
  1052  02BC                     l1398:	
  1053                           ;incstack = 0
  1054                           ; Regs used in _setup: [status,2]
  1055                           
  1056                           
  1057                           ;Carcelero.c: 150:     ANSEL = 0;
  1058  02BC  1683               	bsf	3,5	;RP0=1, select bank3
  1059  02BD  1703               	bsf	3,6	;RP1=1, select bank3
  1060  02BE  0188               	clrf	8	;volatile
  1061                           
  1062                           ;Carcelero.c: 151:     ANSELH = 0;
  1063  02BF  0189               	clrf	9	;volatile
  1064                           
  1065                           ;Carcelero.c: 153:     TRISA = 0;
  1066  02C0  1683               	bsf	3,5	;RP0=1, select bank1
  1067  02C1  1303               	bcf	3,6	;RP1=0, select bank1
  1068  02C2  0185               	clrf	5	;volatile
  1069                           
  1070                           ;Carcelero.c: 154:     TRISB = 0;
  1071  02C3  0186               	clrf	6	;volatile
  1072                           
  1073                           ;Carcelero.c: 155:     TRISC = 0;
  1074  02C4  0187               	clrf	7	;volatile
  1075  02C5                     l1400:	
  1076                           
  1077                           ;Carcelero.c: 157:     TRISDbits.TRISD6 = 0;
  1078  02C5  1308               	bcf	8,6	;volatile
  1079  02C6                     l1402:	
  1080                           
  1081                           ;Carcelero.c: 158:     TRISDbits.TRISD7 = 0;
  1082  02C6  1388               	bcf	8,7	;volatile
  1083                           
  1084                           ;Carcelero.c: 160:     PORTA = 0;
  1085  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  1086  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  1087  02C9  0185               	clrf	5	;volatile
  1088                           
  1089                           ;Carcelero.c: 161:     PORTB = 0;
  1090  02CA  0186               	clrf	6	;volatile
  1091                           
  1092                           ;Carcelero.c: 162:     PORTC = 0;
  1093  02CB  0187               	clrf	7	;volatile
  1094                           
  1095                           ;Carcelero.c: 163:     PORTD = 0;
  1096  02CC  0188               	clrf	8	;volatile
  1097  02CD                     l140:	
  1098  02CD  0008               	return
  1099  02CE                     __end_of_setup:	
  1100                           
  1101                           	psect	text3
  1102  0708                     __ptext3:	
  1103 ;; *************** function _luces *****************
  1104 ;; Defined at:
  1105 ;;		line 90 in file "Carcelero.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;		None
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;		None
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  1    wreg      void 
  1112 ;; Registers used:
  1113 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1119 ;;      Params:         0       0       0       0       0
  1120 ;;      Locals:         0       0       0       0       0
  1121 ;;      Temps:          2       0       0       0       0
  1122 ;;      Totals:         2       0       0       0       0
  1123 ;;Total ram usage:        2 bytes
  1124 ;; Hardware stack levels used:    1
  1125 ;; Hardware stack levels required when called:    2
  1126 ;; This function calls:
  1127 ;;		___awdiv
  1128 ;;		___awmod
  1129 ;;		_colocar
  1130 ;;		_imprimir
  1131 ;;		_mostrar
  1132 ;; This function is called by:
  1133 ;;		_main
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           
  1138                           ;psect for function _luces
  1139  0708                     _luces:	
  1140  0708                     l1370:	
  1141                           ;incstack = 0
  1142                           ; Regs used in _luces: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1143                           
  1144                           
  1145                           ;Carcelero.c: 92:     y = Luz/100;
  1146  0708  3064               	movlw	100
  1147  0709  00F0               	movwf	___awdiv@divisor
  1148  070A  3000               	movlw	0
  1149  070B  00F1               	movwf	___awdiv@divisor+1
  1150  070C  1283               	bcf	3,5	;RP0=0, select bank0
  1151  070D  1303               	bcf	3,6	;RP1=0, select bank0
  1152  070E  0832               	movf	_Luz,w
  1153  070F  00F9               	movwf	??_luces
  1154  0710  01FA               	clrf	??_luces+1
  1155  0711  0879               	movf	??_luces,w
  1156  0712  00F2               	movwf	___awdiv@dividend
  1157  0713  087A               	movf	??_luces+1,w
  1158  0714  00F3               	movwf	___awdiv@dividend+1
  1159  0715  120A  118A  2538  120A  118A  	fcall	___awdiv
  1160  071A  0871               	movf	?___awdiv+1,w
  1161  071B  1283               	bcf	3,5	;RP0=0, select bank0
  1162  071C  1303               	bcf	3,6	;RP1=0, select bank0
  1163  071D  00AF               	movwf	_y+1
  1164  071E  0870               	movf	?___awdiv,w
  1165  071F  00AE               	movwf	_y
  1166                           
  1167                           ;Carcelero.c: 93:     y1 = Luz%100;
  1168  0720  3064               	movlw	100
  1169  0721  00F0               	movwf	___awmod@divisor
  1170  0722  3000               	movlw	0
  1171  0723  00F1               	movwf	___awmod@divisor+1
  1172  0724  0832               	movf	_Luz,w
  1173  0725  00F9               	movwf	??_luces
  1174  0726  01FA               	clrf	??_luces+1
  1175  0727  0879               	movf	??_luces,w
  1176  0728  00F2               	movwf	___awmod@dividend
  1177  0729  087A               	movf	??_luces+1,w
  1178  072A  00F3               	movwf	___awmod@dividend+1
  1179  072B  120A  118A  2418  120A  118A  	fcall	___awmod
  1180  0730  0871               	movf	?___awmod+1,w
  1181  0731  1283               	bcf	3,5	;RP0=0, select bank0
  1182  0732  1303               	bcf	3,6	;RP1=0, select bank0
  1183  0733  00AD               	movwf	_y1+1
  1184  0734  0870               	movf	?___awmod,w
  1185  0735  00AC               	movwf	_y1
  1186                           
  1187                           ;Carcelero.c: 94:     y2 = y1/10;
  1188  0736  300A               	movlw	10
  1189  0737  00F0               	movwf	___awdiv@divisor
  1190  0738  3000               	movlw	0
  1191  0739  00F1               	movwf	___awdiv@divisor+1
  1192  073A  082D               	movf	_y1+1,w
  1193  073B  00F3               	movwf	___awdiv@dividend+1
  1194  073C  082C               	movf	_y1,w
  1195  073D  00F2               	movwf	___awdiv@dividend
  1196  073E  120A  118A  2538  120A  118A  	fcall	___awdiv
  1197  0743  0871               	movf	?___awdiv+1,w
  1198  0744  1283               	bcf	3,5	;RP0=0, select bank0
  1199  0745  1303               	bcf	3,6	;RP1=0, select bank0
  1200  0746  00AB               	movwf	_y2+1
  1201  0747  0870               	movf	?___awdiv,w
  1202  0748  00AA               	movwf	_y2
  1203                           
  1204                           ;Carcelero.c: 95:     y3 = y1%10;
  1205  0749  300A               	movlw	10
  1206  074A  00F0               	movwf	___awmod@divisor
  1207  074B  3000               	movlw	0
  1208  074C  00F1               	movwf	___awmod@divisor+1
  1209  074D  082D               	movf	_y1+1,w
  1210  074E  00F3               	movwf	___awmod@dividend+1
  1211  074F  082C               	movf	_y1,w
  1212  0750  00F2               	movwf	___awmod@dividend
  1213  0751  120A  118A  2418  120A  118A  	fcall	___awmod
  1214  0756  0871               	movf	?___awmod+1,w
  1215  0757  1283               	bcf	3,5	;RP0=0, select bank0
  1216  0758  1303               	bcf	3,6	;RP1=0, select bank0
  1217  0759  00A9               	movwf	_y3+1
  1218  075A  0870               	movf	?___awmod,w
  1219  075B  00A8               	movwf	_y3
  1220                           
  1221                           ;Carcelero.c: 97:     colocar(10,2);
  1222  075C  3002               	movlw	2
  1223  075D  00F9               	movwf	??_luces
  1224  075E  0879               	movf	??_luces,w
  1225  075F  00F3               	movwf	colocar@y
  1226  0760  300A               	movlw	10
  1227  0761  120A  118A  2309  120A  118A  	fcall	_colocar
  1228  0766                     l1372:	
  1229                           
  1230                           ;Carcelero.c: 98:     mostrar(a[y]);
  1231  0766  1283               	bcf	3,5	;RP0=0, select bank0
  1232  0767  1303               	bcf	3,6	;RP1=0, select bank0
  1233  0768  082E               	movf	_y,w
  1234  0769  3E01               	addlw	low ((_a-__stringbase)| (0+32768))
  1235  076A  0084               	movwf	4
  1236  076B  120A  118A  2003  120A  118A  	fcall	stringdir
  1237  0770  120A  118A  22F5  120A  118A  	fcall	_mostrar
  1238  0775                     l1374:	
  1239                           
  1240                           ;Carcelero.c: 99:     colocar(11,2);
  1241  0775  3002               	movlw	2
  1242  0776  00F9               	movwf	??_luces
  1243  0777  0879               	movf	??_luces,w
  1244  0778  00F3               	movwf	colocar@y
  1245  0779  300B               	movlw	11
  1246  077A  120A  118A  2309  120A  118A  	fcall	_colocar
  1247                           
  1248                           ;Carcelero.c: 100:     mostrar(a[y2]);
  1249  077F  1283               	bcf	3,5	;RP0=0, select bank0
  1250  0780  1303               	bcf	3,6	;RP1=0, select bank0
  1251  0781  082A               	movf	_y2,w
  1252  0782  3E01               	addlw	low ((_a-__stringbase)| (0+32768))
  1253  0783  0084               	movwf	4
  1254  0784  120A  118A  2003  120A  118A  	fcall	stringdir
  1255  0789  120A  118A  22F5  120A  118A  	fcall	_mostrar
  1256  078E                     l1376:	
  1257                           
  1258                           ;Carcelero.c: 101:     colocar(12,2);
  1259  078E  3002               	movlw	2
  1260  078F  00F9               	movwf	??_luces
  1261  0790  0879               	movf	??_luces,w
  1262  0791  00F3               	movwf	colocar@y
  1263  0792  300C               	movlw	12
  1264  0793  120A  118A  2309  120A  118A  	fcall	_colocar
  1265  0798                     l1378:	
  1266                           
  1267                           ;Carcelero.c: 102:     mostrar(a[y3]);
  1268  0798  1283               	bcf	3,5	;RP0=0, select bank0
  1269  0799  1303               	bcf	3,6	;RP1=0, select bank0
  1270  079A  0828               	movf	_y3,w
  1271  079B  3E01               	addlw	low ((_a-__stringbase)| (0+32768))
  1272  079C  0084               	movwf	4
  1273  079D  120A  118A  2003  120A  118A  	fcall	stringdir
  1274  07A2  120A  118A  22F5  120A  118A  	fcall	_mostrar
  1275  07A7                     l1380:	
  1276                           
  1277                           ;Carcelero.c: 104:     if (Luz < 50)
  1278  07A7  3032               	movlw	50
  1279  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  1280  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  1281  07AA  0232               	subwf	_Luz,w
  1282  07AB  1803               	skipnc
  1283  07AC  2FAE               	goto	u701
  1284  07AD  2FAF               	goto	u700
  1285  07AE                     u701:	
  1286  07AE  2FD1               	goto	l1390
  1287  07AF                     u700:	
  1288  07AF                     l1382:	
  1289                           
  1290                           ;Carcelero.c: 105:     {;Carcelero.c: 106:         colocar(14,2);
  1291  07AF  3002               	movlw	2
  1292  07B0  00F9               	movwf	??_luces
  1293  07B1  0879               	movf	??_luces,w
  1294  07B2  00F3               	movwf	colocar@y
  1295  07B3  300E               	movlw	14
  1296  07B4  120A  118A  2309  120A  118A  	fcall	_colocar
  1297  07B9                     l1384:	
  1298                           
  1299                           ;Carcelero.c: 107:         imprimir("   ");
  1300  07B9  300E               	movlw	(low (((STR_2+3)-__stringbase)| (0+32768)))& (0+255)
  1301  07BA  120A  118A  235B  120A  118A  	fcall	_imprimir
  1302  07BF                     l1386:	
  1303                           
  1304                           ;Carcelero.c: 108:         colocar(14,1);
  1305  07BF  01F3               	clrf	colocar@y
  1306  07C0  0AF3               	incf	colocar@y,f
  1307  07C1  300E               	movlw	14
  1308  07C2  120A  118A  2309  120A  118A  	fcall	_colocar
  1309                           
  1310                           ;Carcelero.c: 109:         imprimir("ON");
  1311  07C7  3029               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1312  07C8  120A  118A  235B  120A  118A  	fcall	_imprimir
  1313  07CD                     l1388:	
  1314                           
  1315                           ;Carcelero.c: 110:         PORTAbits.RA2 = 1;
  1316  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  1317  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  1318  07CF  1505               	bsf	5,2	;volatile
  1319                           
  1320                           ;Carcelero.c: 111:     }
  1321  07D0  2FF2               	goto	l137
  1322  07D1                     l1390:	
  1323                           
  1324                           ;Carcelero.c: 114:     {;Carcelero.c: 115:         colocar(14,1);
  1325  07D1  01F3               	clrf	colocar@y
  1326  07D2  0AF3               	incf	colocar@y,f
  1327  07D3  300E               	movlw	14
  1328  07D4  120A  118A  2309  120A  118A  	fcall	_colocar
  1329  07D9                     l1392:	
  1330                           
  1331                           ;Carcelero.c: 116:         imprimir("   ");
  1332  07D9  300E               	movlw	(low (((STR_2+3)-__stringbase)| (0+32768)))& (0+255)
  1333  07DA  120A  118A  235B  120A  118A  	fcall	_imprimir
  1334  07DF                     l1394:	
  1335                           
  1336                           ;Carcelero.c: 117:         colocar(14,2);
  1337  07DF  3002               	movlw	2
  1338  07E0  00F9               	movwf	??_luces
  1339  07E1  0879               	movf	??_luces,w
  1340  07E2  00F3               	movwf	colocar@y
  1341  07E3  300E               	movlw	14
  1342  07E4  120A  118A  2309  120A  118A  	fcall	_colocar
  1343                           
  1344                           ;Carcelero.c: 118:         imprimir("OFF");
  1345  07E9  301E               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1346  07EA  120A  118A  235B  120A  118A  	fcall	_imprimir
  1347  07EF                     l1396:	
  1348                           
  1349                           ;Carcelero.c: 119:         PORTAbits.RA2 = 0;
  1350  07EF  1283               	bcf	3,5	;RP0=0, select bank0
  1351  07F0  1303               	bcf	3,6	;RP1=0, select bank0
  1352  07F1  1105               	bcf	5,2	;volatile
  1353  07F2                     l137:	
  1354  07F2  0008               	return
  1355  07F3                     __end_of_luces:	
  1356                           
  1357                           	psect	text4
  1358  02F5                     __ptext4:	
  1359 ;; *************** function _mostrar *****************
  1360 ;; Defined at:
  1361 ;;		line 90 in file "./LCD.h"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;  t               1    wreg     const unsigned char 
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;  t               1    2[COMMON] const unsigned char 
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      void 
  1368 ;; Registers used:
  1369 ;;		wreg
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1375 ;;      Params:         0       0       0       0       0
  1376 ;;      Locals:         1       0       0       0       0
  1377 ;;      Temps:          2       0       0       0       0
  1378 ;;      Totals:         3       0       0       0       0
  1379 ;;Total ram usage:        3 bytes
  1380 ;; Hardware stack levels used:    1
  1381 ;; This function calls:
  1382 ;;		Nothing
  1383 ;; This function is called by:
  1384 ;;		_ultrasonico
  1385 ;;		_luces
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           
  1390                           ;psect for function _mostrar
  1391  02F5                     _mostrar:	
  1392                           
  1393                           ;incstack = 0
  1394                           ; Regs used in _mostrar: [wreg]
  1395                           ;mostrar@t stored from wreg
  1396  02F5  00F2               	movwf	mostrar@t
  1397  02F6                     l1142:	
  1398                           
  1399                           ;./LCD.h: 90: void mostrar(const char t);./LCD.h: 91: {;./LCD.h: 92:     PORTDbits.RD6 =
      +                           1;
  1400  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1401  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1402  02F8  1708               	bsf	8,6	;volatile
  1403  02F9                     l1144:	
  1404                           
  1405                           ;./LCD.h: 93:     PORTB = t;
  1406  02F9  0872               	movf	mostrar@t,w
  1407  02FA  0086               	movwf	6	;volatile
  1408  02FB                     l1146:	
  1409                           
  1410                           ;./LCD.h: 94:     PORTDbits.RD7 = 1;
  1411  02FB  1788               	bsf	8,7	;volatile
  1412                           
  1413                           ;./LCD.h: 95:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1414  02FC  3003               	movlw	3
  1415  02FD  00F1               	movwf	??_mostrar+1
  1416  02FE  3097               	movlw	151
  1417  02FF  00F0               	movwf	??_mostrar
  1418  0300                     u747:	
  1419  0300  0BF0               	decfsz	??_mostrar,f
  1420  0301  2B00               	goto	u747
  1421  0302  0BF1               	decfsz	??_mostrar+1,f
  1422  0303  2B00               	goto	u747
  1423  0304  2B05               	nop2
  1424  0305                     l1148:	
  1425                           
  1426                           ;./LCD.h: 96:     PORTDbits.RD7 = 0;
  1427  0305  1283               	bcf	3,5	;RP0=0, select bank0
  1428  0306  1303               	bcf	3,6	;RP1=0, select bank0
  1429  0307  1388               	bcf	8,7	;volatile
  1430  0308                     l89:	
  1431  0308  0008               	return
  1432  0309                     __end_of_mostrar:	
  1433                           
  1434                           	psect	text5
  1435  035B                     __ptext5:	
  1436 ;; *************** function _imprimir *****************
  1437 ;; Defined at:
  1438 ;;		line 78 in file "./LCD.h"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;  texto           1    wreg     PTR const unsigned char 
  1441 ;;		 -> STR_9(5), STR_8(3), STR_7(4), STR_6(4), 
  1442 ;;		 -> STR_5(4), STR_4(3), STR_3(4), STR_2(7), 
  1443 ;;		 -> STR_1(7), 
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;  texto           1    4[COMMON] PTR const unsigned char 
  1446 ;;		 -> STR_9(5), STR_8(3), STR_7(4), STR_6(4), 
  1447 ;;		 -> STR_5(4), STR_4(3), STR_3(4), STR_2(7), 
  1448 ;;		 -> STR_1(7), 
  1449 ;;  i               2    2[COMMON] int 
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      void 
  1452 ;; Registers used:
  1453 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1459 ;;      Params:         0       0       0       0       0
  1460 ;;      Locals:         3       0       0       0       0
  1461 ;;      Temps:          2       0       0       0       0
  1462 ;;      Totals:         5       0       0       0       0
  1463 ;;Total ram usage:        5 bytes
  1464 ;; Hardware stack levels used:    2
  1465 ;; This function calls:
  1466 ;;		Nothing
  1467 ;; This function is called by:
  1468 ;;		_ultrasonico
  1469 ;;		_luces
  1470 ;;		_main
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           
  1475                           ;psect for function _imprimir
  1476  035B                     _imprimir:	
  1477                           
  1478                           ;incstack = 0
  1479                           ; Regs used in _imprimir: [wreg-fsr0h+status,2+status,0+pclath]
  1480                           ;imprimir@texto stored from wreg
  1481  035B  00F4               	movwf	imprimir@texto
  1482  035C                     l1130:	
  1483                           
  1484                           ;./LCD.h: 78: void imprimir(const char *texto);./LCD.h: 79: {;./LCD.h: 80:     for(int i
      +                           = 0; texto[i] != '\0'; i++)
  1485  035C  01F2               	clrf	imprimir@i
  1486  035D  01F3               	clrf	imprimir@i+1
  1487  035E  2B7E               	goto	l83
  1488  035F                     l84:	
  1489                           
  1490                           ;./LCD.h: 81:     {;./LCD.h: 82:         PORTDbits.RD6 = 1;
  1491  035F  1283               	bcf	3,5	;RP0=0, select bank0
  1492  0360  1303               	bcf	3,6	;RP1=0, select bank0
  1493  0361  1708               	bsf	8,6	;volatile
  1494  0362                     l1132:	
  1495                           
  1496                           ;./LCD.h: 83:         PORTB = texto[i];
  1497  0362  0872               	movf	imprimir@i,w
  1498  0363  0774               	addwf	imprimir@texto,w
  1499  0364  0084               	movwf	4
  1500  0365  120A  118A  2003  120A  118A  	fcall	stringdir
  1501  036A  0086               	movwf	6	;volatile
  1502  036B                     l1134:	
  1503                           
  1504                           ;./LCD.h: 84:         PORTDbits.RD7 = 1;
  1505  036B  1788               	bsf	8,7	;volatile
  1506  036C                     l1136:	
  1507                           
  1508                           ;./LCD.h: 85:         _delay((unsigned long)((2)*(4000000/4000.0)));
  1509  036C  3003               	movlw	3
  1510  036D  00F1               	movwf	??_imprimir+1
  1511  036E  3097               	movlw	151
  1512  036F  00F0               	movwf	??_imprimir
  1513  0370                     u757:	
  1514  0370  0BF0               	decfsz	??_imprimir,f
  1515  0371  2B70               	goto	u757
  1516  0372  0BF1               	decfsz	??_imprimir+1,f
  1517  0373  2B70               	goto	u757
  1518  0374  2B75               	nop2
  1519  0375                     l1138:	
  1520                           
  1521                           ;./LCD.h: 86:         PORTDbits.RD7 = 0;
  1522  0375  1283               	bcf	3,5	;RP0=0, select bank0
  1523  0376  1303               	bcf	3,6	;RP1=0, select bank0
  1524  0377  1388               	bcf	8,7	;volatile
  1525  0378                     l1140:	
  1526                           
  1527                           ;./LCD.h: 87:     }
  1528  0378  3001               	movlw	1
  1529  0379  07F2               	addwf	imprimir@i,f
  1530  037A  1803               	skipnc
  1531  037B  0AF3               	incf	imprimir@i+1,f
  1532  037C  3000               	movlw	0
  1533  037D  07F3               	addwf	imprimir@i+1,f
  1534  037E                     l83:	
  1535  037E  0872               	movf	imprimir@i,w
  1536  037F  0774               	addwf	imprimir@texto,w
  1537  0380  0084               	movwf	4
  1538  0381  120A  118A  2003  120A  118A  	fcall	stringdir
  1539  0386  3A00               	xorlw	0
  1540  0387  1D03               	skipz
  1541  0388  2B8A               	goto	u401
  1542  0389  2B8B               	goto	u400
  1543  038A                     u401:	
  1544  038A  2B5F               	goto	l84
  1545  038B                     u400:	
  1546  038B                     l86:	
  1547  038B  0008               	return
  1548  038C                     __end_of_imprimir:	
  1549                           
  1550                           	psect	text6
  1551  0309                     __ptext6:	
  1552 ;; *************** function _colocar *****************
  1553 ;; Defined at:
  1554 ;;		line 62 in file "./LCD.h"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;  x               1    wreg     const unsigned char 
  1557 ;;  y               1    3[COMMON] const unsigned char 
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;  x               1    5[COMMON] const unsigned char 
  1560 ;;  temp            1    6[COMMON] unsigned char 
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      void 
  1563 ;; Registers used:
  1564 ;;		wreg, status,2, status,0, pclath, cstack
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1570 ;;      Params:         1       0       0       0       0
  1571 ;;      Locals:         2       0       0       0       0
  1572 ;;      Temps:          1       0       0       0       0
  1573 ;;      Totals:         4       0       0       0       0
  1574 ;;Total ram usage:        4 bytes
  1575 ;; Hardware stack levels used:    1
  1576 ;; Hardware stack levels required when called:    1
  1577 ;; This function calls:
  1578 ;;		_comando
  1579 ;; This function is called by:
  1580 ;;		_ultrasonico
  1581 ;;		_luces
  1582 ;;		_main
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           
  1587                           ;psect for function _colocar
  1588  0309                     _colocar:	
  1589                           
  1590                           ;incstack = 0
  1591                           ; Regs used in _colocar: [wreg+status,2+status,0+pclath+cstack]
  1592                           ;colocar@x stored from wreg
  1593  0309  00F5               	movwf	colocar@x
  1594  030A                     l1118:	
  1595                           
  1596                           ;./LCD.h: 62: void colocar(const char x,const char y);./LCD.h: 63: {;./LCD.h: 64:     ch
      +                          ar temp;;./LCD.h: 66:     if (y == 1)
  1597  030A  0373               	decf	colocar@y,w
  1598  030B  1D03               	btfss	3,2
  1599  030C  2B0E               	goto	u381
  1600  030D  2B0F               	goto	u380
  1601  030E                     u381:	
  1602  030E  2B1B               	goto	l1124
  1603  030F                     u380:	
  1604  030F                     l1120:	
  1605                           
  1606                           ;./LCD.h: 67:     {;./LCD.h: 68:         temp = 0x80 + x - 1;
  1607  030F  0875               	movf	colocar@x,w
  1608  0310  3E7F               	addlw	127
  1609  0311  00F4               	movwf	??_colocar
  1610  0312  0874               	movf	??_colocar,w
  1611  0313  00F6               	movwf	colocar@temp
  1612  0314                     l1122:	
  1613                           
  1614                           ;./LCD.h: 69:         comando(temp);
  1615  0314  0876               	movf	colocar@temp,w
  1616  0315  120A  118A  22E1  120A  118A  	fcall	_comando
  1617                           
  1618                           ;./LCD.h: 70:     }
  1619  031A  2B2C               	goto	l80
  1620  031B                     l1124:	
  1621  031B  3002               	movlw	2
  1622  031C  0673               	xorwf	colocar@y,w
  1623  031D  1D03               	btfss	3,2
  1624  031E  2B20               	goto	u391
  1625  031F  2B21               	goto	u390
  1626  0320                     u391:	
  1627  0320  2B2C               	goto	l80
  1628  0321                     u390:	
  1629  0321                     l1126:	
  1630                           
  1631                           ;./LCD.h: 72:     {;./LCD.h: 73:         temp = 0xC0 + x - 1;
  1632  0321  0875               	movf	colocar@x,w
  1633  0322  3EBF               	addlw	191
  1634  0323  00F4               	movwf	??_colocar
  1635  0324  0874               	movf	??_colocar,w
  1636  0325  00F6               	movwf	colocar@temp
  1637  0326                     l1128:	
  1638                           
  1639                           ;./LCD.h: 74:         comando(temp);
  1640  0326  0876               	movf	colocar@temp,w
  1641  0327  120A  118A  22E1  120A  118A  	fcall	_comando
  1642  032C                     l80:	
  1643  032C  0008               	return
  1644  032D                     __end_of_colocar:	
  1645                           
  1646                           	psect	text7
  1647  0418                     __ptext7:	
  1648 ;; *************** function ___awmod *****************
  1649 ;; Defined at:
  1650 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;  divisor         2    0[COMMON] int 
  1653 ;;  dividend        2    2[COMMON] int 
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;  sign            1    6[COMMON] unsigned char 
  1656 ;;  counter         1    5[COMMON] unsigned char 
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  2    0[COMMON] int 
  1659 ;; Registers used:
  1660 ;;		wreg, status,2, status,0
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1666 ;;      Params:         4       0       0       0       0
  1667 ;;      Locals:         2       0       0       0       0
  1668 ;;      Temps:          1       0       0       0       0
  1669 ;;      Totals:         7       0       0       0       0
  1670 ;;Total ram usage:        7 bytes
  1671 ;; Hardware stack levels used:    1
  1672 ;; This function calls:
  1673 ;;		Nothing
  1674 ;; This function is called by:
  1675 ;;		_ultrasonico
  1676 ;;		_luces
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           
  1681                           ;psect for function ___awmod
  1682  0418                     ___awmod:	
  1683  0418                     l1218:	
  1684                           ;incstack = 0
  1685                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1686                           
  1687  0418  01F6               	clrf	___awmod@sign
  1688  0419                     l1220:	
  1689  0419  1FF3               	btfss	___awmod@dividend+1,7
  1690  041A  2C1C               	goto	u581
  1691  041B  2C1D               	goto	u580
  1692  041C                     u581:	
  1693  041C  2C24               	goto	l1226
  1694  041D                     u580:	
  1695  041D                     l1222:	
  1696  041D  09F2               	comf	___awmod@dividend,f
  1697  041E  09F3               	comf	___awmod@dividend+1,f
  1698  041F  0AF2               	incf	___awmod@dividend,f
  1699  0420  1903               	skipnz
  1700  0421  0AF3               	incf	___awmod@dividend+1,f
  1701  0422                     l1224:	
  1702  0422  01F6               	clrf	___awmod@sign
  1703  0423  0AF6               	incf	___awmod@sign,f
  1704  0424                     l1226:	
  1705  0424  1FF1               	btfss	___awmod@divisor+1,7
  1706  0425  2C27               	goto	u591
  1707  0426  2C28               	goto	u590
  1708  0427                     u591:	
  1709  0427  2C2D               	goto	l1230
  1710  0428                     u590:	
  1711  0428                     l1228:	
  1712  0428  09F0               	comf	___awmod@divisor,f
  1713  0429  09F1               	comf	___awmod@divisor+1,f
  1714  042A  0AF0               	incf	___awmod@divisor,f
  1715  042B  1903               	skipnz
  1716  042C  0AF1               	incf	___awmod@divisor+1,f
  1717  042D                     l1230:	
  1718  042D  0870               	movf	___awmod@divisor,w
  1719  042E  0471               	iorwf	___awmod@divisor+1,w
  1720  042F  1903               	btfsc	3,2
  1721  0430  2C32               	goto	u601
  1722  0431  2C33               	goto	u600
  1723  0432                     u601:	
  1724  0432  2C62               	goto	l1248
  1725  0433                     u600:	
  1726  0433                     l1232:	
  1727  0433  01F5               	clrf	___awmod@counter
  1728  0434  0AF5               	incf	___awmod@counter,f
  1729  0435  2C41               	goto	l1238
  1730  0436                     l1234:	
  1731  0436  3001               	movlw	1
  1732  0437                     u615:	
  1733  0437  1003               	clrc
  1734  0438  0DF0               	rlf	___awmod@divisor,f
  1735  0439  0DF1               	rlf	___awmod@divisor+1,f
  1736  043A  3EFF               	addlw	-1
  1737  043B  1D03               	skipz
  1738  043C  2C37               	goto	u615
  1739  043D                     l1236:	
  1740  043D  3001               	movlw	1
  1741  043E  00F4               	movwf	??___awmod
  1742  043F  0874               	movf	??___awmod,w
  1743  0440  07F5               	addwf	___awmod@counter,f
  1744  0441                     l1238:	
  1745  0441  1FF1               	btfss	___awmod@divisor+1,7
  1746  0442  2C44               	goto	u621
  1747  0443  2C45               	goto	u620
  1748  0444                     u621:	
  1749  0444  2C36               	goto	l1234
  1750  0445                     u620:	
  1751  0445                     l1240:	
  1752  0445  0871               	movf	___awmod@divisor+1,w
  1753  0446  0273               	subwf	___awmod@dividend+1,w
  1754  0447  1D03               	skipz
  1755  0448  2C4B               	goto	u635
  1756  0449  0870               	movf	___awmod@divisor,w
  1757  044A  0272               	subwf	___awmod@dividend,w
  1758  044B                     u635:	
  1759  044B  1C03               	skipc
  1760  044C  2C4E               	goto	u631
  1761  044D  2C4F               	goto	u630
  1762  044E                     u631:	
  1763  044E  2C55               	goto	l1244
  1764  044F                     u630:	
  1765  044F                     l1242:	
  1766  044F  0870               	movf	___awmod@divisor,w
  1767  0450  02F2               	subwf	___awmod@dividend,f
  1768  0451  0871               	movf	___awmod@divisor+1,w
  1769  0452  1C03               	skipc
  1770  0453  03F3               	decf	___awmod@dividend+1,f
  1771  0454  02F3               	subwf	___awmod@dividend+1,f
  1772  0455                     l1244:	
  1773  0455  3001               	movlw	1
  1774  0456                     u645:	
  1775  0456  1003               	clrc
  1776  0457  0CF1               	rrf	___awmod@divisor+1,f
  1777  0458  0CF0               	rrf	___awmod@divisor,f
  1778  0459  3EFF               	addlw	-1
  1779  045A  1D03               	skipz
  1780  045B  2C56               	goto	u645
  1781  045C                     l1246:	
  1782  045C  3001               	movlw	1
  1783  045D  02F5               	subwf	___awmod@counter,f
  1784  045E  1D03               	btfss	3,2
  1785  045F  2C61               	goto	u651
  1786  0460  2C62               	goto	u650
  1787  0461                     u651:	
  1788  0461  2C45               	goto	l1240
  1789  0462                     u650:	
  1790  0462                     l1248:	
  1791  0462  0876               	movf	___awmod@sign,w
  1792  0463  1903               	btfsc	3,2
  1793  0464  2C66               	goto	u661
  1794  0465  2C67               	goto	u660
  1795  0466                     u661:	
  1796  0466  2C6C               	goto	l1252
  1797  0467                     u660:	
  1798  0467                     l1250:	
  1799  0467  09F2               	comf	___awmod@dividend,f
  1800  0468  09F3               	comf	___awmod@dividend+1,f
  1801  0469  0AF2               	incf	___awmod@dividend,f
  1802  046A  1903               	skipnz
  1803  046B  0AF3               	incf	___awmod@dividend+1,f
  1804  046C                     l1252:	
  1805  046C  0873               	movf	___awmod@dividend+1,w
  1806  046D  00F1               	movwf	?___awmod+1
  1807  046E  0872               	movf	___awmod@dividend,w
  1808  046F  00F0               	movwf	?___awmod
  1809  0470                     l400:	
  1810  0470  0008               	return
  1811  0471                     __end_of___awmod:	
  1812                           
  1813                           	psect	text8
  1814  0538                     __ptext8:	
  1815 ;; *************** function ___awdiv *****************
  1816 ;; Defined at:
  1817 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;  divisor         2    0[COMMON] int 
  1820 ;;  dividend        2    2[COMMON] int 
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;  quotient        2    7[COMMON] int 
  1823 ;;  sign            1    6[COMMON] unsigned char 
  1824 ;;  counter         1    5[COMMON] unsigned char 
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  2    0[COMMON] int 
  1827 ;; Registers used:
  1828 ;;		wreg, status,2, status,0
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1834 ;;      Params:         4       0       0       0       0
  1835 ;;      Locals:         4       0       0       0       0
  1836 ;;      Temps:          1       0       0       0       0
  1837 ;;      Totals:         9       0       0       0       0
  1838 ;;Total ram usage:        9 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; This function calls:
  1841 ;;		Nothing
  1842 ;; This function is called by:
  1843 ;;		_ultrasonico
  1844 ;;		_luces
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           
  1849                           ;psect for function ___awdiv
  1850  0538                     ___awdiv:	
  1851  0538                     l1174:	
  1852                           ;incstack = 0
  1853                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1854                           
  1855  0538  01F6               	clrf	___awdiv@sign
  1856  0539                     l1176:	
  1857  0539  1FF1               	btfss	___awdiv@divisor+1,7
  1858  053A  2D3C               	goto	u481
  1859  053B  2D3D               	goto	u480
  1860  053C                     u481:	
  1861  053C  2D44               	goto	l1182
  1862  053D                     u480:	
  1863  053D                     l1178:	
  1864  053D  09F0               	comf	___awdiv@divisor,f
  1865  053E  09F1               	comf	___awdiv@divisor+1,f
  1866  053F  0AF0               	incf	___awdiv@divisor,f
  1867  0540  1903               	skipnz
  1868  0541  0AF1               	incf	___awdiv@divisor+1,f
  1869  0542                     l1180:	
  1870  0542  01F6               	clrf	___awdiv@sign
  1871  0543  0AF6               	incf	___awdiv@sign,f
  1872  0544                     l1182:	
  1873  0544  1FF3               	btfss	___awdiv@dividend+1,7
  1874  0545  2D47               	goto	u491
  1875  0546  2D48               	goto	u490
  1876  0547                     u491:	
  1877  0547  2D51               	goto	l1188
  1878  0548                     u490:	
  1879  0548                     l1184:	
  1880  0548  09F2               	comf	___awdiv@dividend,f
  1881  0549  09F3               	comf	___awdiv@dividend+1,f
  1882  054A  0AF2               	incf	___awdiv@dividend,f
  1883  054B  1903               	skipnz
  1884  054C  0AF3               	incf	___awdiv@dividend+1,f
  1885  054D                     l1186:	
  1886  054D  3001               	movlw	1
  1887  054E  00F4               	movwf	??___awdiv
  1888  054F  0874               	movf	??___awdiv,w
  1889  0550  06F6               	xorwf	___awdiv@sign,f
  1890  0551                     l1188:	
  1891  0551  01F7               	clrf	___awdiv@quotient
  1892  0552  01F8               	clrf	___awdiv@quotient+1
  1893  0553                     l1190:	
  1894  0553  0870               	movf	___awdiv@divisor,w
  1895  0554  0471               	iorwf	___awdiv@divisor+1,w
  1896  0555  1903               	btfsc	3,2
  1897  0556  2D58               	goto	u501
  1898  0557  2D59               	goto	u500
  1899  0558                     u501:	
  1900  0558  2D90               	goto	l1210
  1901  0559                     u500:	
  1902  0559                     l1192:	
  1903  0559  01F5               	clrf	___awdiv@counter
  1904  055A  0AF5               	incf	___awdiv@counter,f
  1905  055B  2D67               	goto	l1198
  1906  055C                     l1194:	
  1907  055C  3001               	movlw	1
  1908  055D                     u515:	
  1909  055D  1003               	clrc
  1910  055E  0DF0               	rlf	___awdiv@divisor,f
  1911  055F  0DF1               	rlf	___awdiv@divisor+1,f
  1912  0560  3EFF               	addlw	-1
  1913  0561  1D03               	skipz
  1914  0562  2D5D               	goto	u515
  1915  0563                     l1196:	
  1916  0563  3001               	movlw	1
  1917  0564  00F4               	movwf	??___awdiv
  1918  0565  0874               	movf	??___awdiv,w
  1919  0566  07F5               	addwf	___awdiv@counter,f
  1920  0567                     l1198:	
  1921  0567  1FF1               	btfss	___awdiv@divisor+1,7
  1922  0568  2D6A               	goto	u521
  1923  0569  2D6B               	goto	u520
  1924  056A                     u521:	
  1925  056A  2D5C               	goto	l1194
  1926  056B                     u520:	
  1927  056B                     l1200:	
  1928  056B  3001               	movlw	1
  1929  056C                     u535:	
  1930  056C  1003               	clrc
  1931  056D  0DF7               	rlf	___awdiv@quotient,f
  1932  056E  0DF8               	rlf	___awdiv@quotient+1,f
  1933  056F  3EFF               	addlw	-1
  1934  0570  1D03               	skipz
  1935  0571  2D6C               	goto	u535
  1936  0572  0871               	movf	___awdiv@divisor+1,w
  1937  0573  0273               	subwf	___awdiv@dividend+1,w
  1938  0574  1D03               	skipz
  1939  0575  2D78               	goto	u545
  1940  0576  0870               	movf	___awdiv@divisor,w
  1941  0577  0272               	subwf	___awdiv@dividend,w
  1942  0578                     u545:	
  1943  0578  1C03               	skipc
  1944  0579  2D7B               	goto	u541
  1945  057A  2D7C               	goto	u540
  1946  057B                     u541:	
  1947  057B  2D83               	goto	l1206
  1948  057C                     u540:	
  1949  057C                     l1202:	
  1950  057C  0870               	movf	___awdiv@divisor,w
  1951  057D  02F2               	subwf	___awdiv@dividend,f
  1952  057E  0871               	movf	___awdiv@divisor+1,w
  1953  057F  1C03               	skipc
  1954  0580  03F3               	decf	___awdiv@dividend+1,f
  1955  0581  02F3               	subwf	___awdiv@dividend+1,f
  1956  0582                     l1204:	
  1957  0582  1477               	bsf	___awdiv@quotient,0
  1958  0583                     l1206:	
  1959  0583  3001               	movlw	1
  1960  0584                     u555:	
  1961  0584  1003               	clrc
  1962  0585  0CF1               	rrf	___awdiv@divisor+1,f
  1963  0586  0CF0               	rrf	___awdiv@divisor,f
  1964  0587  3EFF               	addlw	-1
  1965  0588  1D03               	skipz
  1966  0589  2D84               	goto	u555
  1967  058A                     l1208:	
  1968  058A  3001               	movlw	1
  1969  058B  02F5               	subwf	___awdiv@counter,f
  1970  058C  1D03               	btfss	3,2
  1971  058D  2D8F               	goto	u561
  1972  058E  2D90               	goto	u560
  1973  058F                     u561:	
  1974  058F  2D6B               	goto	l1200
  1975  0590                     u560:	
  1976  0590                     l1210:	
  1977  0590  0876               	movf	___awdiv@sign,w
  1978  0591  1903               	btfsc	3,2
  1979  0592  2D94               	goto	u571
  1980  0593  2D95               	goto	u570
  1981  0594                     u571:	
  1982  0594  2D9A               	goto	l1214
  1983  0595                     u570:	
  1984  0595                     l1212:	
  1985  0595  09F7               	comf	___awdiv@quotient,f
  1986  0596  09F8               	comf	___awdiv@quotient+1,f
  1987  0597  0AF7               	incf	___awdiv@quotient,f
  1988  0598  1903               	skipnz
  1989  0599  0AF8               	incf	___awdiv@quotient+1,f
  1990  059A                     l1214:	
  1991  059A  0878               	movf	___awdiv@quotient+1,w
  1992  059B  00F1               	movwf	?___awdiv+1
  1993  059C  0877               	movf	___awdiv@quotient,w
  1994  059D  00F0               	movwf	?___awdiv
  1995  059E                     l387:	
  1996  059E  0008               	return
  1997  059F                     __end_of___awdiv:	
  1998                           
  1999                           	psect	text9
  2000  0471                     __ptext9:	
  2001 ;; *************** function _iniciarOSC *****************
  2002 ;; Defined at:
  2003 ;;		line 5 in file "./Oscilador.h"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;  frec            1    wreg     unsigned char 
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;  frec            1    2[COMMON] unsigned char 
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  1    wreg      void 
  2010 ;; Registers used:
  2011 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2017 ;;      Params:         0       0       0       0       0
  2018 ;;      Locals:         1       0       0       0       0
  2019 ;;      Temps:          2       0       0       0       0
  2020 ;;      Totals:         3       0       0       0       0
  2021 ;;Total ram usage:        3 bytes
  2022 ;; Hardware stack levels used:    1
  2023 ;; This function calls:
  2024 ;;		Nothing
  2025 ;; This function is called by:
  2026 ;;		_main
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           
  2031                           ;psect for function _iniciarOSC
  2032  0471                     _iniciarOSC:	
  2033                           
  2034                           ;incstack = 0
  2035                           ; Regs used in _iniciarOSC: [wreg-fsr0h+status,2+status,0]
  2036                           ;iniciarOSC@frec stored from wreg
  2037  0471  00F2               	movwf	iniciarOSC@frec
  2038  0472                     l1322:	
  2039                           
  2040                           ;./Oscilador.h: 5: void iniciarOSC(uint8_t frec);./Oscilador.h: 6: {;./Oscilador.h: 7:  
      +                             switch(frec)
  2041  0472  2CAE               	goto	l1344
  2042  0473                     l1324:	
  2043                           
  2044                           ;./Oscilador.h: 10:             OSCCONbits.IRCF = 0b000;
  2045  0473  308F               	movlw	-113
  2046  0474  1683               	bsf	3,5	;RP0=1, select bank1
  2047  0475  1303               	bcf	3,6	;RP1=0, select bank1
  2048  0476  058F               	andwf	15,f	;volatile
  2049                           
  2050                           ;./Oscilador.h: 11:             break;
  2051  0477  2CD0               	goto	l94
  2052  0478                     l1326:	
  2053                           
  2054                           ;./Oscilador.h: 14:             OSCCONbits.IRCF = 0b001;
  2055  0478  1683               	bsf	3,5	;RP0=1, select bank1
  2056  0479  1303               	bcf	3,6	;RP1=0, select bank1
  2057  047A  080F               	movf	15,w	;volatile
  2058  047B  398F               	andlw	-113
  2059  047C  3810               	iorlw	16
  2060  047D  008F               	movwf	15	;volatile
  2061                           
  2062                           ;./Oscilador.h: 15:             break;
  2063  047E  2CD0               	goto	l94
  2064  047F                     l1328:	
  2065                           
  2066                           ;./Oscilador.h: 18:             OSCCONbits.IRCF = 0b010;
  2067  047F  1683               	bsf	3,5	;RP0=1, select bank1
  2068  0480  1303               	bcf	3,6	;RP1=0, select bank1
  2069  0481  080F               	movf	15,w	;volatile
  2070  0482  398F               	andlw	-113
  2071  0483  3820               	iorlw	32
  2072  0484  008F               	movwf	15	;volatile
  2073                           
  2074                           ;./Oscilador.h: 19:             break;
  2075  0485  2CD0               	goto	l94
  2076  0486                     l1330:	
  2077                           
  2078                           ;./Oscilador.h: 22:             OSCCONbits.IRCF = 0b001;
  2079  0486  1683               	bsf	3,5	;RP0=1, select bank1
  2080  0487  1303               	bcf	3,6	;RP1=0, select bank1
  2081  0488  080F               	movf	15,w	;volatile
  2082  0489  398F               	andlw	-113
  2083  048A  3810               	iorlw	16
  2084  048B  008F               	movwf	15	;volatile
  2085                           
  2086                           ;./Oscilador.h: 23:             break;
  2087  048C  2CD0               	goto	l94
  2088  048D                     l1332:	
  2089                           
  2090                           ;./Oscilador.h: 26:             OSCCONbits.IRCF = 0b100;
  2091  048D  1683               	bsf	3,5	;RP0=1, select bank1
  2092  048E  1303               	bcf	3,6	;RP1=0, select bank1
  2093  048F  080F               	movf	15,w	;volatile
  2094  0490  398F               	andlw	-113
  2095  0491  3840               	iorlw	64
  2096  0492  008F               	movwf	15	;volatile
  2097                           
  2098                           ;./Oscilador.h: 27:             break;
  2099  0493  2CD0               	goto	l94
  2100  0494                     l1334:	
  2101                           
  2102                           ;./Oscilador.h: 30:             OSCCONbits.IRCF = 0b101;
  2103  0494  1683               	bsf	3,5	;RP0=1, select bank1
  2104  0495  1303               	bcf	3,6	;RP1=0, select bank1
  2105  0496  080F               	movf	15,w	;volatile
  2106  0497  398F               	andlw	-113
  2107  0498  3850               	iorlw	80
  2108  0499  008F               	movwf	15	;volatile
  2109                           
  2110                           ;./Oscilador.h: 31:             break;
  2111  049A  2CD0               	goto	l94
  2112  049B                     l1336:	
  2113                           
  2114                           ;./Oscilador.h: 34:             OSCCONbits.IRCF = 0b110;
  2115  049B  1683               	bsf	3,5	;RP0=1, select bank1
  2116  049C  1303               	bcf	3,6	;RP1=0, select bank1
  2117  049D  080F               	movf	15,w	;volatile
  2118  049E  398F               	andlw	-113
  2119  049F  3860               	iorlw	96
  2120  04A0  008F               	movwf	15	;volatile
  2121                           
  2122                           ;./Oscilador.h: 35:             break;
  2123  04A1  2CD0               	goto	l94
  2124  04A2                     l1338:	
  2125                           
  2126                           ;./Oscilador.h: 38:             OSCCONbits.IRCF = 0b111;
  2127  04A2  3070               	movlw	112
  2128  04A3  1683               	bsf	3,5	;RP0=1, select bank1
  2129  04A4  1303               	bcf	3,6	;RP1=0, select bank1
  2130  04A5  048F               	iorwf	15,f	;volatile
  2131                           
  2132                           ;./Oscilador.h: 39:             break;
  2133  04A6  2CD0               	goto	l94
  2134  04A7                     l1340:	
  2135                           
  2136                           ;./Oscilador.h: 42:             OSCCONbits.IRCF = 0b110;
  2137  04A7  1683               	bsf	3,5	;RP0=1, select bank1
  2138  04A8  1303               	bcf	3,6	;RP1=0, select bank1
  2139  04A9  080F               	movf	15,w	;volatile
  2140  04AA  398F               	andlw	-113
  2141  04AB  3860               	iorlw	96
  2142  04AC  008F               	movwf	15	;volatile
  2143                           
  2144                           ;./Oscilador.h: 43:             break;
  2145  04AD  2CD0               	goto	l94
  2146  04AE                     l1344:	
  2147  04AE  0872               	movf	iniciarOSC@frec,w
  2148  04AF  00F0               	movwf	??_iniciarOSC
  2149  04B0  01F1               	clrf	??_iniciarOSC+1
  2150                           
  2151                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2152                           ; Switch size 1, requested type "simple"
  2153                           ; Number of cases is 1, Range of values is 0 to 0
  2154                           ; switch strategies available:
  2155                           ; Name         Instructions Cycles
  2156                           ; simple_byte            4     3 (average)
  2157                           ; direct_byte           11     8 (fixed)
  2158                           ; jumptable            260     6 (fixed)
  2159                           ;	Chosen strategy is simple_byte
  2160  04B1  0871               	movf	??_iniciarOSC+1,w
  2161  04B2  3A00               	xorlw	0	; case 0
  2162  04B3  1903               	skipnz
  2163  04B4  2CB6               	goto	l1472
  2164  04B5  2CA7               	goto	l1340
  2165  04B6                     l1472:	
  2166                           
  2167                           ; Switch size 1, requested type "simple"
  2168                           ; Number of cases is 8, Range of values is 0 to 7
  2169                           ; switch strategies available:
  2170                           ; Name         Instructions Cycles
  2171                           ; simple_byte           25    13 (average)
  2172                           ; direct_byte           32     8 (fixed)
  2173                           ; jumptable            260     6 (fixed)
  2174                           ;	Chosen strategy is simple_byte
  2175  04B6  0870               	movf	??_iniciarOSC,w
  2176  04B7  3A00               	xorlw	0	; case 0
  2177  04B8  1903               	skipnz
  2178  04B9  2C73               	goto	l1324
  2179  04BA  3A01               	xorlw	1	; case 1
  2180  04BB  1903               	skipnz
  2181  04BC  2C78               	goto	l1326
  2182  04BD  3A03               	xorlw	3	; case 2
  2183  04BE  1903               	skipnz
  2184  04BF  2C7F               	goto	l1328
  2185  04C0  3A01               	xorlw	1	; case 3
  2186  04C1  1903               	skipnz
  2187  04C2  2C86               	goto	l1330
  2188  04C3  3A07               	xorlw	7	; case 4
  2189  04C4  1903               	skipnz
  2190  04C5  2C8D               	goto	l1332
  2191  04C6  3A01               	xorlw	1	; case 5
  2192  04C7  1903               	skipnz
  2193  04C8  2C94               	goto	l1334
  2194  04C9  3A03               	xorlw	3	; case 6
  2195  04CA  1903               	skipnz
  2196  04CB  2C9B               	goto	l1336
  2197  04CC  3A01               	xorlw	1	; case 7
  2198  04CD  1903               	skipnz
  2199  04CE  2CA2               	goto	l1338
  2200  04CF  2CA7               	goto	l1340
  2201  04D0                     l94:	
  2202                           
  2203                           ;./Oscilador.h: 47:     OSCCONbits.SCS = 1;
  2204  04D0  140F               	bsf	15,0	;volatile
  2205  04D1                     l103:	
  2206  04D1  0008               	return
  2207  04D2                     __end_of_iniciarOSC:	
  2208                           
  2209                           	psect	text10
  2210  03C4                     __ptext10:	
  2211 ;; *************** function _iniciarLCD *****************
  2212 ;; Defined at:
  2213 ;;		line 25 in file "./LCD.h"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;		None
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;		None
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  1    wreg      void 
  2220 ;; Registers used:
  2221 ;;		wreg, status,2, status,0, pclath, cstack
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2227 ;;      Params:         0       0       0       0       0
  2228 ;;      Locals:         0       0       0       0       0
  2229 ;;      Temps:          2       0       0       0       0
  2230 ;;      Totals:         2       0       0       0       0
  2231 ;;Total ram usage:        2 bytes
  2232 ;; Hardware stack levels used:    1
  2233 ;; Hardware stack levels required when called:    1
  2234 ;; This function calls:
  2235 ;;		_comando
  2236 ;; This function is called by:
  2237 ;;		_main
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           
  2242                           ;psect for function _iniciarLCD
  2243  03C4                     _iniciarLCD:	
  2244  03C4                     l1296:	
  2245                           ;incstack = 0
  2246                           ; Regs used in _iniciarLCD: [wreg+status,2+status,0+pclath+cstack]
  2247                           
  2248                           
  2249                           ;./LCD.h: 27:     PORTDbits.RD6 = 0;
  2250  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  2251  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  2252  03C6  1308               	bcf	8,6	;volatile
  2253  03C7                     l1298:	
  2254                           
  2255                           ;./LCD.h: 29:     comando(0);
  2256  03C7  3000               	movlw	0
  2257  03C8  120A  118A  22E1  120A  118A  	fcall	_comando
  2258  03CD                     l1300:	
  2259                           
  2260                           ;./LCD.h: 31:     _delay((unsigned long)((15)*(4000000/4000.0)));
  2261  03CD  3014               	movlw	20
  2262  03CE  00F4               	movwf	??_iniciarLCD+1
  2263  03CF  3079               	movlw	121
  2264  03D0  00F3               	movwf	??_iniciarLCD
  2265  03D1                     u767:	
  2266  03D1  0BF3               	decfsz	??_iniciarLCD,f
  2267  03D2  2BD1               	goto	u767
  2268  03D3  0BF4               	decfsz	??_iniciarLCD+1,f
  2269  03D4  2BD1               	goto	u767
  2270  03D5  2BD6               	nop2
  2271  03D6                     l1302:	
  2272                           
  2273                           ;./LCD.h: 33:     comando(0x30);
  2274  03D6  3030               	movlw	48
  2275  03D7  120A  118A  22E1  120A  118A  	fcall	_comando
  2276                           
  2277                           ;./LCD.h: 34:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2278  03DC  3006               	movlw	6
  2279  03DD  00F4               	movwf	??_iniciarLCD+1
  2280  03DE  3030               	movlw	48
  2281  03DF  00F3               	movwf	??_iniciarLCD
  2282  03E0                     u777:	
  2283  03E0  0BF3               	decfsz	??_iniciarLCD,f
  2284  03E1  2BE0               	goto	u777
  2285  03E2  0BF4               	decfsz	??_iniciarLCD+1,f
  2286  03E3  2BE0               	goto	u777
  2287  03E4  0000               	nop
  2288  03E5                     l1304:	
  2289                           
  2290                           ;./LCD.h: 36:     comando(0x30);
  2291  03E5  3030               	movlw	48
  2292  03E6  120A  118A  22E1  120A  118A  	fcall	_comando
  2293  03EB                     l1306:	
  2294                           
  2295                           ;./LCD.h: 37:     _delay((unsigned long)((160)*(4000000/4000000.0)));
  2296  03EB  3035               	movlw	53
  2297  03EC  00F3               	movwf	??_iniciarLCD
  2298  03ED                     u787:	
  2299  03ED  0BF3               	decfsz	??_iniciarLCD,f
  2300  03EE  2BED               	goto	u787
  2301                           
  2302                           ;./LCD.h: 39:     comando(0x30);
  2303  03EF  3030               	movlw	48
  2304  03F0  120A  118A  22E1  120A  118A  	fcall	_comando
  2305  03F5                     l1308:	
  2306                           
  2307                           ;./LCD.h: 40:     _delay((unsigned long)((160)*(4000000/4000000.0)));
  2308  03F5  3035               	movlw	53
  2309  03F6  00F3               	movwf	??_iniciarLCD
  2310  03F7                     u797:	
  2311  03F7  0BF3               	decfsz	??_iniciarLCD,f
  2312  03F8  2BF7               	goto	u797
  2313  03F9                     l1310:	
  2314                           
  2315                           ;./LCD.h: 42:     comando(0x38);
  2316  03F9  3038               	movlw	56
  2317  03FA  120A  118A  22E1  120A  118A  	fcall	_comando
  2318  03FF                     l1312:	
  2319                           
  2320                           ;./LCD.h: 44:     comando(0x10);
  2321  03FF  3010               	movlw	16
  2322  0400  120A  118A  22E1  120A  118A  	fcall	_comando
  2323  0405                     l1314:	
  2324                           
  2325                           ;./LCD.h: 46:     comando(0x01);
  2326  0405  3001               	movlw	1
  2327  0406  120A  118A  22E1  120A  118A  	fcall	_comando
  2328  040B                     l1316:	
  2329                           
  2330                           ;./LCD.h: 48:     comando(0x06);
  2331  040B  3006               	movlw	6
  2332  040C  120A  118A  22E1  120A  118A  	fcall	_comando
  2333  0411                     l1318:	
  2334                           
  2335                           ;./LCD.h: 50:     comando(0x0F);
  2336  0411  300F               	movlw	15
  2337  0412  120A  118A  22E1  120A  118A  	fcall	_comando
  2338  0417                     l71:	
  2339  0417  0008               	return
  2340  0418                     __end_of_iniciarLCD:	
  2341                           
  2342                           	psect	text11
  2343  02CE                     __ptext11:	
  2344 ;; *************** function _borrarv *****************
  2345 ;; Defined at:
  2346 ;;		line 54 in file "./LCD.h"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;		None
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;		None
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      void 
  2353 ;; Registers used:
  2354 ;;		wreg, status,2, status,0, pclath, cstack
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2360 ;;      Params:         0       0       0       0       0
  2361 ;;      Locals:         0       0       0       0       0
  2362 ;;      Temps:          0       0       0       0       0
  2363 ;;      Totals:         0       0       0       0       0
  2364 ;;Total ram usage:        0 bytes
  2365 ;; Hardware stack levels used:    1
  2366 ;; Hardware stack levels required when called:    1
  2367 ;; This function calls:
  2368 ;;		_comando
  2369 ;; This function is called by:
  2370 ;;		_main
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           
  2375                           ;psect for function _borrarv
  2376  02CE                     _borrarv:	
  2377  02CE                     l1320:	
  2378                           ;incstack = 0
  2379                           ; Regs used in _borrarv: [wreg+status,2+status,0+pclath+cstack]
  2380                           
  2381                           
  2382                           ;./LCD.h: 56:     comando(0);
  2383  02CE  3000               	movlw	0
  2384  02CF  120A  118A  22E1  120A  118A  	fcall	_comando
  2385                           
  2386                           ;./LCD.h: 57:     comando(1);
  2387  02D4  3001               	movlw	1
  2388  02D5  120A  118A  22E1  120A  118A  	fcall	_comando
  2389                           
  2390                           ;./LCD.h: 59:     comando(0x0C);
  2391  02DA  300C               	movlw	12
  2392  02DB  120A  118A  22E1  120A  118A  	fcall	_comando
  2393  02E0                     l74:	
  2394  02E0  0008               	return
  2395  02E1                     __end_of_borrarv:	
  2396                           
  2397                           	psect	text12
  2398  02E1                     __ptext12:	
  2399 ;; *************** function _comando *****************
  2400 ;; Defined at:
  2401 ;;		line 16 in file "./LCD.h"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;  x               1    wreg     const unsigned char 
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;  x               1    2[COMMON] const unsigned char 
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  1    wreg      void 
  2408 ;; Registers used:
  2409 ;;		wreg
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2415 ;;      Params:         0       0       0       0       0
  2416 ;;      Locals:         1       0       0       0       0
  2417 ;;      Temps:          2       0       0       0       0
  2418 ;;      Totals:         3       0       0       0       0
  2419 ;;Total ram usage:        3 bytes
  2420 ;; Hardware stack levels used:    1
  2421 ;; This function calls:
  2422 ;;		Nothing
  2423 ;; This function is called by:
  2424 ;;		_iniciarLCD
  2425 ;;		_borrarv
  2426 ;;		_colocar
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           
  2431                           ;psect for function _comando
  2432  02E1                     _comando:	
  2433                           
  2434                           ;incstack = 0
  2435                           ; Regs used in _comando: [wreg]
  2436                           ;comando@x stored from wreg
  2437  02E1  00F2               	movwf	comando@x
  2438  02E2                     l1106:	
  2439                           
  2440                           ;./LCD.h: 16: void comando(const char x);./LCD.h: 17: {;./LCD.h: 18:     PORTDbits.RD6 =
      +                           0;
  2441  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  2442  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  2443  02E4  1308               	bcf	8,6	;volatile
  2444  02E5                     l1108:	
  2445                           
  2446                           ;./LCD.h: 19:     PORTB = x;
  2447  02E5  0872               	movf	comando@x,w
  2448  02E6  0086               	movwf	6	;volatile
  2449  02E7                     l1110:	
  2450                           
  2451                           ;./LCD.h: 20:     PORTDbits.RD7 = 1;
  2452  02E7  1788               	bsf	8,7	;volatile
  2453                           
  2454                           ;./LCD.h: 21:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2455  02E8  3006               	movlw	6
  2456  02E9  00F1               	movwf	??_comando+1
  2457  02EA  3030               	movlw	48
  2458  02EB  00F0               	movwf	??_comando
  2459  02EC                     u807:	
  2460  02EC  0BF0               	decfsz	??_comando,f
  2461  02ED  2AEC               	goto	u807
  2462  02EE  0BF1               	decfsz	??_comando+1,f
  2463  02EF  2AEC               	goto	u807
  2464  02F0  0000               	nop
  2465  02F1                     l1112:	
  2466                           
  2467                           ;./LCD.h: 22:     PORTDbits.RD7 = 0;
  2468  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  2469  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  2470  02F3  1388               	bcf	8,7	;volatile
  2471  02F4                     l68:	
  2472  02F4  0008               	return
  2473  02F5                     __end_of_comando:	
  2474                           
  2475                           	psect	text13
  2476  02A5                     __ptext13:	
  2477 ;; *************** function _I2C_Master_Write *****************
  2478 ;; Defined at:
  2479 ;;		line 65 in file "./I2Cmaestro.h"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  d               2    0[COMMON] unsigned int 
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;		None
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  1    wreg      void 
  2486 ;; Registers used:
  2487 ;;		wreg, status,2, status,0, pclath, cstack
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2493 ;;      Params:         2       0       0       0       0
  2494 ;;      Locals:         0       0       0       0       0
  2495 ;;      Temps:          0       0       0       0       0
  2496 ;;      Totals:         2       0       0       0       0
  2497 ;;Total ram usage:        2 bytes
  2498 ;; Hardware stack levels used:    1
  2499 ;; Hardware stack levels required when called:    1
  2500 ;; This function calls:
  2501 ;;		_I2C_Master_Wait
  2502 ;; This function is called by:
  2503 ;;		_main
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           
  2508                           ;psect for function _I2C_Master_Write
  2509  02A5                     _I2C_Master_Write:	
  2510  02A5                     l1276:	
  2511                           ;incstack = 0
  2512                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2513                           
  2514                           
  2515                           ;./I2Cmaestro.h: 65: void I2C_Master_Write(unsigned d);./I2Cmaestro.h: 66: {;./I2Cmaestr
      +                          o.h: 67:     I2C_Master_Wait();
  2516  02A5  120A  118A  22AF  120A  118A  	fcall	_I2C_Master_Wait
  2517  02AA                     l1278:	
  2518                           
  2519                           ;./I2Cmaestro.h: 68:     SSPBUF = d;
  2520  02AA  0870               	movf	I2C_Master_Write@d,w
  2521  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  2522  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  2523  02AD  0093               	movwf	19	;volatile
  2524  02AE                     l60:	
  2525  02AE  0008               	return
  2526  02AF                     __end_of_I2C_Master_Write:	
  2527                           
  2528                           	psect	text14
  2529  029C                     __ptext14:	
  2530 ;; *************** function _I2C_Master_Stop *****************
  2531 ;; Defined at:
  2532 ;;		line 55 in file "./I2Cmaestro.h"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;		None
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;		None
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      void 
  2539 ;; Registers used:
  2540 ;;		wreg, status,2, status,0, pclath, cstack
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2546 ;;      Params:         0       0       0       0       0
  2547 ;;      Locals:         0       0       0       0       0
  2548 ;;      Temps:          0       0       0       0       0
  2549 ;;      Totals:         0       0       0       0       0
  2550 ;;Total ram usage:        0 bytes
  2551 ;; Hardware stack levels used:    1
  2552 ;; Hardware stack levels required when called:    1
  2553 ;; This function calls:
  2554 ;;		_I2C_Master_Wait
  2555 ;; This function is called by:
  2556 ;;		_main
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           
  2561                           ;psect for function _I2C_Master_Stop
  2562  029C                     _I2C_Master_Stop:	
  2563  029C                     l1272:	
  2564                           ;incstack = 0
  2565                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2566                           
  2567                           
  2568                           ;./I2Cmaestro.h: 57:     I2C_Master_Wait();
  2569  029C  120A  118A  22AF  120A  118A  	fcall	_I2C_Master_Wait
  2570  02A1                     l1274:	
  2571                           
  2572                           ;./I2Cmaestro.h: 58:     SSPCON2bits.PEN = 1;
  2573  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  2574  02A2  1303               	bcf	3,6	;RP1=0, select bank1
  2575  02A3  1511               	bsf	17,2	;volatile
  2576  02A4                     l57:	
  2577  02A4  0008               	return
  2578  02A5                     __end_of_I2C_Master_Stop:	
  2579                           
  2580                           	psect	text15
  2581  0293                     __ptext15:	
  2582 ;; *************** function _I2C_Master_Start *****************
  2583 ;; Defined at:
  2584 ;;		line 39 in file "./I2Cmaestro.h"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;		None
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;		None
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  1    wreg      void 
  2591 ;; Registers used:
  2592 ;;		wreg, status,2, status,0, pclath, cstack
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2598 ;;      Params:         0       0       0       0       0
  2599 ;;      Locals:         0       0       0       0       0
  2600 ;;      Temps:          0       0       0       0       0
  2601 ;;      Totals:         0       0       0       0       0
  2602 ;;Total ram usage:        0 bytes
  2603 ;; Hardware stack levels used:    1
  2604 ;; Hardware stack levels required when called:    1
  2605 ;; This function calls:
  2606 ;;		_I2C_Master_Wait
  2607 ;; This function is called by:
  2608 ;;		_main
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           
  2613                           ;psect for function _I2C_Master_Start
  2614  0293                     _I2C_Master_Start:	
  2615  0293                     l1268:	
  2616                           ;incstack = 0
  2617                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2618                           
  2619                           
  2620                           ;./I2Cmaestro.h: 41:     I2C_Master_Wait();
  2621  0293  120A  118A  22AF  120A  118A  	fcall	_I2C_Master_Wait
  2622  0298                     l1270:	
  2623                           
  2624                           ;./I2Cmaestro.h: 42:     SSPCON2bits.SEN = 1;
  2625  0298  1683               	bsf	3,5	;RP0=1, select bank1
  2626  0299  1303               	bcf	3,6	;RP1=0, select bank1
  2627  029A  1411               	bsf	17,0	;volatile
  2628  029B                     l54:	
  2629  029B  0008               	return
  2630  029C                     __end_of_I2C_Master_Start:	
  2631                           
  2632                           	psect	text16
  2633  032D                     __ptext16:	
  2634 ;; *************** function _I2C_Master_Read *****************
  2635 ;; Defined at:
  2636 ;;		line 74 in file "./I2Cmaestro.h"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  a               2    0[COMMON] unsigned short 
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;  temp            2    4[COMMON] unsigned short 
  2641 ;; Return value:  Size  Location     Type
  2642 ;;                  2    0[COMMON] unsigned short 
  2643 ;; Registers used:
  2644 ;;		wreg, status,2, status,0, pclath, cstack
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2650 ;;      Params:         2       0       0       0       0
  2651 ;;      Locals:         2       0       0       0       0
  2652 ;;      Temps:          2       0       0       0       0
  2653 ;;      Totals:         6       0       0       0       0
  2654 ;;Total ram usage:        6 bytes
  2655 ;; Hardware stack levels used:    1
  2656 ;; Hardware stack levels required when called:    1
  2657 ;; This function calls:
  2658 ;;		_I2C_Master_Wait
  2659 ;; This function is called by:
  2660 ;;		_main
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           
  2665                           ;psect for function _I2C_Master_Read
  2666  032D                     _I2C_Master_Read:	
  2667  032D                     l1280:	
  2668                           ;incstack = 0
  2669                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2670                           
  2671                           
  2672                           ;./I2Cmaestro.h: 74: unsigned short I2C_Master_Read(unsigned short a);./I2Cmaestro.h: 75
      +                          : {;./I2Cmaestro.h: 76:     unsigned short temp;;./I2Cmaestro.h: 77:     I2C_Master_Wait
      +                          ();
  2673  032D  120A  118A  22AF  120A  118A  	fcall	_I2C_Master_Wait
  2674  0332                     l1282:	
  2675                           
  2676                           ;./I2Cmaestro.h: 78:     SSPCON2bits.RCEN = 1;
  2677  0332  1683               	bsf	3,5	;RP0=1, select bank1
  2678  0333  1303               	bcf	3,6	;RP1=0, select bank1
  2679  0334  1591               	bsf	17,3	;volatile
  2680                           
  2681                           ;./I2Cmaestro.h: 79:     I2C_Master_Wait();
  2682  0335  120A  118A  22AF  120A  118A  	fcall	_I2C_Master_Wait
  2683  033A                     l1284:	
  2684                           
  2685                           ;./I2Cmaestro.h: 80:     temp = SSPBUF;
  2686  033A  1283               	bcf	3,5	;RP0=0, select bank0
  2687  033B  1303               	bcf	3,6	;RP1=0, select bank0
  2688  033C  0813               	movf	19,w	;volatile
  2689  033D  00F2               	movwf	??_I2C_Master_Read
  2690  033E  01F3               	clrf	??_I2C_Master_Read+1
  2691  033F  0872               	movf	??_I2C_Master_Read,w
  2692  0340  00F4               	movwf	I2C_Master_Read@temp
  2693  0341  0873               	movf	??_I2C_Master_Read+1,w
  2694  0342  00F5               	movwf	I2C_Master_Read@temp+1
  2695  0343                     l1286:	
  2696                           
  2697                           ;./I2Cmaestro.h: 81:     I2C_Master_Wait();
  2698  0343  120A  118A  22AF  120A  118A  	fcall	_I2C_Master_Wait
  2699  0348                     l1288:	
  2700                           
  2701                           ;./I2Cmaestro.h: 82:     if(a == 1){
  2702  0348  0370               	decf	I2C_Master_Read@a,w
  2703  0349  0471               	iorwf	I2C_Master_Read@a+1,w
  2704  034A  1D03               	btfss	3,2
  2705  034B  2B4D               	goto	u681
  2706  034C  2B4E               	goto	u680
  2707  034D                     u681:	
  2708  034D  2B52               	goto	l63
  2709  034E                     u680:	
  2710  034E                     l1290:	
  2711                           
  2712                           ;./I2Cmaestro.h: 83:         SSPCON2bits.ACKDT = 0;
  2713  034E  1683               	bsf	3,5	;RP0=1, select bank1
  2714  034F  1303               	bcf	3,6	;RP1=0, select bank1
  2715  0350  1291               	bcf	17,5	;volatile
  2716                           
  2717                           ;./I2Cmaestro.h: 84:     }else{
  2718  0351  2B55               	goto	l64
  2719  0352                     l63:	
  2720                           
  2721                           ;./I2Cmaestro.h: 85:         SSPCON2bits.ACKDT = 1;
  2722  0352  1683               	bsf	3,5	;RP0=1, select bank1
  2723  0353  1303               	bcf	3,6	;RP1=0, select bank1
  2724  0354  1691               	bsf	17,5	;volatile
  2725  0355                     l64:	
  2726                           ;./I2Cmaestro.h: 86:     }
  2727                           
  2728                           
  2729                           ;./I2Cmaestro.h: 87:     SSPCON2bits.ACKEN = 1;
  2730  0355  1611               	bsf	17,4	;volatile
  2731  0356                     l1292:	
  2732                           
  2733                           ;./I2Cmaestro.h: 88:     return temp;
  2734  0356  0875               	movf	I2C_Master_Read@temp+1,w
  2735  0357  00F1               	movwf	?_I2C_Master_Read+1
  2736  0358  0874               	movf	I2C_Master_Read@temp,w
  2737  0359  00F0               	movwf	?_I2C_Master_Read
  2738  035A                     l65:	
  2739  035A  0008               	return
  2740  035B                     __end_of_I2C_Master_Read:	
  2741                           
  2742                           	psect	text17
  2743  02AF                     __ptext17:	
  2744 ;; *************** function _I2C_Master_Wait *****************
  2745 ;; Defined at:
  2746 ;;		line 32 in file "./I2Cmaestro.h"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;		None
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;		None
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  1    wreg      void 
  2753 ;; Registers used:
  2754 ;;		wreg, status,2
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2760 ;;      Params:         0       0       0       0       0
  2761 ;;      Locals:         0       0       0       0       0
  2762 ;;      Temps:          0       0       0       0       0
  2763 ;;      Totals:         0       0       0       0       0
  2764 ;;Total ram usage:        0 bytes
  2765 ;; Hardware stack levels used:    1
  2766 ;; This function calls:
  2767 ;;		Nothing
  2768 ;; This function is called by:
  2769 ;;		_I2C_Master_Start
  2770 ;;		_I2C_Master_Stop
  2771 ;;		_I2C_Master_Write
  2772 ;;		_I2C_Master_Read
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           
  2777                           ;psect for function _I2C_Master_Wait
  2778  02AF                     _I2C_Master_Wait:	
  2779  02AF                     l1114:	
  2780                           ;incstack = 0
  2781                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2782                           
  2783  02AF                     l48:	
  2784                           ;./I2Cmaestro.h: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2785                           
  2786  02AF  1683               	bsf	3,5	;RP0=1, select bank1
  2787  02B0  1303               	bcf	3,6	;RP1=0, select bank1
  2788  02B1  1914               	btfsc	20,2	;volatile
  2789  02B2  2AB4               	goto	u361
  2790  02B3  2AB5               	goto	u360
  2791  02B4                     u361:	
  2792  02B4  2AAF               	goto	l48
  2793  02B5                     u360:	
  2794  02B5                     l1116:	
  2795  02B5  0811               	movf	17,w	;volatile
  2796  02B6  391F               	andlw	31
  2797  02B7  1D03               	btfss	3,2
  2798  02B8  2ABA               	goto	u371
  2799  02B9  2ABB               	goto	u370
  2800  02BA                     u371:	
  2801  02BA  2AAF               	goto	l48
  2802  02BB                     u370:	
  2803  02BB                     l51:	
  2804  02BB  0008               	return
  2805  02BC                     __end_of_I2C_Master_Wait:	
  2806                           
  2807                           	psect	text18
  2808  038C                     __ptext18:	
  2809 ;; *************** function _I2C_Master_Init *****************
  2810 ;; Defined at:
  2811 ;;		line 16 in file "./I2Cmaestro.h"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;  c               4    0[BANK0 ] const unsigned long 
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;		None
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  1    wreg      void 
  2818 ;; Registers used:
  2819 ;;		wreg, status,2, status,0, pclath, cstack
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2825 ;;      Params:         0       4       0       0       0
  2826 ;;      Locals:         0       0       0       0       0
  2827 ;;      Temps:          0       4       0       0       0
  2828 ;;      Totals:         0       8       0       0       0
  2829 ;;Total ram usage:        8 bytes
  2830 ;; Hardware stack levels used:    1
  2831 ;; Hardware stack levels required when called:    1
  2832 ;; This function calls:
  2833 ;;		___lldiv
  2834 ;; This function is called by:
  2835 ;;		_main
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           
  2840                           ;psect for function _I2C_Master_Init
  2841  038C                     _I2C_Master_Init:	
  2842  038C                     l1256:	
  2843                           ;incstack = 0
  2844                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2845                           
  2846                           
  2847                           ;./I2Cmaestro.h: 16: void I2C_Master_Init(const unsigned long c);./I2Cmaestro.h: 17: {;.
      +                          /I2Cmaestro.h: 18:     SSPCON = 0b00101000;
  2848  038C  3028               	movlw	40
  2849  038D  1283               	bcf	3,5	;RP0=0, select bank0
  2850  038E  1303               	bcf	3,6	;RP1=0, select bank0
  2851  038F  0094               	movwf	20	;volatile
  2852  0390                     l1258:	
  2853                           
  2854                           ;./I2Cmaestro.h: 19:     SSPCON2 = 0;
  2855  0390  1683               	bsf	3,5	;RP0=1, select bank1
  2856  0391  1303               	bcf	3,6	;RP1=0, select bank1
  2857  0392  0191               	clrf	17	;volatile
  2858  0393                     l1260:	
  2859                           
  2860                           ;./I2Cmaestro.h: 20:     SSPADD = (4000000/(4*c))-1;
  2861  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2862  0394  1303               	bcf	3,6	;RP1=0, select bank0
  2863  0395  0833               	movf	I2C_Master_Init@c,w
  2864  0396  00B7               	movwf	??_I2C_Master_Init
  2865  0397  0834               	movf	I2C_Master_Init@c+1,w
  2866  0398  00B8               	movwf	??_I2C_Master_Init+1
  2867  0399  0835               	movf	I2C_Master_Init@c+2,w
  2868  039A  00B9               	movwf	??_I2C_Master_Init+2
  2869  039B  0836               	movf	I2C_Master_Init@c+3,w
  2870  039C  00BA               	movwf	??_I2C_Master_Init+3
  2871  039D  3002               	movlw	2
  2872  039E                     u675:	
  2873  039E  1003               	clrc
  2874  039F  0DB7               	rlf	??_I2C_Master_Init,f
  2875  03A0  0DB8               	rlf	??_I2C_Master_Init+1,f
  2876  03A1  0DB9               	rlf	??_I2C_Master_Init+2,f
  2877  03A2  0DBA               	rlf	??_I2C_Master_Init+3,f
  2878  03A3                     u670:	
  2879  03A3  3EFF               	addlw	-1
  2880  03A4  1D03               	skipz
  2881  03A5  2B9E               	goto	u675
  2882  03A6  083A               	movf	??_I2C_Master_Init+3,w
  2883  03A7  00F3               	movwf	___lldiv@divisor+3
  2884  03A8  0839               	movf	??_I2C_Master_Init+2,w
  2885  03A9  00F2               	movwf	___lldiv@divisor+2
  2886  03AA  0838               	movf	??_I2C_Master_Init+1,w
  2887  03AB  00F1               	movwf	___lldiv@divisor+1
  2888  03AC  0837               	movf	??_I2C_Master_Init,w
  2889  03AD  00F0               	movwf	___lldiv@divisor
  2890  03AE  3000               	movlw	0
  2891  03AF  00F7               	movwf	___lldiv@dividend+3
  2892  03B0  303D               	movlw	61
  2893  03B1  00F6               	movwf	___lldiv@dividend+2
  2894  03B2  3009               	movlw	9
  2895  03B3  00F5               	movwf	___lldiv@dividend+1
  2896  03B4  3000               	movlw	0
  2897  03B5  00F4               	movwf	___lldiv@dividend
  2898  03B6  120A  118A  24D2  120A  118A  	fcall	___lldiv
  2899  03BB  0870               	movf	?___lldiv,w
  2900  03BC  3EFF               	addlw	255
  2901  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  2902  03BE  1303               	bcf	3,6	;RP1=0, select bank1
  2903  03BF  0093               	movwf	19	;volatile
  2904  03C0                     l1262:	
  2905                           
  2906                           ;./I2Cmaestro.h: 21:     SSPSTAT = 0;
  2907  03C0  0194               	clrf	20	;volatile
  2908  03C1                     l1264:	
  2909                           
  2910                           ;./I2Cmaestro.h: 22:     TRISCbits.TRISC3 = 1;
  2911  03C1  1587               	bsf	7,3	;volatile
  2912  03C2                     l1266:	
  2913                           
  2914                           ;./I2Cmaestro.h: 23:     TRISCbits.TRISC4 = 1;
  2915  03C2  1607               	bsf	7,4	;volatile
  2916  03C3                     l45:	
  2917  03C3  0008               	return
  2918  03C4                     __end_of_I2C_Master_Init:	
  2919                           
  2920                           	psect	text19
  2921  04D2                     __ptext19:	
  2922 ;; *************** function ___lldiv *****************
  2923 ;; Defined at:
  2924 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;  divisor         4    0[COMMON] unsigned long 
  2927 ;;  dividend        4    4[COMMON] unsigned long 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;  quotient        4    9[COMMON] unsigned long 
  2930 ;;  counter         1   13[COMMON] unsigned char 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  4    0[COMMON] unsigned long 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, status,0
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2940 ;;      Params:         8       0       0       0       0
  2941 ;;      Locals:         5       0       0       0       0
  2942 ;;      Temps:          1       0       0       0       0
  2943 ;;      Totals:        14       0       0       0       0
  2944 ;;Total ram usage:       14 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_I2C_Master_Init
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           
  2954                           ;psect for function ___lldiv
  2955  04D2                     ___lldiv:	
  2956  04D2                     l1150:	
  2957                           ;incstack = 0
  2958                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2959                           
  2960  04D2  3000               	movlw	0
  2961  04D3  00FC               	movwf	___lldiv@quotient+3
  2962  04D4  3000               	movlw	0
  2963  04D5  00FB               	movwf	___lldiv@quotient+2
  2964  04D6  3000               	movlw	0
  2965  04D7  00FA               	movwf	___lldiv@quotient+1
  2966  04D8  3000               	movlw	0
  2967  04D9  00F9               	movwf	___lldiv@quotient
  2968  04DA  0873               	movf	___lldiv@divisor+3,w
  2969  04DB  0472               	iorwf	___lldiv@divisor+2,w
  2970  04DC  0471               	iorwf	___lldiv@divisor+1,w
  2971  04DD  0470               	iorwf	___lldiv@divisor,w
  2972  04DE  1903               	skipnz
  2973  04DF  2CE1               	goto	u411
  2974  04E0  2CE2               	goto	u410
  2975  04E1                     u411:	
  2976  04E1  2D2F               	goto	l1170
  2977  04E2                     u410:	
  2978  04E2                     l1152:	
  2979  04E2  01FD               	clrf	___lldiv@counter
  2980  04E3  0AFD               	incf	___lldiv@counter,f
  2981  04E4  2CF2               	goto	l1156
  2982  04E5                     l1154:	
  2983  04E5  3001               	movlw	1
  2984  04E6  00F8               	movwf	??___lldiv
  2985  04E7                     u425:	
  2986  04E7  1003               	clrc
  2987  04E8  0DF0               	rlf	___lldiv@divisor,f
  2988  04E9  0DF1               	rlf	___lldiv@divisor+1,f
  2989  04EA  0DF2               	rlf	___lldiv@divisor+2,f
  2990  04EB  0DF3               	rlf	___lldiv@divisor+3,f
  2991  04EC  0BF8               	decfsz	??___lldiv,f
  2992  04ED  2CE7               	goto	u425
  2993  04EE  3001               	movlw	1
  2994  04EF  00F8               	movwf	??___lldiv
  2995  04F0  0878               	movf	??___lldiv,w
  2996  04F1  07FD               	addwf	___lldiv@counter,f
  2997  04F2                     l1156:	
  2998  04F2  1FF3               	btfss	___lldiv@divisor+3,7
  2999  04F3  2CF5               	goto	u431
  3000  04F4  2CF6               	goto	u430
  3001  04F5                     u431:	
  3002  04F5  2CE5               	goto	l1154
  3003  04F6                     u430:	
  3004  04F6                     l1158:	
  3005  04F6  3001               	movlw	1
  3006  04F7  00F8               	movwf	??___lldiv
  3007  04F8                     u445:	
  3008  04F8  1003               	clrc
  3009  04F9  0DF9               	rlf	___lldiv@quotient,f
  3010  04FA  0DFA               	rlf	___lldiv@quotient+1,f
  3011  04FB  0DFB               	rlf	___lldiv@quotient+2,f
  3012  04FC  0DFC               	rlf	___lldiv@quotient+3,f
  3013  04FD  0BF8               	decfsz	??___lldiv,f
  3014  04FE  2CF8               	goto	u445
  3015  04FF                     l1160:	
  3016  04FF  0873               	movf	___lldiv@divisor+3,w
  3017  0500  0277               	subwf	___lldiv@dividend+3,w
  3018  0501  1D03               	skipz
  3019  0502  2D0D               	goto	u455
  3020  0503  0872               	movf	___lldiv@divisor+2,w
  3021  0504  0276               	subwf	___lldiv@dividend+2,w
  3022  0505  1D03               	skipz
  3023  0506  2D0D               	goto	u455
  3024  0507  0871               	movf	___lldiv@divisor+1,w
  3025  0508  0275               	subwf	___lldiv@dividend+1,w
  3026  0509  1D03               	skipz
  3027  050A  2D0D               	goto	u455
  3028  050B  0870               	movf	___lldiv@divisor,w
  3029  050C  0274               	subwf	___lldiv@dividend,w
  3030  050D                     u455:	
  3031  050D  1C03               	skipc
  3032  050E  2D10               	goto	u451
  3033  050F  2D11               	goto	u450
  3034  0510                     u451:	
  3035  0510  2D20               	goto	l1166
  3036  0511                     u450:	
  3037  0511                     l1162:	
  3038  0511  0870               	movf	___lldiv@divisor,w
  3039  0512  02F4               	subwf	___lldiv@dividend,f
  3040  0513  0871               	movf	___lldiv@divisor+1,w
  3041  0514  1C03               	skipc
  3042  0515  0F71               	incfsz	___lldiv@divisor+1,w
  3043  0516  02F5               	subwf	___lldiv@dividend+1,f
  3044  0517  0872               	movf	___lldiv@divisor+2,w
  3045  0518  1C03               	skipc
  3046  0519  0F72               	incfsz	___lldiv@divisor+2,w
  3047  051A  02F6               	subwf	___lldiv@dividend+2,f
  3048  051B  0873               	movf	___lldiv@divisor+3,w
  3049  051C  1C03               	skipc
  3050  051D  0F73               	incfsz	___lldiv@divisor+3,w
  3051  051E  02F7               	subwf	___lldiv@dividend+3,f
  3052  051F                     l1164:	
  3053  051F  1479               	bsf	___lldiv@quotient,0
  3054  0520                     l1166:	
  3055  0520  3001               	movlw	1
  3056  0521                     u465:	
  3057  0521  1003               	clrc
  3058  0522  0CF3               	rrf	___lldiv@divisor+3,f
  3059  0523  0CF2               	rrf	___lldiv@divisor+2,f
  3060  0524  0CF1               	rrf	___lldiv@divisor+1,f
  3061  0525  0CF0               	rrf	___lldiv@divisor,f
  3062  0526  3EFF               	addlw	-1
  3063  0527  1D03               	skipz
  3064  0528  2D21               	goto	u465
  3065  0529                     l1168:	
  3066  0529  3001               	movlw	1
  3067  052A  02FD               	subwf	___lldiv@counter,f
  3068  052B  1D03               	btfss	3,2
  3069  052C  2D2E               	goto	u471
  3070  052D  2D2F               	goto	u470
  3071  052E                     u471:	
  3072  052E  2CF6               	goto	l1158
  3073  052F                     u470:	
  3074  052F                     l1170:	
  3075  052F  087C               	movf	___lldiv@quotient+3,w
  3076  0530  00F3               	movwf	?___lldiv+3
  3077  0531  087B               	movf	___lldiv@quotient+2,w
  3078  0532  00F2               	movwf	?___lldiv+2
  3079  0533  087A               	movf	___lldiv@quotient+1,w
  3080  0534  00F1               	movwf	?___lldiv+1
  3081  0535  0879               	movf	___lldiv@quotient,w
  3082  0536  00F0               	movwf	?___lldiv
  3083  0537                     l270:	
  3084  0537  0008               	return
  3085  0538                     __end_of___lldiv:	
  3086  007E                     btemp	set	126	;btemp
  3087  007E                     wtemp0	set	126


Data Sizes:
    Strings     33
    Constant    10
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      29
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    imprimir@texto	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_9(CODE[5]), STR_8(CODE[3]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> STR_5(CODE[4]), STR_4(CODE[3]), STR_3(CODE[4]), STR_2(CODE[7]), 
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _ultrasonico->___awdiv
    _luces->___awdiv
    _colocar->_comando
    _iniciarLCD->_comando
    _borrarv->_comando
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8882
                                              8 BANK0      2     2      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _borrarv
                            _colocar
                           _imprimir
                         _iniciarLCD
                         _iniciarOSC
                              _luces
                              _setup
                        _ultrasonico
 ---------------------------------------------------------------------------------
 (1) _ultrasonico                                          2     2      0    3137
                                              9 COMMON     2     2      0
                            ___awdiv
                            ___awmod
                            _colocar
                           _imprimir
                            _mostrar
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _luces                                                2     2      0    3137
                                              9 COMMON     2     2      0
                            ___awdiv
                            ___awmod
                            _colocar
                           _imprimir
                            _mostrar
 ---------------------------------------------------------------------------------
 (2) _mostrar                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _imprimir                                             5     5      0     387
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _colocar                                              4     3      1    1220
                                              3 COMMON     4     3      1
                            _comando
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _iniciarOSC                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _iniciarLCD                                           2     2      0      22
                                              3 COMMON     2     2      0
                            _comando
 ---------------------------------------------------------------------------------
 (1) _borrarv                                              0     0      0      22
                            _comando
 ---------------------------------------------------------------------------------
 (3) _comando                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     250
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _borrarv
     _comando
   _colocar
     _comando
   _imprimir
   _iniciarLCD
     _comando
   _iniciarOSC
   _luces
     ___awdiv
     ___awmod
     _colocar
       _comando
     _imprimir
     _mostrar
   _setup
   _ultrasonico
     ___awdiv
     ___awmod
     _colocar
       _comando
     _imprimir
     _mostrar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A      1D       5       36.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2B      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Mar 20 16:07:23 2020

                        _a 0009                          _y 002E                          _z 0026  
                        pc 0002                __CFG_CP$OFF 0000                         l51 02BB  
                       l60 02AE                         l45 03C3                         l54 029B  
                       l63 0352                         l71 0417                         l48 02AF  
                       l64 0355                         l80 032C                         l65 035A  
                       l57 02A4                         l74 02E0                         l83 037E  
                       l68 02F4                         l84 035F                         l94 04D0  
                       l86 038B                         l89 0308               ___awdiv@sign 0076  
                       _y1 002C                         _y2 002A                         _y3 0028  
                       _z1 0024                         _z2 0022                         _z3 0020  
                       fsr 0004                        l103 04D1                        l140 02CD  
                      l132 062A                        l400 0470                        l137 07F2  
                      l270 0537                        l387 059E                        u400 038B  
                      u401 038A                        u410 04E2                        u411 04E1  
                      u500 0559                        u501 0558                        u430 04F6  
                      u431 04F5                        u360 02B5                        u520 056B  
                      u600 0433                        u425 04E7                        u361 02B4  
                      u521 056A                        u601 0432                        u450 0511  
                      u370 02BB               __CFG_CPD$OFF 0000                        u451 0510  
                      u371 02BA                        u515 055D                        u540 057C  
                      u620 0445                        u380 030F                        u700 07AF  
                      u445 04F8                        u541 057B                        u621 0444  
                      u381 030E                        u701 07AE                        u470 052F  
                      u630 044F                        u390 0321                        u471 052E  
                      u455 050D                        u535 056C                        u631 044E  
                      u615 0437                        u391 0320                        u560 0590  
                      u480 053D                        u465 0521                        u561 058F  
                      u545 0578                        u481 053C                        u570 0595  
                      u490 0548                        u650 0462                        u571 0594  
                      u555 0584                        u491 0547                        u651 0461  
                      u635 044B                        u660 0467                        u580 041D  
                      u661 0466                        u645 0456                        u581 041C  
                      u717 06A0                        u670 03A3                        u590 0428  
                      u807 02EC                        u591 0427                        u727 06CB  
                      u680 034E                        u681 034D                        u737 06F6  
                      u690 0603                        u675 039E                        u747 0300  
                      u691 0602                        u757 0370                        u767 03D1  
                      u777 03E0                        u787 03ED                        u797 03F7  
                      _Luz 0032                        fsr0 0004                        indf 0000  
             ___awmod@sign 0076                colocar@temp 0076               __CFG_LVP$OFF 0000  
                     l1110 02E7                       l1112 02F1                       l1200 056B  
                     l1120 030F                       l1114 02AF                       l1106 02E2  
                     l1202 057C                       l1210 0590                       l1122 0314  
                     l1130 035C                       l1116 02B5                       l1108 02E5  
                     l1300 03CD                       l1212 0595                       l1204 0582  
                     l1220 0419                       l1124 031B                       l1140 0378  
                     l1132 0362                       l1150 04D2                       l1310 03F9  
                     l1302 03D6                       l1214 059A                       l1206 0583  
                     l1230 042D                       l1222 041D                       l1126 0321  
                     l1118 030A                       l1134 036B                       l1142 02F6  
                     l1160 04FF                       l1152 04E2                       l1320 02CE  
                     l1312 03FF                       l1304 03E5                       l1208 058A  
                     l1240 0445                       l1232 0433                       l1224 0422  
                     l1128 0326                       l1136 036C                       l1144 02F9  
                     l1400 02C5                       l1162 0511                       l1154 04E5  
                     l1170 052F                       l1314 0405                       l1306 03EB  
                     l1330 0486                       l1322 0472                       l1250 0467  
                     l1242 044F                       l1234 0436                       l1226 0424  
                     l1218 0418                       l1138 0375                       l1146 02FB  
                     l1402 02C6                       l1410 063B                       l1164 051F  
                     l1156 04F2                       l1260 0393                       l1316 040B  
                     l1308 03F5                       l1340 04A7                       l1332 048D  
                     l1324 0473                       l1180 0542                       l1252 046C  
                     l1244 0455                       l1236 043D                       l1228 0428  
                     l1148 0305                       l1420 0665                       l1412 0640  
                     l1404 062B                       l1166 0520                       l1158 04F6  
                     l1262 03C0                       l1270 0298                       l1318 0411  
                     l1334 0494                       l1326 0478                       l1190 0553  
                     l1182 0544                       l1174 0538                       l1246 045C  
                     l1238 0441                       l1350 059F                       l1430 0687  
                     l1422 066B                       l1414 064F                       l1406 0631  
                     l1168 0529                       l1264 03C1                       l1256 038C  
                     l1280 032D                       l1272 029C                       l1336 049B  
                     l1328 047F                       l1344 04AE                       l1192 0559  
                     l1184 0548                       l1176 0539                       l1248 0462  
                     l1360 060D                       l1352 05D5                       l1440 06D4  
                     l1432 0695                       l1424 0673                       l1416 0657  
                     l1408 0636                       l1266 03C2                       l1258 0390  
                     l1290 034E                       l1282 0332                       l1274 02A1  
                     l1338 04A2                       l1194 055C                       l1186 054D  
                     l1178 053D                       l1370 0708                       l1362 0613  
                     l1354 05E4                       l1450 06FF                       l1442 06DD  
                     l1434 069A                       l1426 0679                       l1418 065D  
                     l1292 0356                       l1284 033A                       l1268 0293  
                     l1276 02A5                       l1196 0563                       l1188 0551  
                     l1380 07A7                       l1372 0766                       l1364 0617  
                     l1356 05FB                       l1444 06EB                       l1436 06C5  
                     l1428 067E                       l1286 0343                       l1278 02AA  
                     l1198 0567                       l1382 07AF                       l1390 07D1  
                     l1374 0775                       l1366 0621                       l1358 0603  
                     l1446 06F0                       l1438 06CF                       l1288 0348  
                     l1296 03C4                       l1472 04B6                       l1392 07D9  
                     l1384 07B9                       l1376 078E                       l1368 0627  
                     l1448 06FA                       l1298 03C7                       l1394 07DF  
                     l1386 07BF                       l1378 0798                       l1396 07EF  
                     l1388 07CD                       l1398 02BC                       STR_1 001A  
                     STR_2 0013                       STR_3 0016                       STR_4 0031  
                     STR_5 0016                       STR_6 0026                       STR_7 002A  
                     STR_8 002E                       STR_9 0021               __CFG_WRT$OFF 0000  
                     _main 062B                       btemp 007E                       start 0000  
            __CFG_IESO$OFF 0000                _ultrasonico 059F           ?_I2C_Master_Init 0033  
         ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070            __end_of___awdiv 059F              __CFG_WDTE$OFF 0000  
          __end_of___awmod 0471                      _ANSEL 0188            __end_of___lldiv 0538  
          ___awdiv@divisor 0070            ___awdiv@counter 0075                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
           __CFG_FCMEN$OFF 0000            __end_of_comando 02F5            __end_of_colocar 032D  
          __end_of_borrarv 02E1              imprimir@texto 0074                      _luces 0708  
                    _setup 02BC             __CFG_BOREN$OFF 0000                      pclath 000A  
          __end_of_mostrar 0309                      status 0003                      wtemp0 007E  
           __CFG_MCLRE$OFF 0000            __initialization 07F3               __end_of_main 0708  
                   ??_main 003B          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070  
       ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072                     ?_luces 0070  
         ___awdiv@dividend 0072                     ?_setup 0070                     _ANSELH 0189  
                   _SSPADD 0093                     _SSPCON 0014                     _SSPBUF 0013  
           __CFG_PWRTE$OFF 0000                  ??___awdiv 0074                  ??___awmod 0074  
                ??___lldiv 0078             iniciarOSC@frec 0072                     _grados 0031  
         ___awdiv@quotient 0077            ___awmod@divisor 0070           __end_of_imprimir 038C  
          ___awmod@counter 0075                  ??_comando 0070                  ??_colocar 0074  
                ??_borrarv 0073                  ??_mostrar 0070    __end_of__initialization 07FC  
           __pcstackCOMMON 0070              __end_of_luces 07F3              __end_of_setup 02CE  
                  ??_luces 0079                    ??_setup 0070                 __pbssBANK0 0020  
             ?_ultrasonico 0070                 __pmaintext 062B                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 0003                  ?_imprimir 0070  
               _iniciarLCD 03C4                 _iniciarOSC 0471                    ___awdiv 0538  
                  ___awmod 0418                    ___lldiv 04D2                    __ptext1 059F  
                  __ptext2 02BC                    __ptext3 0708                    __ptext4 02F5  
                  __ptext5 035B                    __ptext6 0309                    __ptext7 0418  
                  __ptext8 0538                    __ptext9 0471                    _comando 02E1  
                  _colocar 0309                    _borrarv 02CE           ___awmod@dividend 0072  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009                    _mostrar 02F5                    clrloop0 028C  
     end_of_initialization 07FC                 ??_imprimir 0070  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070            ___lldiv@counter 007D  
         I2C_Master_Init@c 0033           I2C_Master_Read@a 0070                  _PORTAbits 0005  
                _PORTDbits 0008                  _TRISCbits 0087                  _TRISDbits 0088  
              ?_iniciarLCD 0070                ?_iniciarOSC 0070       __size_of_ultrasonico 008C  
                _Distancia 0030        start_initialization 07F3          ??_I2C_Master_Init 0037  
        ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070  
 __CFG_FOSC$INTRC_NOCLKOUT 0000                  ___latbits 0002              __pcstackBANK0 0033  
      __size_of_iniciarLCD 0054        __size_of_iniciarOSC 0061                  __end_of_a 0013  
         _I2C_Master_Start 0293           _I2C_Master_Write 02A5          __size_of_imprimir 0031  
                 ?___awdiv 0070                   ?___awmod 0070                   ?___lldiv 0070  
                __pstrings 0003                   ?_comando 0070                   ?_colocar 0073  
                 ?_borrarv 0070                   ?_mostrar 0070             __size_of_luces 00EB  
           __size_of_setup 0012                  clear_ram0 028B                __stringbase 0008  
      I2C_Master_Read@temp 0074               ??_iniciarLCD 0073               ??_iniciarOSC 0070  
         __size_of___awdiv 0067           __size_of___awmod 0059           __size_of___lldiv 0066  
       __end_of__stringtab 0009                  imprimir@i 0072           __size_of_comando 0014  
         __size_of_colocar 0024           __size_of_borrarv 0013            _I2C_Master_Init 038C  
          _I2C_Master_Read 032D            _I2C_Master_Wait 02AF            _I2C_Master_Stop 029C  
       __end_of_iniciarLCD 0418                   __ptext10 03C4                   __ptext11 02CE  
                 __ptext12 02E1                   __ptext13 02A5                   __ptext14 029C  
                 __ptext15 0293                   __ptext16 032D                   __ptext17 02AF  
                 __ptext18 038C                   __ptext19 04D2         __end_of_iniciarOSC 04D2  
        __CFG_BOR4V$BOR40V 0000           __size_of_mostrar 0014              __size_of_main 00DD  
                 _imprimir 035B              ??_ultrasonico 0079                   comando@x 0072  
                 colocar@x 0075                   colocar@y 0073   __end_of_I2C_Master_Start 029C  
 __end_of_I2C_Master_Write 02AF           ___lldiv@dividend 0074                  stringcode 0003  
               _OSCCONbits 008F                   mostrar@t 0072    __end_of_I2C_Master_Init 03C4  
  __end_of_I2C_Master_Read 035B    __end_of_I2C_Master_Wait 02BC        __end_of_ultrasonico 062B  
  __end_of_I2C_Master_Stop 02A5           ___lldiv@quotient 0079          I2C_Master_Write@d 0070  
                 stringdir 0003                   stringtab 0003                _SSPCON2bits 0091  
