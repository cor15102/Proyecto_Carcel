

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Apr 08 15:20:16 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.10
    36                           ; Generated 31/07/2019 GMT
    37                           ; 
    38                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  0105                     	;# 
   133  0107                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0185                     	;# 
   142  0187                     	;# 
   143  0188                     	;# 
   144  0189                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001D                     	;# 
   180  001E                     	;# 
   181  001F                     	;# 
   182  0081                     	;# 
   183  0085                     	;# 
   184  0086                     	;# 
   185  0087                     	;# 
   186  0088                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  0105                     	;# 
   211  0107                     	;# 
   212  0108                     	;# 
   213  0109                     	;# 
   214  010C                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0185                     	;# 
   220  0187                     	;# 
   221  0188                     	;# 
   222  0189                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225                           
   226                           	psect	strings
   227  0003                     __pstrings:	
   228  0003                     stringtab:	
   229  0003                     __stringtab:	
   230  0003                     stringcode:	
   231                           ;	String table - string pointers are 1 byte each
   232                           
   233  0003                     stringdir:	
   234  0003  3000               	movlw	high stringdir
   235  0004  008A               	movwf	10
   236  0005  0804               	movf	4,w
   237  0006  0A84               	incf	4,f
   238  0007  0782               	addwf	2,f
   239  0008                     __stringbase:	
   240  0008  3400               	retlw	0
   241  0009                     __end_of__stringtab:	
   242  0009                     _a:	
   243  0009  3430               	retlw	48
   244  000A  3431               	retlw	49
   245  000B  3432               	retlw	50
   246  000C  3433               	retlw	51
   247  000D  3434               	retlw	52
   248  000E  3435               	retlw	53
   249  000F  3436               	retlw	54
   250  0010  3437               	retlw	55
   251  0011  3438               	retlw	56
   252  0012  3439               	retlw	57
   253  0013                     __end_of_a:	
   254  0008                     _PORTD	set	8
   255  0007                     _PORTC	set	7
   256  0005                     _PORTA	set	5
   257  0005                     _PORTAbits	set	5
   258  0006                     _PORTB	set	6
   259  0008                     _PORTDbits	set	8
   260  0013                     _SSPBUF	set	19
   261  0014                     _SSPCON	set	20
   262  0088                     _TRISDbits	set	136
   263  0087                     _TRISC	set	135
   264  0086                     _TRISB	set	134
   265  0085                     _TRISA	set	133
   266  008F                     _OSCCONbits	set	143
   267  0091                     _SSPCON2bits	set	145
   268  0087                     _TRISCbits	set	135
   269  0094                     _SSPSTAT	set	148
   270  0093                     _SSPADD	set	147
   271  0091                     _SSPCON2	set	145
   272  0189                     _ANSELH	set	393
   273  0188                     _ANSEL	set	392
   274  0013                     STR_2:	
   275  0013  3420               	retlw	32	;' '
   276  0014  3420               	retlw	32	;' '
   277  0015  3420               	retlw	32	;' '
   278  0016  3420               	retlw	32	;' '
   279  0017  3420               	retlw	32	;' '
   280  0018  3420               	retlw	32	;' '
   281  0019  3400               	retlw	0
   282  001A                     STR_1:	
   283  001A  3441               	retlw	65	;'A'
   284  001B  344C               	retlw	76	;'L'
   285  001C  3445               	retlw	69	;'E'
   286  001D  3452               	retlw	82	;'R'
   287  001E  3454               	retlw	84	;'T'
   288  001F  3441               	retlw	65	;'A'
   289  0020  3400               	retlw	0
   290  0021                     STR_19:	
   291  0021  3448               	retlw	72	;'H'
   292  0022  346F               	retlw	111	;'o'
   293  0023  3472               	retlw	114	;'r'
   294  0024  3461               	retlw	97	;'a'
   295  0025  343A               	retlw	58	;':'
   296  0026  3400               	retlw	0
   297  0027                     STR_16:	
   298  0027  3448               	retlw	72	;'H'
   299  0028  3475               	retlw	117	;'u'
   300  0029  346D               	retlw	109	;'m'
   301  002A  346F               	retlw	111	;'o'
   302  002B  343A               	retlw	58	;':'
   303  002C  3400               	retlw	0
   304  002D                     STR_17:	
   305  002D  3454               	retlw	84	;'T'
   306  002E  3465               	retlw	101	;'e'
   307  002F  346D               	retlw	109	;'m'
   308  0030  343A               	retlw	58	;':'
   309  0031  3400               	retlw	0
   310  0032                     STR_13:	
   311  0032  344C               	retlw	76	;'L'
   312  0033  3475               	retlw	117	;'u'
   313  0034  347A               	retlw	122	;'z'
   314  0035  343A               	retlw	58	;':'
   315  0036  3400               	retlw	0
   316  0037                     STR_8:	
   317  0037  344F               	retlw	79	;'O'
   318  0038  3446               	retlw	70	;'F'
   319  0039  3446               	retlw	70	;'F'
   320  003A  3400               	retlw	0
   321  003B                     STR_14:	
   322  003B  3458               	retlw	88	;'X'
   323  003C  343A               	retlw	58	;':'
   324  003D  3400               	retlw	0
   325  003E                     STR_22:	
   326  003E  3443               	retlw	67	;'C'
   327  003F  3443               	retlw	67	;'C'
   328  0040  3400               	retlw	0
   329  0041                     STR_6:	
   330  0041  344F               	retlw	79	;'O'
   331  0042  344E               	retlw	78	;'N'
   332  0043  3400               	retlw	0
   333  0044                     STR_21:	
   334  0044  3450               	retlw	80	;'P'
   335  0045  3450               	retlw	80	;'P'
   336  0046  3400               	retlw	0
   337  0047                     STR_15:	
   338  0047  3463               	retlw	99	;'c'
   339  0048  346D               	retlw	109	;'m'
   340  0049  3400               	retlw	0
   341  004A                     STR_12:	
   342  004A  342B               	retlw	43	;'+'
   343  004B  3400               	retlw	0
   344  004C                     STR_10:	
   345  004C  342D               	retlw	45	;'-'
   346  004D  3400               	retlw	0
   347  0018                     
   348                           ; #config settings
   349  0000                     
   350                           	psect	cinit
   351  07F3                     start_initialization:	
   352  07F3                     __initialization:	
   353                           
   354                           ; Clear objects allocated to BANK0
   355  07F3  1383               	bcf	3,7	;select IRP bank0
   356  07F4  3020               	movlw	low __pbssBANK0
   357  07F5  0084               	movwf	4
   358  07F6  3038               	movlw	low (__pbssBANK0+24)
   359  07F7  120A  118A  20A6  120A  118A  	fcall	clear_ram0
   360  07FC                     end_of_initialization:	
   361                           ;End of C runtime variable initialization code
   362                           
   363  07FC                     __end_of__initialization:	
   364  07FC  0183               	clrf	3
   365  07FD  120A  118A  2E60   	ljmp	_main	;jump to C main() function
   366                           
   367                           	psect	bssBANK0
   368  0020                     __pbssBANK0:	
   369  0020                     _w3:	
   370  0020                     	ds	2
   371  0022                     _w2:	
   372  0022                     	ds	2
   373  0024                     _w1:	
   374  0024                     	ds	2
   375  0026                     _w:	
   376  0026                     	ds	2
   377  0028                     _z1:	
   378  0028                     	ds	2
   379  002A                     _z:	
   380  002A                     	ds	2
   381  002C                     _y3:	
   382  002C                     	ds	2
   383  002E                     _y2:	
   384  002E                     	ds	2
   385  0030                     _y1:	
   386  0030                     	ds	2
   387  0032                     _y:	
   388  0032                     	ds	2
   389  0034                     _Humo:	
   390  0034                     	ds	1
   391  0035                     _Distancia:	
   392  0035                     	ds	1
   393  0036                     _grados:	
   394  0036                     	ds	1
   395  0037                     _Luz:	
   396  0037                     	ds	1
   397                           
   398                           	psect	clrtext
   399  00A6                     clear_ram0:	
   400                           ;	Called with FSR containing the base address, and
   401                           ;	W with the last address+1
   402                           
   403  00A6  0064               	clrwdt	;clear the watchdog before getting into this loop
   404  00A7                     clrloop0:	
   405  00A7  0180               	clrf	0	;clear RAM location pointed to by FSR
   406  00A8  0A84               	incf	4,f	;increment pointer
   407  00A9  0604               	xorwf	4,w	;XOR with final address
   408  00AA  1903               	btfsc	3,2	;have we reached the end yet?
   409  00AB  3400               	retlw	0	;all done for this memory range, return
   410  00AC  0604               	xorwf	4,w	;XOR again to restore value
   411  00AD  28A7               	goto	clrloop0	;do the next byte
   412                           
   413                           	psect	cstackCOMMON
   414  0070                     __pcstackCOMMON:	
   415  0070                     ?_I2C_Master_Wait:	
   416  0070                     ??_I2C_Master_Wait:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?_I2C_Master_Start:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ??_I2C_Master_Start:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_I2C_Master_Stop:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ??_I2C_Master_Stop:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_I2C_Master_Write:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_comando:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ??_comando:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_iniciarLCD:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ?_borrarv:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_imprimir:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ??_imprimir:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ?_mostrar:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ??_mostrar:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?_shift:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ??_shift:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ?_iniciarOSC:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     ??_iniciarOSC:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ?_humo:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ?_ultrasonico:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ?_luces:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ?_celda:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ?_setup:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ??_setup:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ?_main:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ?_I2C_Master_Read:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ?___awdiv:	
   495                           ; 2 bytes @ 0x0
   496                           
   497  0070                     ?___awmod:	
   498                           ; 2 bytes @ 0x0
   499                           
   500  0070                     ?___lldiv:	
   501                           ; 2 bytes @ 0x0
   502                           
   503  0070                     I2C_Master_Write@d:	
   504                           ; 4 bytes @ 0x0
   505                           
   506  0070                     I2C_Master_Read@a:	
   507                           ; 2 bytes @ 0x0
   508                           
   509  0070                     ___awdiv@divisor:	
   510                           ; 2 bytes @ 0x0
   511                           
   512  0070                     ___awmod@divisor:	
   513                           ; 2 bytes @ 0x0
   514                           
   515  0070                     ___lldiv@divisor:	
   516                           ; 2 bytes @ 0x0
   517                           
   518                           
   519                           ; 4 bytes @ 0x0
   520  0070                     	ds	2
   521  0072                     ??_I2C_Master_Write:	
   522  0072                     ??_I2C_Master_Read:	
   523                           ; 1 bytes @ 0x2
   524                           
   525  0072                     comando@x:	
   526                           ; 1 bytes @ 0x2
   527                           
   528  0072                     mostrar@t:	
   529                           ; 1 bytes @ 0x2
   530                           
   531  0072                     iniciarOSC@frec:	
   532                           ; 1 bytes @ 0x2
   533                           
   534  0072                     imprimir@i:	
   535                           ; 1 bytes @ 0x2
   536                           
   537  0072                     ___awdiv@dividend:	
   538                           ; 2 bytes @ 0x2
   539                           
   540  0072                     ___awmod@dividend:	
   541                           ; 2 bytes @ 0x2
   542                           
   543                           
   544                           ; 2 bytes @ 0x2
   545  0072                     	ds	1
   546  0073                     ??_iniciarLCD:	
   547  0073                     ??_borrarv:	
   548                           ; 1 bytes @ 0x3
   549                           
   550  0073                     ?_colocar:	
   551                           ; 1 bytes @ 0x3
   552                           
   553  0073                     colocar@y:	
   554                           ; 1 bytes @ 0x3
   555                           
   556                           
   557                           ; 1 bytes @ 0x3
   558  0073                     	ds	1
   559  0074                     ??_colocar:	
   560  0074                     ??___awdiv:	
   561                           ; 1 bytes @ 0x4
   562                           
   563  0074                     ??___awmod:	
   564                           ; 1 bytes @ 0x4
   565                           
   566  0074                     imprimir@texto:	
   567                           ; 1 bytes @ 0x4
   568                           
   569  0074                     I2C_Master_Read@temp:	
   570                           ; 1 bytes @ 0x4
   571                           
   572  0074                     ___lldiv@dividend:	
   573                           ; 2 bytes @ 0x4
   574                           
   575                           
   576                           ; 4 bytes @ 0x4
   577  0074                     	ds	1
   578  0075                     colocar@x:	
   579  0075                     ___awdiv@counter:	
   580                           ; 1 bytes @ 0x5
   581                           
   582  0075                     ___awmod@counter:	
   583                           ; 1 bytes @ 0x5
   584                           
   585                           
   586                           ; 1 bytes @ 0x5
   587  0075                     	ds	1
   588  0076                     colocar@temp:	
   589  0076                     ___awdiv@sign:	
   590                           ; 1 bytes @ 0x6
   591                           
   592  0076                     ___awmod@sign:	
   593                           ; 1 bytes @ 0x6
   594                           
   595                           
   596                           ; 1 bytes @ 0x6
   597  0076                     	ds	1
   598  0077                     ??_celda:	
   599  0077                     ___awdiv@quotient:	
   600                           ; 1 bytes @ 0x7
   601                           
   602                           
   603                           ; 2 bytes @ 0x7
   604  0077                     	ds	1
   605  0078                     ??___lldiv:	
   606                           
   607                           ; 1 bytes @ 0x8
   608  0078                     	ds	1
   609  0079                     ??_humo:	
   610  0079                     ??_ultrasonico:	
   611                           ; 1 bytes @ 0x9
   612                           
   613  0079                     ??_luces:	
   614                           ; 1 bytes @ 0x9
   615                           
   616  0079                     ___lldiv@quotient:	
   617                           ; 1 bytes @ 0x9
   618                           
   619                           
   620                           ; 4 bytes @ 0x9
   621  0079                     	ds	4
   622  007D                     ___lldiv@counter:	
   623                           
   624                           ; 1 bytes @ 0xD
   625  007D                     	ds	1
   626                           
   627                           	psect	cstackBANK0
   628  0038                     __pcstackBANK0:	
   629  0038                     ?_I2C_Master_Init:	
   630  0038                     I2C_Master_Init@c:	
   631                           ; 1 bytes @ 0x0
   632                           
   633                           
   634                           ; 4 bytes @ 0x0
   635  0038                     	ds	4
   636  003C                     ??_I2C_Master_Init:	
   637                           
   638                           ; 1 bytes @ 0x4
   639  003C                     	ds	4
   640  0040                     ??_main:	
   641                           
   642                           ; 1 bytes @ 0x8
   643  0040                     	ds	2
   644                           
   645                           	psect	maintext
   646  0660                     __pmaintext:	
   647 ;;
   648 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   649 ;;
   650 ;; *************** function _main *****************
   651 ;; Defined at:
   652 ;;		line 193 in file "Carcelero.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;		None
   655 ;; Auto vars:     Size  Location     Type
   656 ;;		None
   657 ;; Return value:  Size  Location     Type
   658 ;;                  1    wreg      void 
   659 ;; Registers used:
   660 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   661 ;; Tracked objects:
   662 ;;		On entry : B00/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   666 ;;      Params:         0       0       0       0       0
   667 ;;      Locals:         0       0       0       0       0
   668 ;;      Temps:          0       2       0       0       0
   669 ;;      Totals:         0       2       0       0       0
   670 ;;Total ram usage:        2 bytes
   671 ;; Hardware stack levels required when called:    3
   672 ;; This function calls:
   673 ;;		_I2C_Master_Init
   674 ;;		_I2C_Master_Read
   675 ;;		_I2C_Master_Start
   676 ;;		_I2C_Master_Stop
   677 ;;		_I2C_Master_Write
   678 ;;		_borrarv
   679 ;;		_celda
   680 ;;		_colocar
   681 ;;		_humo
   682 ;;		_imprimir
   683 ;;		_iniciarLCD
   684 ;;		_iniciarOSC
   685 ;;		_luces
   686 ;;		_mostrar
   687 ;;		_setup
   688 ;;		_shift
   689 ;;		_ultrasonico
   690 ;; This function is called by:
   691 ;;		Startup code after reset
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           
   696                           ;psect for function _main
   697  0660                     _main:	
   698  0660                     l1584:	
   699                           ;incstack = 0
   700                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   701                           
   702                           
   703                           ;Carcelero.c: 195:     iniciarOSC(6);
   704  0660  3006               	movlw	6
   705  0661  120A  118A  22F2  120A  118A  	fcall	_iniciarOSC
   706  0666                     l1586:	
   707                           
   708                           ;Carcelero.c: 197:     setup();
   709  0666  120A  118A  20E8  120A  118A  	fcall	_setup
   710  066B                     l1588:	
   711                           
   712                           ;Carcelero.c: 199:     iniciarLCD();
   713  066B  120A  118A  21F0  120A  118A  	fcall	_iniciarLCD
   714  0670                     l1590:	
   715                           
   716                           ;Carcelero.c: 201:     borrarv();
   717  0670  120A  118A  20FA  120A  118A  	fcall	_borrarv
   718  0675                     l1592:	
   719                           
   720                           ;Carcelero.c: 203:     I2C_Master_Init(100000);
   721  0675  3000               	movlw	0
   722  0676  1283               	bcf	3,5	;RP0=0, select bank0
   723  0677  1303               	bcf	3,6	;RP1=0, select bank0
   724  0678  00BB               	movwf	I2C_Master_Init@c+3
   725  0679  3001               	movlw	1
   726  067A  00BA               	movwf	I2C_Master_Init@c+2
   727  067B  3086               	movlw	134
   728  067C  00B9               	movwf	I2C_Master_Init@c+1
   729  067D  30A0               	movlw	160
   730  067E  00B8               	movwf	I2C_Master_Init@c
   731  067F  120A  118A  21B8  120A  118A  	fcall	_I2C_Master_Init
   732  0684                     l1594:	
   733                           
   734                           ;Carcelero.c: 205:     colocar(1,1);
   735  0684  01F3               	clrf	colocar@y
   736  0685  0AF3               	incf	colocar@y,f
   737  0686  3001               	movlw	1
   738  0687  120A  118A  2135  120A  118A  	fcall	_colocar
   739  068C                     l1596:	
   740                           
   741                           ;Carcelero.c: 206:     imprimir("Luz:");
   742  068C  302A               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
   743  068D  120A  118A  2187  120A  118A  	fcall	_imprimir
   744  0692                     l1598:	
   745                           
   746                           ;Carcelero.c: 208:     colocar(8,1);
   747  0692  01F3               	clrf	colocar@y
   748  0693  0AF3               	incf	colocar@y,f
   749  0694  3008               	movlw	8
   750  0695  120A  118A  2135  120A  118A  	fcall	_colocar
   751  069A                     l1600:	
   752                           
   753                           ;Carcelero.c: 209:     imprimir("X:");
   754  069A  3033               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
   755  069B  120A  118A  2187  120A  118A  	fcall	_imprimir
   756  06A0                     l1602:	
   757                           
   758                           ;Carcelero.c: 210:     colocar(12,1);
   759  06A0  01F3               	clrf	colocar@y
   760  06A1  0AF3               	incf	colocar@y,f
   761  06A2  300C               	movlw	12
   762  06A3  120A  118A  2135  120A  118A  	fcall	_colocar
   763  06A8                     l1604:	
   764                           
   765                           ;Carcelero.c: 211:     imprimir("cm");
   766  06A8  303F               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
   767  06A9  120A  118A  2187  120A  118A  	fcall	_imprimir
   768  06AE                     l1606:	
   769                           
   770                           ;Carcelero.c: 213:     colocar(15,1);
   771  06AE  01F3               	clrf	colocar@y
   772  06AF  0AF3               	incf	colocar@y,f
   773  06B0  300F               	movlw	15
   774  06B1  120A  118A  2135  120A  118A  	fcall	_colocar
   775  06B6                     l1608:	
   776                           
   777                           ;Carcelero.c: 214:     imprimir("Humo:");
   778  06B6  301F               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
   779  06B7  120A  118A  2187  120A  118A  	fcall	_imprimir
   780  06BC                     l1610:	
   781                           
   782                           ;Carcelero.c: 216:     colocar(24,1);
   783  06BC  01F3               	clrf	colocar@y
   784  06BD  0AF3               	incf	colocar@y,f
   785  06BE  3018               	movlw	24
   786  06BF  120A  118A  2135  120A  118A  	fcall	_colocar
   787  06C4                     l1612:	
   788                           
   789                           ;Carcelero.c: 217:     imprimir("Tem:");
   790  06C4  3025               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
   791  06C5  120A  118A  2187  120A  118A  	fcall	_imprimir
   792  06CA                     l1614:	
   793                           
   794                           ;Carcelero.c: 218:     colocar(26,2);
   795  06CA  3002               	movlw	2
   796  06CB  1283               	bcf	3,5	;RP0=0, select bank0
   797  06CC  1303               	bcf	3,6	;RP1=0, select bank0
   798  06CD  00C0               	movwf	??_main
   799  06CE  0840               	movf	??_main,w
   800  06CF  00F3               	movwf	colocar@y
   801  06D0  301A               	movlw	26
   802  06D1  120A  118A  2135  120A  118A  	fcall	_colocar
   803  06D6                     l1616:	
   804                           
   805                           ;Carcelero.c: 219:     mostrar(0xDF);
   806  06D6  30DF               	movlw	223
   807  06D7  120A  118A  2121  120A  118A  	fcall	_mostrar
   808  06DC                     l1618:	
   809                           
   810                           ;Carcelero.c: 220:     colocar(27,2);
   811  06DC  3002               	movlw	2
   812  06DD  1283               	bcf	3,5	;RP0=0, select bank0
   813  06DE  1303               	bcf	3,6	;RP1=0, select bank0
   814  06DF  00C0               	movwf	??_main
   815  06E0  0840               	movf	??_main,w
   816  06E1  00F3               	movwf	colocar@y
   817  06E2  301B               	movlw	27
   818  06E3  120A  118A  2135  120A  118A  	fcall	_colocar
   819  06E8                     l1620:	
   820                           
   821                           ;Carcelero.c: 221:     imprimir("C");
   822  06E8  3037               	movlw	(low (((STR_22+1)-__stringbase)| (0+32768)))& (0+255)
   823  06E9  120A  118A  2187  120A  118A  	fcall	_imprimir
   824  06EE                     l1622:	
   825                           
   826                           ;Carcelero.c: 223:     colocar(29,1);
   827  06EE  01F3               	clrf	colocar@y
   828  06EF  0AF3               	incf	colocar@y,f
   829  06F0  301D               	movlw	29
   830  06F1  120A  118A  2135  120A  118A  	fcall	_colocar
   831  06F6                     l1624:	
   832                           
   833                           ;Carcelero.c: 224:     imprimir("Hora:");
   834  06F6  3019               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
   835  06F7  120A  118A  2187  120A  118A  	fcall	_imprimir
   836  06FC                     l1626:	
   837                           
   838                           ;Carcelero.c: 225:     colocar(31,2);
   839  06FC  3002               	movlw	2
   840  06FD  1283               	bcf	3,5	;RP0=0, select bank0
   841  06FE  1303               	bcf	3,6	;RP1=0, select bank0
   842  06FF  00C0               	movwf	??_main
   843  0700  0840               	movf	??_main,w
   844  0701  00F3               	movwf	colocar@y
   845  0702  301F               	movlw	31
   846  0703  120A  118A  2135  120A  118A  	fcall	_colocar
   847  0708                     l1628:	
   848                           
   849                           ;Carcelero.c: 226:     imprimir(":");
   850  0708  3034               	movlw	(low (((STR_14+1)-__stringbase)| (0+32768)))& (0+255)
   851  0709  120A  118A  2187  120A  118A  	fcall	_imprimir
   852  070E                     l1630:	
   853                           
   854                           ;Carcelero.c: 228:     colocar(35,1);
   855  070E  01F3               	clrf	colocar@y
   856  070F  0AF3               	incf	colocar@y,f
   857  0710  3023               	movlw	35
   858  0711  120A  118A  2135  120A  118A  	fcall	_colocar
   859  0716                     l1632:	
   860                           
   861                           ;Carcelero.c: 229:     imprimir("PP");
   862  0716  303C               	movlw	(low ((STR_21-__stringbase)| (0+32768)))& (0+255)
   863  0717  120A  118A  2187  120A  118A  	fcall	_imprimir
   864  071C                     l1634:	
   865                           
   866                           ;Carcelero.c: 231:     colocar(38,1);
   867  071C  01F3               	clrf	colocar@y
   868  071D  0AF3               	incf	colocar@y,f
   869  071E  3026               	movlw	38
   870  071F  120A  118A  2135  120A  118A  	fcall	_colocar
   871  0724                     l1636:	
   872                           
   873                           ;Carcelero.c: 232:     imprimir("CC");
   874  0724  3036               	movlw	(low ((STR_22-__stringbase)| (0+32768)))& (0+255)
   875  0725  120A  118A  2187  120A  118A  	fcall	_imprimir
   876  072A                     l1638:	
   877                           
   878                           ;Carcelero.c: 235:     {;Carcelero.c: 237:         I2C_Master_Start();
   879  072A  120A  118A  20AE  120A  118A  	fcall	_I2C_Master_Start
   880  072F                     l1640:	
   881                           
   882                           ;Carcelero.c: 238:         I2C_Master_Write(0x11);
   883  072F  3011               	movlw	17
   884  0730  00F0               	movwf	I2C_Master_Write@d
   885  0731  3000               	movlw	0
   886  0732  00F1               	movwf	I2C_Master_Write@d+1
   887  0733  120A  118A  20C0  120A  118A  	fcall	_I2C_Master_Write
   888  0738                     l1642:	
   889                           
   890                           ;Carcelero.c: 239:         Luz = I2C_Master_Read(0);
   891  0738  3000               	movlw	0
   892  0739  00F0               	movwf	I2C_Master_Read@a
   893  073A  00F1               	movwf	I2C_Master_Read@a+1
   894  073B  120A  118A  2159  120A  118A  	fcall	_I2C_Master_Read
   895  0740  0870               	movf	?_I2C_Master_Read,w
   896  0741  1283               	bcf	3,5	;RP0=0, select bank0
   897  0742  1303               	bcf	3,6	;RP1=0, select bank0
   898  0743  00C0               	movwf	??_main
   899  0744  0840               	movf	??_main,w
   900  0745  00B7               	movwf	_Luz
   901  0746                     l1644:	
   902                           
   903                           ;Carcelero.c: 240:         I2C_Master_Stop();
   904  0746  120A  118A  20B7  120A  118A  	fcall	_I2C_Master_Stop
   905  074B                     l1646:	
   906                           
   907                           ;Carcelero.c: 241:         _delay((unsigned long)((100)*(4000000/4000.0)));
   908  074B  3082               	movlw	130
   909  074C  1283               	bcf	3,5	;RP0=0, select bank0
   910  074D  1303               	bcf	3,6	;RP1=0, select bank0
   911  074E  00C1               	movwf	??_main+1
   912  074F  30DD               	movlw	221
   913  0750  00C0               	movwf	??_main
   914  0751                     u777:	
   915  0751  0BC0               	decfsz	??_main,f
   916  0752  2F51               	goto	u777
   917  0753  0BC1               	decfsz	??_main+1,f
   918  0754  2F51               	goto	u777
   919  0755                     l1648:	
   920                           
   921                           ;Carcelero.c: 244:         I2C_Master_Start();
   922  0755  120A  118A  20AE  120A  118A  	fcall	_I2C_Master_Start
   923  075A                     l1650:	
   924                           
   925                           ;Carcelero.c: 245:         I2C_Master_Write(0x21);
   926  075A  3021               	movlw	33
   927  075B  00F0               	movwf	I2C_Master_Write@d
   928  075C  3000               	movlw	0
   929  075D  00F1               	movwf	I2C_Master_Write@d+1
   930  075E  120A  118A  20C0  120A  118A  	fcall	_I2C_Master_Write
   931  0763                     l1652:	
   932                           
   933                           ;Carcelero.c: 246:         grados = I2C_Master_Read(0);
   934  0763  3000               	movlw	0
   935  0764  00F0               	movwf	I2C_Master_Read@a
   936  0765  00F1               	movwf	I2C_Master_Read@a+1
   937  0766  120A  118A  2159  120A  118A  	fcall	_I2C_Master_Read
   938  076B  0870               	movf	?_I2C_Master_Read,w
   939  076C  1283               	bcf	3,5	;RP0=0, select bank0
   940  076D  1303               	bcf	3,6	;RP1=0, select bank0
   941  076E  00C0               	movwf	??_main
   942  076F  0840               	movf	??_main,w
   943  0770  00B6               	movwf	_grados
   944  0771                     l1654:	
   945                           
   946                           ;Carcelero.c: 247:         I2C_Master_Stop();
   947  0771  120A  118A  20B7  120A  118A  	fcall	_I2C_Master_Stop
   948  0776                     l1656:	
   949                           
   950                           ;Carcelero.c: 248:         _delay((unsigned long)((100)*(4000000/4000.0)));
   951  0776  3082               	movlw	130
   952  0777  1283               	bcf	3,5	;RP0=0, select bank0
   953  0778  1303               	bcf	3,6	;RP1=0, select bank0
   954  0779  00C1               	movwf	??_main+1
   955  077A  30DD               	movlw	221
   956  077B  00C0               	movwf	??_main
   957  077C                     u787:	
   958  077C  0BC0               	decfsz	??_main,f
   959  077D  2F7C               	goto	u787
   960  077E  0BC1               	decfsz	??_main+1,f
   961  077F  2F7C               	goto	u787
   962  0780                     l1658:	
   963                           
   964                           ;Carcelero.c: 251:         I2C_Master_Start();
   965  0780  120A  118A  20AE  120A  118A  	fcall	_I2C_Master_Start
   966  0785                     l1660:	
   967                           
   968                           ;Carcelero.c: 252:         I2C_Master_Write(0x31);
   969  0785  3031               	movlw	49
   970  0786  00F0               	movwf	I2C_Master_Write@d
   971  0787  3000               	movlw	0
   972  0788  00F1               	movwf	I2C_Master_Write@d+1
   973  0789  120A  118A  20C0  120A  118A  	fcall	_I2C_Master_Write
   974  078E                     l1662:	
   975                           
   976                           ;Carcelero.c: 253:         Distancia = I2C_Master_Read(0);
   977  078E  3000               	movlw	0
   978  078F  00F0               	movwf	I2C_Master_Read@a
   979  0790  00F1               	movwf	I2C_Master_Read@a+1
   980  0791  120A  118A  2159  120A  118A  	fcall	_I2C_Master_Read
   981  0796  0870               	movf	?_I2C_Master_Read,w
   982  0797  1283               	bcf	3,5	;RP0=0, select bank0
   983  0798  1303               	bcf	3,6	;RP1=0, select bank0
   984  0799  00C0               	movwf	??_main
   985  079A  0840               	movf	??_main,w
   986  079B  00B5               	movwf	_Distancia
   987  079C                     l1664:	
   988                           
   989                           ;Carcelero.c: 254:         I2C_Master_Stop();
   990  079C  120A  118A  20B7  120A  118A  	fcall	_I2C_Master_Stop
   991  07A1                     l1666:	
   992                           
   993                           ;Carcelero.c: 255:         _delay((unsigned long)((100)*(4000000/4000.0)));
   994  07A1  3082               	movlw	130
   995  07A2  1283               	bcf	3,5	;RP0=0, select bank0
   996  07A3  1303               	bcf	3,6	;RP1=0, select bank0
   997  07A4  00C1               	movwf	??_main+1
   998  07A5  30DD               	movlw	221
   999  07A6  00C0               	movwf	??_main
  1000  07A7                     u797:	
  1001  07A7  0BC0               	decfsz	??_main,f
  1002  07A8  2FA7               	goto	u797
  1003  07A9  0BC1               	decfsz	??_main+1,f
  1004  07AA  2FA7               	goto	u797
  1005  07AB                     l1668:	
  1006                           
  1007                           ;Carcelero.c: 258:         I2C_Master_Start();
  1008  07AB  120A  118A  20AE  120A  118A  	fcall	_I2C_Master_Start
  1009  07B0                     l1670:	
  1010                           
  1011                           ;Carcelero.c: 259:         I2C_Master_Write(0x41);
  1012  07B0  3041               	movlw	65
  1013  07B1  00F0               	movwf	I2C_Master_Write@d
  1014  07B2  3000               	movlw	0
  1015  07B3  00F1               	movwf	I2C_Master_Write@d+1
  1016  07B4  120A  118A  20C0  120A  118A  	fcall	_I2C_Master_Write
  1017  07B9                     l1672:	
  1018                           
  1019                           ;Carcelero.c: 260:         Humo = I2C_Master_Read(0);
  1020  07B9  3000               	movlw	0
  1021  07BA  00F0               	movwf	I2C_Master_Read@a
  1022  07BB  00F1               	movwf	I2C_Master_Read@a+1
  1023  07BC  120A  118A  2159  120A  118A  	fcall	_I2C_Master_Read
  1024  07C1  0870               	movf	?_I2C_Master_Read,w
  1025  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  1026  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  1027  07C4  00C0               	movwf	??_main
  1028  07C5  0840               	movf	??_main,w
  1029  07C6  00B4               	movwf	_Humo
  1030  07C7                     l1674:	
  1031                           
  1032                           ;Carcelero.c: 261:         I2C_Master_Stop();
  1033  07C7  120A  118A  20B7  120A  118A  	fcall	_I2C_Master_Stop
  1034  07CC                     l1676:	
  1035                           
  1036                           ;Carcelero.c: 262:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1037  07CC  3082               	movlw	130
  1038  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  1039  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  1040  07CF  00C1               	movwf	??_main+1
  1041  07D0  30DD               	movlw	221
  1042  07D1  00C0               	movwf	??_main
  1043  07D2                     u807:	
  1044  07D2  0BC0               	decfsz	??_main,f
  1045  07D3  2FD2               	goto	u807
  1046  07D4  0BC1               	decfsz	??_main+1,f
  1047  07D5  2FD2               	goto	u807
  1048  07D6                     l1678:	
  1049                           
  1050                           ;Carcelero.c: 264:         luces();
  1051  07D6  120A  118A  2575  120A  118A  	fcall	_luces
  1052  07DB                     l1680:	
  1053                           
  1054                           ;Carcelero.c: 265:         celda();
  1055  07DB  120A  118A  2244  120A  118A  	fcall	_celda
  1056  07E0                     l1682:	
  1057                           
  1058                           ;Carcelero.c: 266:         ultrasonico();
  1059  07E0  120A  118A  2420  120A  118A  	fcall	_ultrasonico
  1060  07E5                     l1684:	
  1061                           
  1062                           ;Carcelero.c: 267:         humo();
  1063  07E5  120A  118A  24AC  120A  118A  	fcall	_humo
  1064  07EA                     l1686:	
  1065                           
  1066                           ;Carcelero.c: 268:         shift();
  1067  07EA  120A  118A  20D7  120A  118A  	fcall	_shift
  1068  07EF  2F2A               	goto	l1638
  1069  07F0  120A  118A  2800   	ljmp	start
  1070  07F3                     __end_of_main:	
  1071                           
  1072                           	psect	text1
  1073  0420                     __ptext1:	
  1074 ;; *************** function _ultrasonico *****************
  1075 ;; Defined at:
  1076 ;;		line 92 in file "Carcelero.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;		None
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;		None
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      void 
  1083 ;; Registers used:
  1084 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1090 ;;      Params:         0       0       0       0       0
  1091 ;;      Locals:         0       0       0       0       0
  1092 ;;      Temps:          2       0       0       0       0
  1093 ;;      Totals:         2       0       0       0       0
  1094 ;;Total ram usage:        2 bytes
  1095 ;; Hardware stack levels used:    1
  1096 ;; Hardware stack levels required when called:    2
  1097 ;; This function calls:
  1098 ;;		___awdiv
  1099 ;;		___awmod
  1100 ;;		_colocar
  1101 ;;		_imprimir
  1102 ;;		_mostrar
  1103 ;; This function is called by:
  1104 ;;		_main
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           
  1109                           ;psect for function _ultrasonico
  1110  0420                     _ultrasonico:	
  1111  0420                     l1510:	
  1112                           ;incstack = 0
  1113                           ; Regs used in _ultrasonico: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1114                           
  1115                           
  1116                           ;Carcelero.c: 94:     z = Distancia/10;
  1117  0420  300A               	movlw	10
  1118  0421  00F0               	movwf	___awdiv@divisor
  1119  0422  3000               	movlw	0
  1120  0423  00F1               	movwf	___awdiv@divisor+1
  1121  0424  1283               	bcf	3,5	;RP0=0, select bank0
  1122  0425  1303               	bcf	3,6	;RP1=0, select bank0
  1123  0426  0835               	movf	_Distancia,w
  1124  0427  00F9               	movwf	??_ultrasonico
  1125  0428  01FA               	clrf	??_ultrasonico+1
  1126  0429  0879               	movf	??_ultrasonico,w
  1127  042A  00F2               	movwf	___awdiv@dividend
  1128  042B  087A               	movf	??_ultrasonico+1,w
  1129  042C  00F3               	movwf	___awdiv@dividend+1
  1130  042D  120A  118A  23B9  120A  118A  	fcall	___awdiv
  1131  0432  0871               	movf	?___awdiv+1,w
  1132  0433  1283               	bcf	3,5	;RP0=0, select bank0
  1133  0434  1303               	bcf	3,6	;RP1=0, select bank0
  1134  0435  00AB               	movwf	_z+1
  1135  0436  0870               	movf	?___awdiv,w
  1136  0437  00AA               	movwf	_z
  1137                           
  1138                           ;Carcelero.c: 95:     z1 = Distancia%10;
  1139  0438  300A               	movlw	10
  1140  0439  00F0               	movwf	___awmod@divisor
  1141  043A  3000               	movlw	0
  1142  043B  00F1               	movwf	___awmod@divisor+1
  1143  043C  0835               	movf	_Distancia,w
  1144  043D  00F9               	movwf	??_ultrasonico
  1145  043E  01FA               	clrf	??_ultrasonico+1
  1146  043F  0879               	movf	??_ultrasonico,w
  1147  0440  00F2               	movwf	___awmod@dividend
  1148  0441  087A               	movf	??_ultrasonico+1,w
  1149  0442  00F3               	movwf	___awmod@dividend+1
  1150  0443  120A  118A  2299  120A  118A  	fcall	___awmod
  1151  0448  0871               	movf	?___awmod+1,w
  1152  0449  1283               	bcf	3,5	;RP0=0, select bank0
  1153  044A  1303               	bcf	3,6	;RP1=0, select bank0
  1154  044B  00A9               	movwf	_z1+1
  1155  044C  0870               	movf	?___awmod,w
  1156  044D  00A8               	movwf	_z1
  1157                           
  1158                           ;Carcelero.c: 97:     colocar(10,1);
  1159  044E  01F3               	clrf	colocar@y
  1160  044F  0AF3               	incf	colocar@y,f
  1161  0450  300A               	movlw	10
  1162  0451  120A  118A  2135  120A  118A  	fcall	_colocar
  1163  0456                     l1512:	
  1164                           
  1165                           ;Carcelero.c: 98:     mostrar(a[z]);
  1166  0456  1283               	bcf	3,5	;RP0=0, select bank0
  1167  0457  1303               	bcf	3,6	;RP1=0, select bank0
  1168  0458  082A               	movf	_z,w
  1169  0459  3E01               	addlw	low ((_a-__stringbase)| (0+32768))
  1170  045A  0084               	movwf	4
  1171  045B  120A  118A  2003  120A  118A  	fcall	stringdir
  1172  0460  120A  118A  2121  120A  118A  	fcall	_mostrar
  1173  0465                     l1514:	
  1174                           
  1175                           ;Carcelero.c: 99:     colocar(11,1);
  1176  0465  01F3               	clrf	colocar@y
  1177  0466  0AF3               	incf	colocar@y,f
  1178  0467  300B               	movlw	11
  1179  0468  120A  118A  2135  120A  118A  	fcall	_colocar
  1180                           
  1181                           ;Carcelero.c: 100:     mostrar(a[z1]);
  1182  046D  1283               	bcf	3,5	;RP0=0, select bank0
  1183  046E  1303               	bcf	3,6	;RP1=0, select bank0
  1184  046F  0828               	movf	_z1,w
  1185  0470  3E01               	addlw	low ((_a-__stringbase)| (0+32768))
  1186  0471  0084               	movwf	4
  1187  0472  120A  118A  2003  120A  118A  	fcall	stringdir
  1188  0477  120A  118A  2121  120A  118A  	fcall	_mostrar
  1189  047C                     l1516:	
  1190                           
  1191                           ;Carcelero.c: 102:     if (Distancia < 15)
  1192  047C  300F               	movlw	15
  1193  047D  1283               	bcf	3,5	;RP0=0, select bank0
  1194  047E  1303               	bcf	3,6	;RP1=0, select bank0
  1195  047F  0235               	subwf	_Distancia,w
  1196  0480  1803               	skipnc
  1197  0481  2C83               	goto	u731
  1198  0482  2C84               	goto	u730
  1199  0483                     u731:	
  1200  0483  2C98               	goto	l1524
  1201  0484                     u730:	
  1202  0484                     l1518:	
  1203                           
  1204                           ;Carcelero.c: 103:     {;Carcelero.c: 104:         colocar(8,2);
  1205  0484  3002               	movlw	2
  1206  0485  00F9               	movwf	??_ultrasonico
  1207  0486  0879               	movf	??_ultrasonico,w
  1208  0487  00F3               	movwf	colocar@y
  1209  0488  3008               	movlw	8
  1210  0489  120A  118A  2135  120A  118A  	fcall	_colocar
  1211  048E                     l1520:	
  1212                           
  1213                           ;Carcelero.c: 105:         imprimir("ALERTA");
  1214  048E  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1215  048F  120A  118A  2187  120A  118A  	fcall	_imprimir
  1216  0494                     l1522:	
  1217                           
  1218                           ;Carcelero.c: 106:         PORTAbits.RA3 = 1;
  1219  0494  1283               	bcf	3,5	;RP0=0, select bank0
  1220  0495  1303               	bcf	3,6	;RP1=0, select bank0
  1221  0496  1585               	bsf	5,3	;volatile
  1222                           
  1223                           ;Carcelero.c: 107:     }
  1224  0497  2CAB               	goto	l146
  1225  0498                     l1524:	
  1226                           
  1227                           ;Carcelero.c: 110:     {;Carcelero.c: 111:         colocar(8,2);
  1228  0498  3002               	movlw	2
  1229  0499  00F9               	movwf	??_ultrasonico
  1230  049A  0879               	movf	??_ultrasonico,w
  1231  049B  00F3               	movwf	colocar@y
  1232  049C  3008               	movlw	8
  1233  049D  120A  118A  2135  120A  118A  	fcall	_colocar
  1234  04A2                     l1526:	
  1235                           
  1236                           ;Carcelero.c: 112:         imprimir("      ");
  1237  04A2  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1238  04A3  120A  118A  2187  120A  118A  	fcall	_imprimir
  1239  04A8                     l1528:	
  1240                           
  1241                           ;Carcelero.c: 113:         PORTAbits.RA3 = 0;
  1242  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  1243  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  1244  04AA  1185               	bcf	5,3	;volatile
  1245  04AB                     l146:	
  1246  04AB  0008               	return
  1247  04AC                     __end_of_ultrasonico:	
  1248                           
  1249                           	psect	text2
  1250  00D7                     __ptext2:	
  1251 ;; *************** function _shift *****************
  1252 ;; Defined at:
  1253 ;;		line 99 in file "./LCD.h"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;		None
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;		None
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      void 
  1260 ;; Registers used:
  1261 ;;		wreg
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1267 ;;      Params:         0       0       0       0       0
  1268 ;;      Locals:         0       0       0       0       0
  1269 ;;      Temps:          1       0       0       0       0
  1270 ;;      Totals:         1       0       0       0       0
  1271 ;;Total ram usage:        1 bytes
  1272 ;; Hardware stack levels used:    1
  1273 ;; This function calls:
  1274 ;;		Nothing
  1275 ;; This function is called by:
  1276 ;;		_main
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           
  1281                           ;psect for function _shift
  1282  00D7                     _shift:	
  1283  00D7                     l1450:	
  1284                           ;incstack = 0
  1285                           ; Regs used in _shift: [wreg]
  1286                           
  1287                           
  1288                           ;./LCD.h: 104:     PORTDbits.RD6 = 0;
  1289  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1290  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1291  00D9  1308               	bcf	8,6	;volatile
  1292  00DA                     l1452:	
  1293                           
  1294                           ;./LCD.h: 105:     PORTB = 0b00011000;
  1295  00DA  3018               	movlw	24
  1296  00DB  0086               	movwf	6	;volatile
  1297  00DC                     l1454:	
  1298                           
  1299                           ;./LCD.h: 106:     PORTDbits.RD7 = 1;
  1300  00DC  1788               	bsf	8,7	;volatile
  1301                           
  1302                           ;./LCD.h: 107:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1303  00DD  30C7               	movlw	199
  1304  00DE  00F0               	movwf	??_shift
  1305  00DF                     u817:	
  1306  00DF  28E0               	nop2
  1307  00E0  0BF0               	decfsz	??_shift,f
  1308  00E1  28DF               	goto	u817
  1309  00E2  28E3               	nop2
  1310  00E3  28E4               	nop2
  1311  00E4                     l1456:	
  1312                           
  1313                           ;./LCD.h: 108:     PORTDbits.RD7 = 0;
  1314  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1315  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1316  00E6  1388               	bcf	8,7	;volatile
  1317  00E7                     l92:	
  1318  00E7  0008               	return
  1319  00E8                     __end_of_shift:	
  1320                           
  1321                           	psect	text3
  1322  00E8                     __ptext3:	
  1323 ;; *************** function _setup *****************
  1324 ;; Defined at:
  1325 ;;		line 175 in file "Carcelero.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;		None
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;		None
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      void 
  1332 ;; Registers used:
  1333 ;;		status,2
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1339 ;;      Params:         0       0       0       0       0
  1340 ;;      Locals:         0       0       0       0       0
  1341 ;;      Temps:          0       0       0       0       0
  1342 ;;      Totals:         0       0       0       0       0
  1343 ;;Total ram usage:        0 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; This function calls:
  1346 ;;		Nothing
  1347 ;; This function is called by:
  1348 ;;		_main
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           
  1353                           ;psect for function _setup
  1354  00E8                     _setup:	
  1355  00E8                     l1578:	
  1356                           ;incstack = 0
  1357                           ; Regs used in _setup: [status,2]
  1358                           
  1359                           
  1360                           ;Carcelero.c: 177:     ANSEL = 0;
  1361  00E8  1683               	bsf	3,5	;RP0=1, select bank3
  1362  00E9  1703               	bsf	3,6	;RP1=1, select bank3
  1363  00EA  0188               	clrf	8	;volatile
  1364                           
  1365                           ;Carcelero.c: 178:     ANSELH = 0;
  1366  00EB  0189               	clrf	9	;volatile
  1367                           
  1368                           ;Carcelero.c: 180:     TRISA = 0;
  1369  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  1370  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  1371  00EE  0185               	clrf	5	;volatile
  1372                           
  1373                           ;Carcelero.c: 181:     TRISB = 0;
  1374  00EF  0186               	clrf	6	;volatile
  1375                           
  1376                           ;Carcelero.c: 182:     TRISC = 0;
  1377  00F0  0187               	clrf	7	;volatile
  1378  00F1                     l1580:	
  1379                           
  1380                           ;Carcelero.c: 184:     TRISDbits.TRISD6 = 0;
  1381  00F1  1308               	bcf	8,6	;volatile
  1382  00F2                     l1582:	
  1383                           
  1384                           ;Carcelero.c: 185:     TRISDbits.TRISD7 = 0;
  1385  00F2  1388               	bcf	8,7	;volatile
  1386                           
  1387                           ;Carcelero.c: 187:     PORTA = 0;
  1388  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1389  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1390  00F5  0185               	clrf	5	;volatile
  1391                           
  1392                           ;Carcelero.c: 188:     PORTB = 0;
  1393  00F6  0186               	clrf	6	;volatile
  1394                           
  1395                           ;Carcelero.c: 189:     PORTC = 0;
  1396  00F7  0187               	clrf	7	;volatile
  1397                           
  1398                           ;Carcelero.c: 190:     PORTD = 0;
  1399  00F8  0188               	clrf	8	;volatile
  1400  00F9                     l160:	
  1401  00F9  0008               	return
  1402  00FA                     __end_of_setup:	
  1403                           
  1404                           	psect	text4
  1405  0575                     __ptext4:	
  1406 ;; *************** function _luces *****************
  1407 ;; Defined at:
  1408 ;;		line 117 in file "Carcelero.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;		None
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;		None
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      void 
  1415 ;; Registers used:
  1416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1422 ;;      Params:         0       0       0       0       0
  1423 ;;      Locals:         0       0       0       0       0
  1424 ;;      Temps:          2       0       0       0       0
  1425 ;;      Totals:         2       0       0       0       0
  1426 ;;Total ram usage:        2 bytes
  1427 ;; Hardware stack levels used:    1
  1428 ;; Hardware stack levels required when called:    2
  1429 ;; This function calls:
  1430 ;;		___awdiv
  1431 ;;		___awmod
  1432 ;;		_colocar
  1433 ;;		_imprimir
  1434 ;;		_mostrar
  1435 ;; This function is called by:
  1436 ;;		_main
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           
  1441                           ;psect for function _luces
  1442  0575                     _luces:	
  1443  0575                     l1530:	
  1444                           ;incstack = 0
  1445                           ; Regs used in _luces: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1446                           
  1447                           
  1448                           ;Carcelero.c: 119:     y = Luz/100;
  1449  0575  3064               	movlw	100
  1450  0576  00F0               	movwf	___awdiv@divisor
  1451  0577  3000               	movlw	0
  1452  0578  00F1               	movwf	___awdiv@divisor+1
  1453  0579  1283               	bcf	3,5	;RP0=0, select bank0
  1454  057A  1303               	bcf	3,6	;RP1=0, select bank0
  1455  057B  0837               	movf	_Luz,w
  1456  057C  00F9               	movwf	??_luces
  1457  057D  01FA               	clrf	??_luces+1
  1458  057E  0879               	movf	??_luces,w
  1459  057F  00F2               	movwf	___awdiv@dividend
  1460  0580  087A               	movf	??_luces+1,w
  1461  0581  00F3               	movwf	___awdiv@dividend+1
  1462  0582  120A  118A  23B9  120A  118A  	fcall	___awdiv
  1463  0587  0871               	movf	?___awdiv+1,w
  1464  0588  1283               	bcf	3,5	;RP0=0, select bank0
  1465  0589  1303               	bcf	3,6	;RP1=0, select bank0
  1466  058A  00B3               	movwf	_y+1
  1467  058B  0870               	movf	?___awdiv,w
  1468  058C  00B2               	movwf	_y
  1469                           
  1470                           ;Carcelero.c: 120:     y1 = Luz%100;
  1471  058D  3064               	movlw	100
  1472  058E  00F0               	movwf	___awmod@divisor
  1473  058F  3000               	movlw	0
  1474  0590  00F1               	movwf	___awmod@divisor+1
  1475  0591  0837               	movf	_Luz,w
  1476  0592  00F9               	movwf	??_luces
  1477  0593  01FA               	clrf	??_luces+1
  1478  0594  0879               	movf	??_luces,w
  1479  0595  00F2               	movwf	___awmod@dividend
  1480  0596  087A               	movf	??_luces+1,w
  1481  0597  00F3               	movwf	___awmod@dividend+1
  1482  0598  120A  118A  2299  120A  118A  	fcall	___awmod
  1483  059D  0871               	movf	?___awmod+1,w
  1484  059E  1283               	bcf	3,5	;RP0=0, select bank0
  1485  059F  1303               	bcf	3,6	;RP1=0, select bank0
  1486  05A0  00B1               	movwf	_y1+1
  1487  05A1  0870               	movf	?___awmod,w
  1488  05A2  00B0               	movwf	_y1
  1489                           
  1490                           ;Carcelero.c: 121:     y2 = y1/10;
  1491  05A3  300A               	movlw	10
  1492  05A4  00F0               	movwf	___awdiv@divisor
  1493  05A5  3000               	movlw	0
  1494  05A6  00F1               	movwf	___awdiv@divisor+1
  1495  05A7  0831               	movf	_y1+1,w
  1496  05A8  00F3               	movwf	___awdiv@dividend+1
  1497  05A9  0830               	movf	_y1,w
  1498  05AA  00F2               	movwf	___awdiv@dividend
  1499  05AB  120A  118A  23B9  120A  118A  	fcall	___awdiv
  1500  05B0  0871               	movf	?___awdiv+1,w
  1501  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  1502  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  1503  05B3  00AF               	movwf	_y2+1
  1504  05B4  0870               	movf	?___awdiv,w
  1505  05B5  00AE               	movwf	_y2
  1506                           
  1507                           ;Carcelero.c: 122:     y3 = y1%10;
  1508  05B6  300A               	movlw	10
  1509  05B7  00F0               	movwf	___awmod@divisor
  1510  05B8  3000               	movlw	0
  1511  05B9  00F1               	movwf	___awmod@divisor+1
  1512  05BA  0831               	movf	_y1+1,w
  1513  05BB  00F3               	movwf	___awmod@dividend+1
  1514  05BC  0830               	movf	_y1,w
  1515  05BD  00F2               	movwf	___awmod@dividend
  1516  05BE  120A  118A  2299  120A  118A  	fcall	___awmod
  1517  05C3  0871               	movf	?___awmod+1,w
  1518  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  1519  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  1520  05C6  00AD               	movwf	_y3+1
  1521  05C7  0870               	movf	?___awmod,w
  1522  05C8  00AC               	movwf	_y3
  1523                           
  1524                           ;Carcelero.c: 124:     colocar(1,2);
  1525  05C9  3002               	movlw	2
  1526  05CA  00F9               	movwf	??_luces
  1527  05CB  0879               	movf	??_luces,w
  1528  05CC  00F3               	movwf	colocar@y
  1529  05CD  3001               	movlw	1
  1530  05CE  120A  118A  2135  120A  118A  	fcall	_colocar
  1531  05D3                     l1532:	
  1532                           
  1533                           ;Carcelero.c: 125:     mostrar(a[y]);
  1534  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  1535  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  1536  05D5  0832               	movf	_y,w
  1537  05D6  3E01               	addlw	low ((_a-__stringbase)| (0+32768))
  1538  05D7  0084               	movwf	4
  1539  05D8  120A  118A  2003  120A  118A  	fcall	stringdir
  1540  05DD  120A  118A  2121  120A  118A  	fcall	_mostrar
  1541  05E2                     l1534:	
  1542                           
  1543                           ;Carcelero.c: 126:     colocar(2,2);
  1544  05E2  3002               	movlw	2
  1545  05E3  00F9               	movwf	??_luces
  1546  05E4  0879               	movf	??_luces,w
  1547  05E5  00F3               	movwf	colocar@y
  1548  05E6  3002               	movlw	2
  1549  05E7  120A  118A  2135  120A  118A  	fcall	_colocar
  1550                           
  1551                           ;Carcelero.c: 127:     mostrar(a[y2]);
  1552  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  1553  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  1554  05EE  082E               	movf	_y2,w
  1555  05EF  3E01               	addlw	low ((_a-__stringbase)| (0+32768))
  1556  05F0  0084               	movwf	4
  1557  05F1  120A  118A  2003  120A  118A  	fcall	stringdir
  1558  05F6  120A  118A  2121  120A  118A  	fcall	_mostrar
  1559  05FB                     l1536:	
  1560                           
  1561                           ;Carcelero.c: 128:     colocar(3,2);
  1562  05FB  3002               	movlw	2
  1563  05FC  00F9               	movwf	??_luces
  1564  05FD  0879               	movf	??_luces,w
  1565  05FE  00F3               	movwf	colocar@y
  1566  05FF  3003               	movlw	3
  1567  0600  120A  118A  2135  120A  118A  	fcall	_colocar
  1568  0605                     l1538:	
  1569                           
  1570                           ;Carcelero.c: 129:     mostrar(a[y3]);
  1571  0605  1283               	bcf	3,5	;RP0=0, select bank0
  1572  0606  1303               	bcf	3,6	;RP1=0, select bank0
  1573  0607  082C               	movf	_y3,w
  1574  0608  3E01               	addlw	low ((_a-__stringbase)| (0+32768))
  1575  0609  0084               	movwf	4
  1576  060A  120A  118A  2003  120A  118A  	fcall	stringdir
  1577  060F  120A  118A  2121  120A  118A  	fcall	_mostrar
  1578  0614                     l1540:	
  1579                           
  1580                           ;Carcelero.c: 131:     if (Luz < 50)
  1581  0614  3032               	movlw	50
  1582  0615  1283               	bcf	3,5	;RP0=0, select bank0
  1583  0616  1303               	bcf	3,6	;RP1=0, select bank0
  1584  0617  0237               	subwf	_Luz,w
  1585  0618  1803               	skipnc
  1586  0619  2E1B               	goto	u741
  1587  061A  2E1C               	goto	u740
  1588  061B                     u741:	
  1589  061B  2E3E               	goto	l1550
  1590  061C                     u740:	
  1591  061C                     l1542:	
  1592                           
  1593                           ;Carcelero.c: 132:     {;Carcelero.c: 133:         colocar(4,2);
  1594  061C  3002               	movlw	2
  1595  061D  00F9               	movwf	??_luces
  1596  061E  0879               	movf	??_luces,w
  1597  061F  00F3               	movwf	colocar@y
  1598  0620  3004               	movlw	4
  1599  0621  120A  118A  2135  120A  118A  	fcall	_colocar
  1600  0626                     l1544:	
  1601                           
  1602                           ;Carcelero.c: 134:         imprimir("   ");
  1603  0626  300E               	movlw	(low (((STR_2+3)-__stringbase)| (0+32768)))& (0+255)
  1604  0627  120A  118A  2187  120A  118A  	fcall	_imprimir
  1605  062C                     l1546:	
  1606                           
  1607                           ;Carcelero.c: 135:         colocar(5,1);
  1608  062C  01F3               	clrf	colocar@y
  1609  062D  0AF3               	incf	colocar@y,f
  1610  062E  3005               	movlw	5
  1611  062F  120A  118A  2135  120A  118A  	fcall	_colocar
  1612                           
  1613                           ;Carcelero.c: 136:         imprimir("ON");
  1614  0634  3039               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1615  0635  120A  118A  2187  120A  118A  	fcall	_imprimir
  1616  063A                     l1548:	
  1617                           
  1618                           ;Carcelero.c: 137:         PORTAbits.RA2 = 1;
  1619  063A  1283               	bcf	3,5	;RP0=0, select bank0
  1620  063B  1303               	bcf	3,6	;RP1=0, select bank0
  1621  063C  1505               	bsf	5,2	;volatile
  1622                           
  1623                           ;Carcelero.c: 138:     }
  1624  063D  2E5F               	goto	l151
  1625  063E                     l1550:	
  1626                           
  1627                           ;Carcelero.c: 141:     {;Carcelero.c: 142:         colocar(5,1);
  1628  063E  01F3               	clrf	colocar@y
  1629  063F  0AF3               	incf	colocar@y,f
  1630  0640  3005               	movlw	5
  1631  0641  120A  118A  2135  120A  118A  	fcall	_colocar
  1632  0646                     l1552:	
  1633                           
  1634                           ;Carcelero.c: 143:         imprimir("  ");
  1635  0646  300F               	movlw	(low (((STR_2+4)-__stringbase)| (0+32768)))& (0+255)
  1636  0647  120A  118A  2187  120A  118A  	fcall	_imprimir
  1637  064C                     l1554:	
  1638                           
  1639                           ;Carcelero.c: 144:         colocar(4,2);
  1640  064C  3002               	movlw	2
  1641  064D  00F9               	movwf	??_luces
  1642  064E  0879               	movf	??_luces,w
  1643  064F  00F3               	movwf	colocar@y
  1644  0650  3004               	movlw	4
  1645  0651  120A  118A  2135  120A  118A  	fcall	_colocar
  1646                           
  1647                           ;Carcelero.c: 145:         imprimir("OFF");
  1648  0656  302F               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1649  0657  120A  118A  2187  120A  118A  	fcall	_imprimir
  1650  065C                     l1556:	
  1651                           
  1652                           ;Carcelero.c: 146:         PORTAbits.RA2 = 0;
  1653  065C  1283               	bcf	3,5	;RP0=0, select bank0
  1654  065D  1303               	bcf	3,6	;RP1=0, select bank0
  1655  065E  1105               	bcf	5,2	;volatile
  1656  065F                     l151:	
  1657  065F  0008               	return
  1658  0660                     __end_of_luces:	
  1659                           
  1660                           	psect	text5
  1661  02F2                     __ptext5:	
  1662 ;; *************** function _iniciarOSC *****************
  1663 ;; Defined at:
  1664 ;;		line 5 in file "./Oscilador.h"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  frec            1    wreg     unsigned char 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  frec            1    2[COMMON] unsigned char 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      void 
  1671 ;; Registers used:
  1672 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1678 ;;      Params:         0       0       0       0       0
  1679 ;;      Locals:         1       0       0       0       0
  1680 ;;      Temps:          2       0       0       0       0
  1681 ;;      Totals:         3       0       0       0       0
  1682 ;;Total ram usage:        3 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; This function calls:
  1685 ;;		Nothing
  1686 ;; This function is called by:
  1687 ;;		_main
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           
  1692                           ;psect for function _iniciarOSC
  1693  02F2                     _iniciarOSC:	
  1694                           
  1695                           ;incstack = 0
  1696                           ; Regs used in _iniciarOSC: [wreg-fsr0h+status,2+status,0]
  1697                           ;iniciarOSC@frec stored from wreg
  1698  02F2  00F2               	movwf	iniciarOSC@frec
  1699  02F3                     l1458:	
  1700                           
  1701                           ;./Oscilador.h: 5: void iniciarOSC(uint8_t frec);./Oscilador.h: 6: {;./Oscilador.h: 7:  
      +                             switch(frec)
  1702  02F3  2B2F               	goto	l1480
  1703  02F4                     l1460:	
  1704                           
  1705                           ;./Oscilador.h: 10:             OSCCONbits.IRCF = 0b000;
  1706  02F4  308F               	movlw	-113
  1707  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  1708  02F6  1303               	bcf	3,6	;RP1=0, select bank1
  1709  02F7  058F               	andwf	15,f	;volatile
  1710                           
  1711                           ;./Oscilador.h: 11:             break;
  1712  02F8  2B51               	goto	l97
  1713  02F9                     l1462:	
  1714                           
  1715                           ;./Oscilador.h: 14:             OSCCONbits.IRCF = 0b001;
  1716  02F9  1683               	bsf	3,5	;RP0=1, select bank1
  1717  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  1718  02FB  080F               	movf	15,w	;volatile
  1719  02FC  398F               	andlw	-113
  1720  02FD  3810               	iorlw	16
  1721  02FE  008F               	movwf	15	;volatile
  1722                           
  1723                           ;./Oscilador.h: 15:             break;
  1724  02FF  2B51               	goto	l97
  1725  0300                     l1464:	
  1726                           
  1727                           ;./Oscilador.h: 18:             OSCCONbits.IRCF = 0b010;
  1728  0300  1683               	bsf	3,5	;RP0=1, select bank1
  1729  0301  1303               	bcf	3,6	;RP1=0, select bank1
  1730  0302  080F               	movf	15,w	;volatile
  1731  0303  398F               	andlw	-113
  1732  0304  3820               	iorlw	32
  1733  0305  008F               	movwf	15	;volatile
  1734                           
  1735                           ;./Oscilador.h: 19:             break;
  1736  0306  2B51               	goto	l97
  1737  0307                     l1466:	
  1738                           
  1739                           ;./Oscilador.h: 22:             OSCCONbits.IRCF = 0b001;
  1740  0307  1683               	bsf	3,5	;RP0=1, select bank1
  1741  0308  1303               	bcf	3,6	;RP1=0, select bank1
  1742  0309  080F               	movf	15,w	;volatile
  1743  030A  398F               	andlw	-113
  1744  030B  3810               	iorlw	16
  1745  030C  008F               	movwf	15	;volatile
  1746                           
  1747                           ;./Oscilador.h: 23:             break;
  1748  030D  2B51               	goto	l97
  1749  030E                     l1468:	
  1750                           
  1751                           ;./Oscilador.h: 26:             OSCCONbits.IRCF = 0b100;
  1752  030E  1683               	bsf	3,5	;RP0=1, select bank1
  1753  030F  1303               	bcf	3,6	;RP1=0, select bank1
  1754  0310  080F               	movf	15,w	;volatile
  1755  0311  398F               	andlw	-113
  1756  0312  3840               	iorlw	64
  1757  0313  008F               	movwf	15	;volatile
  1758                           
  1759                           ;./Oscilador.h: 27:             break;
  1760  0314  2B51               	goto	l97
  1761  0315                     l1470:	
  1762                           
  1763                           ;./Oscilador.h: 30:             OSCCONbits.IRCF = 0b101;
  1764  0315  1683               	bsf	3,5	;RP0=1, select bank1
  1765  0316  1303               	bcf	3,6	;RP1=0, select bank1
  1766  0317  080F               	movf	15,w	;volatile
  1767  0318  398F               	andlw	-113
  1768  0319  3850               	iorlw	80
  1769  031A  008F               	movwf	15	;volatile
  1770                           
  1771                           ;./Oscilador.h: 31:             break;
  1772  031B  2B51               	goto	l97
  1773  031C                     l1472:	
  1774                           
  1775                           ;./Oscilador.h: 34:             OSCCONbits.IRCF = 0b110;
  1776  031C  1683               	bsf	3,5	;RP0=1, select bank1
  1777  031D  1303               	bcf	3,6	;RP1=0, select bank1
  1778  031E  080F               	movf	15,w	;volatile
  1779  031F  398F               	andlw	-113
  1780  0320  3860               	iorlw	96
  1781  0321  008F               	movwf	15	;volatile
  1782                           
  1783                           ;./Oscilador.h: 35:             break;
  1784  0322  2B51               	goto	l97
  1785  0323                     l1474:	
  1786                           
  1787                           ;./Oscilador.h: 38:             OSCCONbits.IRCF = 0b111;
  1788  0323  3070               	movlw	112
  1789  0324  1683               	bsf	3,5	;RP0=1, select bank1
  1790  0325  1303               	bcf	3,6	;RP1=0, select bank1
  1791  0326  048F               	iorwf	15,f	;volatile
  1792                           
  1793                           ;./Oscilador.h: 39:             break;
  1794  0327  2B51               	goto	l97
  1795  0328                     l1476:	
  1796                           
  1797                           ;./Oscilador.h: 42:             OSCCONbits.IRCF = 0b110;
  1798  0328  1683               	bsf	3,5	;RP0=1, select bank1
  1799  0329  1303               	bcf	3,6	;RP1=0, select bank1
  1800  032A  080F               	movf	15,w	;volatile
  1801  032B  398F               	andlw	-113
  1802  032C  3860               	iorlw	96
  1803  032D  008F               	movwf	15	;volatile
  1804                           
  1805                           ;./Oscilador.h: 43:             break;
  1806  032E  2B51               	goto	l97
  1807  032F                     l1480:	
  1808  032F  0872               	movf	iniciarOSC@frec,w
  1809  0330  00F0               	movwf	??_iniciarOSC
  1810  0331  01F1               	clrf	??_iniciarOSC+1
  1811                           
  1812                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1813                           ; Switch size 1, requested type "simple"
  1814                           ; Number of cases is 1, Range of values is 0 to 0
  1815                           ; switch strategies available:
  1816                           ; Name         Instructions Cycles
  1817                           ; simple_byte            4     3 (average)
  1818                           ; direct_byte           11     8 (fixed)
  1819                           ; jumptable            260     6 (fixed)
  1820                           ;	Chosen strategy is simple_byte
  1821  0332  0871               	movf	??_iniciarOSC+1,w
  1822  0333  3A00               	xorlw	0	; case 0
  1823  0334  1903               	skipnz
  1824  0335  2B37               	goto	l1708
  1825  0336  2B28               	goto	l1476
  1826  0337                     l1708:	
  1827                           
  1828                           ; Switch size 1, requested type "simple"
  1829                           ; Number of cases is 8, Range of values is 0 to 7
  1830                           ; switch strategies available:
  1831                           ; Name         Instructions Cycles
  1832                           ; simple_byte           25    13 (average)
  1833                           ; direct_byte           32     8 (fixed)
  1834                           ; jumptable            260     6 (fixed)
  1835                           ;	Chosen strategy is simple_byte
  1836  0337  0870               	movf	??_iniciarOSC,w
  1837  0338  3A00               	xorlw	0	; case 0
  1838  0339  1903               	skipnz
  1839  033A  2AF4               	goto	l1460
  1840  033B  3A01               	xorlw	1	; case 1
  1841  033C  1903               	skipnz
  1842  033D  2AF9               	goto	l1462
  1843  033E  3A03               	xorlw	3	; case 2
  1844  033F  1903               	skipnz
  1845  0340  2B00               	goto	l1464
  1846  0341  3A01               	xorlw	1	; case 3
  1847  0342  1903               	skipnz
  1848  0343  2B07               	goto	l1466
  1849  0344  3A07               	xorlw	7	; case 4
  1850  0345  1903               	skipnz
  1851  0346  2B0E               	goto	l1468
  1852  0347  3A01               	xorlw	1	; case 5
  1853  0348  1903               	skipnz
  1854  0349  2B15               	goto	l1470
  1855  034A  3A03               	xorlw	3	; case 6
  1856  034B  1903               	skipnz
  1857  034C  2B1C               	goto	l1472
  1858  034D  3A01               	xorlw	1	; case 7
  1859  034E  1903               	skipnz
  1860  034F  2B23               	goto	l1474
  1861  0350  2B28               	goto	l1476
  1862  0351                     l97:	
  1863                           
  1864                           ;./Oscilador.h: 47:     OSCCONbits.SCS = 1;
  1865  0351  140F               	bsf	15,0	;volatile
  1866  0352                     l106:	
  1867  0352  0008               	return
  1868  0353                     __end_of_iniciarOSC:	
  1869                           
  1870                           	psect	text6
  1871  01F0                     __ptext6:	
  1872 ;; *************** function _iniciarLCD *****************
  1873 ;; Defined at:
  1874 ;;		line 25 in file "./LCD.h"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;		None
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;		None
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  1    wreg      void 
  1881 ;; Registers used:
  1882 ;;		wreg, status,2, status,0, pclath, cstack
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1888 ;;      Params:         0       0       0       0       0
  1889 ;;      Locals:         0       0       0       0       0
  1890 ;;      Temps:          2       0       0       0       0
  1891 ;;      Totals:         2       0       0       0       0
  1892 ;;Total ram usage:        2 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; Hardware stack levels required when called:    1
  1895 ;; This function calls:
  1896 ;;		_comando
  1897 ;; This function is called by:
  1898 ;;		_main
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           
  1903                           ;psect for function _iniciarLCD
  1904  01F0                     _iniciarLCD:	
  1905  01F0                     l1424:	
  1906                           ;incstack = 0
  1907                           ; Regs used in _iniciarLCD: [wreg+status,2+status,0+pclath+cstack]
  1908                           
  1909                           
  1910                           ;./LCD.h: 27:     PORTDbits.RD6 = 0;
  1911  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  1912  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  1913  01F2  1308               	bcf	8,6	;volatile
  1914  01F3                     l1426:	
  1915                           
  1916                           ;./LCD.h: 29:     comando(0);
  1917  01F3  3000               	movlw	0
  1918  01F4  120A  118A  210D  120A  118A  	fcall	_comando
  1919  01F9                     l1428:	
  1920                           
  1921                           ;./LCD.h: 31:     _delay((unsigned long)((15)*(4000000/4000.0)));
  1922  01F9  3014               	movlw	20
  1923  01FA  00F4               	movwf	??_iniciarLCD+1
  1924  01FB  3079               	movlw	121
  1925  01FC  00F3               	movwf	??_iniciarLCD
  1926  01FD                     u827:	
  1927  01FD  0BF3               	decfsz	??_iniciarLCD,f
  1928  01FE  29FD               	goto	u827
  1929  01FF  0BF4               	decfsz	??_iniciarLCD+1,f
  1930  0200  29FD               	goto	u827
  1931  0201  2A02               	nop2
  1932  0202                     l1430:	
  1933                           
  1934                           ;./LCD.h: 33:     comando(0x30);
  1935  0202  3030               	movlw	48
  1936  0203  120A  118A  210D  120A  118A  	fcall	_comando
  1937                           
  1938                           ;./LCD.h: 34:     _delay((unsigned long)((4)*(4000000/4000.0)));
  1939  0208  3006               	movlw	6
  1940  0209  00F4               	movwf	??_iniciarLCD+1
  1941  020A  3030               	movlw	48
  1942  020B  00F3               	movwf	??_iniciarLCD
  1943  020C                     u837:	
  1944  020C  0BF3               	decfsz	??_iniciarLCD,f
  1945  020D  2A0C               	goto	u837
  1946  020E  0BF4               	decfsz	??_iniciarLCD+1,f
  1947  020F  2A0C               	goto	u837
  1948  0210  0000               	nop
  1949  0211                     l1432:	
  1950                           
  1951                           ;./LCD.h: 36:     comando(0x30);
  1952  0211  3030               	movlw	48
  1953  0212  120A  118A  210D  120A  118A  	fcall	_comando
  1954  0217                     l1434:	
  1955                           
  1956                           ;./LCD.h: 37:     _delay((unsigned long)((160)*(4000000/4000000.0)));
  1957  0217  3035               	movlw	53
  1958  0218  00F3               	movwf	??_iniciarLCD
  1959  0219                     u847:	
  1960  0219  0BF3               	decfsz	??_iniciarLCD,f
  1961  021A  2A19               	goto	u847
  1962                           
  1963                           ;./LCD.h: 39:     comando(0x30);
  1964  021B  3030               	movlw	48
  1965  021C  120A  118A  210D  120A  118A  	fcall	_comando
  1966  0221                     l1436:	
  1967                           
  1968                           ;./LCD.h: 40:     _delay((unsigned long)((160)*(4000000/4000000.0)));
  1969  0221  3035               	movlw	53
  1970  0222  00F3               	movwf	??_iniciarLCD
  1971  0223                     u857:	
  1972  0223  0BF3               	decfsz	??_iniciarLCD,f
  1973  0224  2A23               	goto	u857
  1974  0225                     l1438:	
  1975                           
  1976                           ;./LCD.h: 42:     comando(0x38);
  1977  0225  3038               	movlw	56
  1978  0226  120A  118A  210D  120A  118A  	fcall	_comando
  1979  022B                     l1440:	
  1980                           
  1981                           ;./LCD.h: 44:     comando(0x10);
  1982  022B  3010               	movlw	16
  1983  022C  120A  118A  210D  120A  118A  	fcall	_comando
  1984  0231                     l1442:	
  1985                           
  1986                           ;./LCD.h: 46:     comando(0x01);
  1987  0231  3001               	movlw	1
  1988  0232  120A  118A  210D  120A  118A  	fcall	_comando
  1989  0237                     l1444:	
  1990                           
  1991                           ;./LCD.h: 48:     comando(0x06);
  1992  0237  3006               	movlw	6
  1993  0238  120A  118A  210D  120A  118A  	fcall	_comando
  1994  023D                     l1446:	
  1995                           
  1996                           ;./LCD.h: 50:     comando(0x0F);
  1997  023D  300F               	movlw	15
  1998  023E  120A  118A  210D  120A  118A  	fcall	_comando
  1999  0243                     l71:	
  2000  0243  0008               	return
  2001  0244                     __end_of_iniciarLCD:	
  2002                           
  2003                           	psect	text7
  2004  04AC                     __ptext7:	
  2005 ;; *************** function _humo *****************
  2006 ;; Defined at:
  2007 ;;		line 63 in file "Carcelero.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;		None
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;		None
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      void 
  2014 ;; Registers used:
  2015 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2021 ;;      Params:         0       0       0       0       0
  2022 ;;      Locals:         0       0       0       0       0
  2023 ;;      Temps:          2       0       0       0       0
  2024 ;;      Totals:         2       0       0       0       0
  2025 ;;Total ram usage:        2 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; Hardware stack levels required when called:    2
  2028 ;; This function calls:
  2029 ;;		___awdiv
  2030 ;;		___awmod
  2031 ;;		_colocar
  2032 ;;		_imprimir
  2033 ;;		_mostrar
  2034 ;; This function is called by:
  2035 ;;		_main
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           
  2040                           ;psect for function _humo
  2041  04AC                     _humo:	
  2042  04AC                     l1486:	
  2043                           ;incstack = 0
  2044                           ; Regs used in _humo: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2045                           
  2046                           
  2047                           ;Carcelero.c: 65:     w = Humo/100;
  2048  04AC  3064               	movlw	100
  2049  04AD  00F0               	movwf	___awdiv@divisor
  2050  04AE  3000               	movlw	0
  2051  04AF  00F1               	movwf	___awdiv@divisor+1
  2052  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  2053  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  2054  04B2  0834               	movf	_Humo,w
  2055  04B3  00F9               	movwf	??_humo
  2056  04B4  01FA               	clrf	??_humo+1
  2057  04B5  0879               	movf	??_humo,w
  2058  04B6  00F2               	movwf	___awdiv@dividend
  2059  04B7  087A               	movf	??_humo+1,w
  2060  04B8  00F3               	movwf	___awdiv@dividend+1
  2061  04B9  120A  118A  23B9  120A  118A  	fcall	___awdiv
  2062  04BE  0871               	movf	?___awdiv+1,w
  2063  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2064  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  2065  04C1  00A7               	movwf	_w+1
  2066  04C2  0870               	movf	?___awdiv,w
  2067  04C3  00A6               	movwf	_w
  2068                           
  2069                           ;Carcelero.c: 66:     w1 = Humo%100;
  2070  04C4  3064               	movlw	100
  2071  04C5  00F0               	movwf	___awmod@divisor
  2072  04C6  3000               	movlw	0
  2073  04C7  00F1               	movwf	___awmod@divisor+1
  2074  04C8  0834               	movf	_Humo,w
  2075  04C9  00F9               	movwf	??_humo
  2076  04CA  01FA               	clrf	??_humo+1
  2077  04CB  0879               	movf	??_humo,w
  2078  04CC  00F2               	movwf	___awmod@dividend
  2079  04CD  087A               	movf	??_humo+1,w
  2080  04CE  00F3               	movwf	___awmod@dividend+1
  2081  04CF  120A  118A  2299  120A  118A  	fcall	___awmod
  2082  04D4  0871               	movf	?___awmod+1,w
  2083  04D5  1283               	bcf	3,5	;RP0=0, select bank0
  2084  04D6  1303               	bcf	3,6	;RP1=0, select bank0
  2085  04D7  00A5               	movwf	_w1+1
  2086  04D8  0870               	movf	?___awmod,w
  2087  04D9  00A4               	movwf	_w1
  2088                           
  2089                           ;Carcelero.c: 67:     w2 = w1/10;
  2090  04DA  300A               	movlw	10
  2091  04DB  00F0               	movwf	___awdiv@divisor
  2092  04DC  3000               	movlw	0
  2093  04DD  00F1               	movwf	___awdiv@divisor+1
  2094  04DE  0825               	movf	_w1+1,w
  2095  04DF  00F3               	movwf	___awdiv@dividend+1
  2096  04E0  0824               	movf	_w1,w
  2097  04E1  00F2               	movwf	___awdiv@dividend
  2098  04E2  120A  118A  23B9  120A  118A  	fcall	___awdiv
  2099  04E7  0871               	movf	?___awdiv+1,w
  2100  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  2101  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  2102  04EA  00A3               	movwf	_w2+1
  2103  04EB  0870               	movf	?___awdiv,w
  2104  04EC  00A2               	movwf	_w2
  2105                           
  2106                           ;Carcelero.c: 68:     w3 = w1%10;
  2107  04ED  300A               	movlw	10
  2108  04EE  00F0               	movwf	___awmod@divisor
  2109  04EF  3000               	movlw	0
  2110  04F0  00F1               	movwf	___awmod@divisor+1
  2111  04F1  0825               	movf	_w1+1,w
  2112  04F2  00F3               	movwf	___awmod@dividend+1
  2113  04F3  0824               	movf	_w1,w
  2114  04F4  00F2               	movwf	___awmod@dividend
  2115  04F5  120A  118A  2299  120A  118A  	fcall	___awmod
  2116  04FA  0871               	movf	?___awmod+1,w
  2117  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  2118  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  2119  04FD  00A1               	movwf	_w3+1
  2120  04FE  0870               	movf	?___awmod,w
  2121  04FF  00A0               	movwf	_w3
  2122                           
  2123                           ;Carcelero.c: 70:     colocar(20,1);
  2124  0500  01F3               	clrf	colocar@y
  2125  0501  0AF3               	incf	colocar@y,f
  2126  0502  3014               	movlw	20
  2127  0503  120A  118A  2135  120A  118A  	fcall	_colocar
  2128  0508                     l1488:	
  2129                           
  2130                           ;Carcelero.c: 71:     mostrar(a[w]);
  2131  0508  1283               	bcf	3,5	;RP0=0, select bank0
  2132  0509  1303               	bcf	3,6	;RP1=0, select bank0
  2133  050A  0826               	movf	_w,w
  2134  050B  3E01               	addlw	low ((_a-__stringbase)| (0+32768))
  2135  050C  0084               	movwf	4
  2136  050D  120A  118A  2003  120A  118A  	fcall	stringdir
  2137  0512  120A  118A  2121  120A  118A  	fcall	_mostrar
  2138  0517                     l1490:	
  2139                           
  2140                           ;Carcelero.c: 72:     colocar(21,1);
  2141  0517  01F3               	clrf	colocar@y
  2142  0518  0AF3               	incf	colocar@y,f
  2143  0519  3015               	movlw	21
  2144  051A  120A  118A  2135  120A  118A  	fcall	_colocar
  2145                           
  2146                           ;Carcelero.c: 73:     mostrar(a[w2]);
  2147  051F  1283               	bcf	3,5	;RP0=0, select bank0
  2148  0520  1303               	bcf	3,6	;RP1=0, select bank0
  2149  0521  0822               	movf	_w2,w
  2150  0522  3E01               	addlw	low ((_a-__stringbase)| (0+32768))
  2151  0523  0084               	movwf	4
  2152  0524  120A  118A  2003  120A  118A  	fcall	stringdir
  2153  0529  120A  118A  2121  120A  118A  	fcall	_mostrar
  2154  052E                     l1492:	
  2155                           
  2156                           ;Carcelero.c: 74:     colocar(22,1);
  2157  052E  01F3               	clrf	colocar@y
  2158  052F  0AF3               	incf	colocar@y,f
  2159  0530  3016               	movlw	22
  2160  0531  120A  118A  2135  120A  118A  	fcall	_colocar
  2161  0536                     l1494:	
  2162                           
  2163                           ;Carcelero.c: 75:     mostrar(a[w3]);
  2164  0536  1283               	bcf	3,5	;RP0=0, select bank0
  2165  0537  1303               	bcf	3,6	;RP1=0, select bank0
  2166  0538  0820               	movf	_w3,w
  2167  0539  3E01               	addlw	low ((_a-__stringbase)| (0+32768))
  2168  053A  0084               	movwf	4
  2169  053B  120A  118A  2003  120A  118A  	fcall	stringdir
  2170  0540  120A  118A  2121  120A  118A  	fcall	_mostrar
  2171  0545                     l1496:	
  2172                           
  2173                           ;Carcelero.c: 77:     if (Humo > 50)
  2174  0545  3033               	movlw	51
  2175  0546  1283               	bcf	3,5	;RP0=0, select bank0
  2176  0547  1303               	bcf	3,6	;RP1=0, select bank0
  2177  0548  0234               	subwf	_Humo,w
  2178  0549  1C03               	skipc
  2179  054A  2D4C               	goto	u721
  2180  054B  2D4D               	goto	u720
  2181  054C                     u721:	
  2182  054C  2D61               	goto	l1504
  2183  054D                     u720:	
  2184  054D                     l1498:	
  2185                           
  2186                           ;Carcelero.c: 78:     {;Carcelero.c: 79:         colocar(16,2);
  2187  054D  3002               	movlw	2
  2188  054E  00F9               	movwf	??_humo
  2189  054F  0879               	movf	??_humo,w
  2190  0550  00F3               	movwf	colocar@y
  2191  0551  3010               	movlw	16
  2192  0552  120A  118A  2135  120A  118A  	fcall	_colocar
  2193  0557                     l1500:	
  2194                           
  2195                           ;Carcelero.c: 80:         imprimir("ALERTA");
  2196  0557  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2197  0558  120A  118A  2187  120A  118A  	fcall	_imprimir
  2198  055D                     l1502:	
  2199                           
  2200                           ;Carcelero.c: 81:         PORTAbits.RA4 = 1;
  2201  055D  1283               	bcf	3,5	;RP0=0, select bank0
  2202  055E  1303               	bcf	3,6	;RP1=0, select bank0
  2203  055F  1605               	bsf	5,4	;volatile
  2204                           
  2205                           ;Carcelero.c: 82:     }
  2206  0560  2D74               	goto	l141
  2207  0561                     l1504:	
  2208                           
  2209                           ;Carcelero.c: 85:     {;Carcelero.c: 86:         colocar(16,2);
  2210  0561  3002               	movlw	2
  2211  0562  00F9               	movwf	??_humo
  2212  0563  0879               	movf	??_humo,w
  2213  0564  00F3               	movwf	colocar@y
  2214  0565  3010               	movlw	16
  2215  0566  120A  118A  2135  120A  118A  	fcall	_colocar
  2216  056B                     l1506:	
  2217                           
  2218                           ;Carcelero.c: 87:         imprimir("      ");
  2219  056B  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2220  056C  120A  118A  2187  120A  118A  	fcall	_imprimir
  2221  0571                     l1508:	
  2222                           
  2223                           ;Carcelero.c: 88:         PORTAbits.RA4 = 0;
  2224  0571  1283               	bcf	3,5	;RP0=0, select bank0
  2225  0572  1303               	bcf	3,6	;RP1=0, select bank0
  2226  0573  1205               	bcf	5,4	;volatile
  2227  0574                     l141:	
  2228  0574  0008               	return
  2229  0575                     __end_of_humo:	
  2230                           
  2231                           	psect	text8
  2232  0121                     __ptext8:	
  2233 ;; *************** function _mostrar *****************
  2234 ;; Defined at:
  2235 ;;		line 90 in file "./LCD.h"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;  t               1    wreg     const unsigned char 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  t               1    2[COMMON] const unsigned char 
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  1    wreg      void 
  2242 ;; Registers used:
  2243 ;;		wreg
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2249 ;;      Params:         0       0       0       0       0
  2250 ;;      Locals:         1       0       0       0       0
  2251 ;;      Temps:          2       0       0       0       0
  2252 ;;      Totals:         3       0       0       0       0
  2253 ;;Total ram usage:        3 bytes
  2254 ;; Hardware stack levels used:    1
  2255 ;; This function calls:
  2256 ;;		Nothing
  2257 ;; This function is called by:
  2258 ;;		_humo
  2259 ;;		_ultrasonico
  2260 ;;		_luces
  2261 ;;		_main
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           
  2266                           ;psect for function _mostrar
  2267  0121                     _mostrar:	
  2268                           
  2269                           ;incstack = 0
  2270                           ; Regs used in _mostrar: [wreg]
  2271                           ;mostrar@t stored from wreg
  2272  0121  00F2               	movwf	mostrar@t
  2273  0122                     l1270:	
  2274                           
  2275                           ;./LCD.h: 90: void mostrar(const char t);./LCD.h: 91: {;./LCD.h: 92:     PORTDbits.RD6 =
      +                           1;
  2276  0122  1283               	bcf	3,5	;RP0=0, select bank0
  2277  0123  1303               	bcf	3,6	;RP1=0, select bank0
  2278  0124  1708               	bsf	8,6	;volatile
  2279  0125                     l1272:	
  2280                           
  2281                           ;./LCD.h: 93:     PORTB = t;
  2282  0125  0872               	movf	mostrar@t,w
  2283  0126  0086               	movwf	6	;volatile
  2284  0127                     l1274:	
  2285                           
  2286                           ;./LCD.h: 94:     PORTDbits.RD7 = 1;
  2287  0127  1788               	bsf	8,7	;volatile
  2288                           
  2289                           ;./LCD.h: 95:     _delay((unsigned long)((2)*(4000000/4000.0)));
  2290  0128  3003               	movlw	3
  2291  0129  00F1               	movwf	??_mostrar+1
  2292  012A  3097               	movlw	151
  2293  012B  00F0               	movwf	??_mostrar
  2294  012C                     u867:	
  2295  012C  0BF0               	decfsz	??_mostrar,f
  2296  012D  292C               	goto	u867
  2297  012E  0BF1               	decfsz	??_mostrar+1,f
  2298  012F  292C               	goto	u867
  2299  0130  2931               	nop2
  2300  0131                     l1276:	
  2301                           
  2302                           ;./LCD.h: 96:     PORTDbits.RD7 = 0;
  2303  0131  1283               	bcf	3,5	;RP0=0, select bank0
  2304  0132  1303               	bcf	3,6	;RP1=0, select bank0
  2305  0133  1388               	bcf	8,7	;volatile
  2306  0134                     l89:	
  2307  0134  0008               	return
  2308  0135                     __end_of_mostrar:	
  2309                           
  2310                           	psect	text9
  2311  0299                     __ptext9:	
  2312 ;; *************** function ___awmod *****************
  2313 ;; Defined at:
  2314 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;  divisor         2    0[COMMON] int 
  2317 ;;  dividend        2    2[COMMON] int 
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;  sign            1    6[COMMON] unsigned char 
  2320 ;;  counter         1    5[COMMON] unsigned char 
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  2    0[COMMON] int 
  2323 ;; Registers used:
  2324 ;;		wreg, status,2, status,0
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2330 ;;      Params:         4       0       0       0       0
  2331 ;;      Locals:         2       0       0       0       0
  2332 ;;      Temps:          1       0       0       0       0
  2333 ;;      Totals:         7       0       0       0       0
  2334 ;;Total ram usage:        7 bytes
  2335 ;; Hardware stack levels used:    1
  2336 ;; This function calls:
  2337 ;;		Nothing
  2338 ;; This function is called by:
  2339 ;;		_humo
  2340 ;;		_ultrasonico
  2341 ;;		_luces
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           
  2346                           ;psect for function ___awmod
  2347  0299                     ___awmod:	
  2348  0299                     l1346:	
  2349                           ;incstack = 0
  2350                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2351                           
  2352  0299  01F6               	clrf	___awmod@sign
  2353  029A                     l1348:	
  2354  029A  1FF3               	btfss	___awmod@dividend+1,7
  2355  029B  2A9D               	goto	u611
  2356  029C  2A9E               	goto	u610
  2357  029D                     u611:	
  2358  029D  2AA5               	goto	l1354
  2359  029E                     u610:	
  2360  029E                     l1350:	
  2361  029E  09F2               	comf	___awmod@dividend,f
  2362  029F  09F3               	comf	___awmod@dividend+1,f
  2363  02A0  0AF2               	incf	___awmod@dividend,f
  2364  02A1  1903               	skipnz
  2365  02A2  0AF3               	incf	___awmod@dividend+1,f
  2366  02A3                     l1352:	
  2367  02A3  01F6               	clrf	___awmod@sign
  2368  02A4  0AF6               	incf	___awmod@sign,f
  2369  02A5                     l1354:	
  2370  02A5  1FF1               	btfss	___awmod@divisor+1,7
  2371  02A6  2AA8               	goto	u621
  2372  02A7  2AA9               	goto	u620
  2373  02A8                     u621:	
  2374  02A8  2AAE               	goto	l1358
  2375  02A9                     u620:	
  2376  02A9                     l1356:	
  2377  02A9  09F0               	comf	___awmod@divisor,f
  2378  02AA  09F1               	comf	___awmod@divisor+1,f
  2379  02AB  0AF0               	incf	___awmod@divisor,f
  2380  02AC  1903               	skipnz
  2381  02AD  0AF1               	incf	___awmod@divisor+1,f
  2382  02AE                     l1358:	
  2383  02AE  0870               	movf	___awmod@divisor,w
  2384  02AF  0471               	iorwf	___awmod@divisor+1,w
  2385  02B0  1903               	btfsc	3,2
  2386  02B1  2AB3               	goto	u631
  2387  02B2  2AB4               	goto	u630
  2388  02B3                     u631:	
  2389  02B3  2AE3               	goto	l1376
  2390  02B4                     u630:	
  2391  02B4                     l1360:	
  2392  02B4  01F5               	clrf	___awmod@counter
  2393  02B5  0AF5               	incf	___awmod@counter,f
  2394  02B6  2AC2               	goto	l1366
  2395  02B7                     l1362:	
  2396  02B7  3001               	movlw	1
  2397  02B8                     u645:	
  2398  02B8  1003               	clrc
  2399  02B9  0DF0               	rlf	___awmod@divisor,f
  2400  02BA  0DF1               	rlf	___awmod@divisor+1,f
  2401  02BB  3EFF               	addlw	-1
  2402  02BC  1D03               	skipz
  2403  02BD  2AB8               	goto	u645
  2404  02BE                     l1364:	
  2405  02BE  3001               	movlw	1
  2406  02BF  00F4               	movwf	??___awmod
  2407  02C0  0874               	movf	??___awmod,w
  2408  02C1  07F5               	addwf	___awmod@counter,f
  2409  02C2                     l1366:	
  2410  02C2  1FF1               	btfss	___awmod@divisor+1,7
  2411  02C3  2AC5               	goto	u651
  2412  02C4  2AC6               	goto	u650
  2413  02C5                     u651:	
  2414  02C5  2AB7               	goto	l1362
  2415  02C6                     u650:	
  2416  02C6                     l1368:	
  2417  02C6  0871               	movf	___awmod@divisor+1,w
  2418  02C7  0273               	subwf	___awmod@dividend+1,w
  2419  02C8  1D03               	skipz
  2420  02C9  2ACC               	goto	u665
  2421  02CA  0870               	movf	___awmod@divisor,w
  2422  02CB  0272               	subwf	___awmod@dividend,w
  2423  02CC                     u665:	
  2424  02CC  1C03               	skipc
  2425  02CD  2ACF               	goto	u661
  2426  02CE  2AD0               	goto	u660
  2427  02CF                     u661:	
  2428  02CF  2AD6               	goto	l1372
  2429  02D0                     u660:	
  2430  02D0                     l1370:	
  2431  02D0  0870               	movf	___awmod@divisor,w
  2432  02D1  02F2               	subwf	___awmod@dividend,f
  2433  02D2  0871               	movf	___awmod@divisor+1,w
  2434  02D3  1C03               	skipc
  2435  02D4  03F3               	decf	___awmod@dividend+1,f
  2436  02D5  02F3               	subwf	___awmod@dividend+1,f
  2437  02D6                     l1372:	
  2438  02D6  3001               	movlw	1
  2439  02D7                     u675:	
  2440  02D7  1003               	clrc
  2441  02D8  0CF1               	rrf	___awmod@divisor+1,f
  2442  02D9  0CF0               	rrf	___awmod@divisor,f
  2443  02DA  3EFF               	addlw	-1
  2444  02DB  1D03               	skipz
  2445  02DC  2AD7               	goto	u675
  2446  02DD                     l1374:	
  2447  02DD  3001               	movlw	1
  2448  02DE  02F5               	subwf	___awmod@counter,f
  2449  02DF  1D03               	btfss	3,2
  2450  02E0  2AE2               	goto	u681
  2451  02E1  2AE3               	goto	u680
  2452  02E2                     u681:	
  2453  02E2  2AC6               	goto	l1368
  2454  02E3                     u680:	
  2455  02E3                     l1376:	
  2456  02E3  0876               	movf	___awmod@sign,w
  2457  02E4  1903               	btfsc	3,2
  2458  02E5  2AE7               	goto	u691
  2459  02E6  2AE8               	goto	u690
  2460  02E7                     u691:	
  2461  02E7  2AED               	goto	l1380
  2462  02E8                     u690:	
  2463  02E8                     l1378:	
  2464  02E8  09F2               	comf	___awmod@dividend,f
  2465  02E9  09F3               	comf	___awmod@dividend+1,f
  2466  02EA  0AF2               	incf	___awmod@dividend,f
  2467  02EB  1903               	skipnz
  2468  02EC  0AF3               	incf	___awmod@dividend+1,f
  2469  02ED                     l1380:	
  2470  02ED  0873               	movf	___awmod@dividend+1,w
  2471  02EE  00F1               	movwf	?___awmod+1
  2472  02EF  0872               	movf	___awmod@dividend,w
  2473  02F0  00F0               	movwf	?___awmod
  2474  02F1                     l420:	
  2475  02F1  0008               	return
  2476  02F2                     __end_of___awmod:	
  2477                           
  2478                           	psect	text10
  2479  03B9                     __ptext10:	
  2480 ;; *************** function ___awdiv *****************
  2481 ;; Defined at:
  2482 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  divisor         2    0[COMMON] int 
  2485 ;;  dividend        2    2[COMMON] int 
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;  quotient        2    7[COMMON] int 
  2488 ;;  sign            1    6[COMMON] unsigned char 
  2489 ;;  counter         1    5[COMMON] unsigned char 
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  2    0[COMMON] int 
  2492 ;; Registers used:
  2493 ;;		wreg, status,2, status,0
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2499 ;;      Params:         4       0       0       0       0
  2500 ;;      Locals:         4       0       0       0       0
  2501 ;;      Temps:          1       0       0       0       0
  2502 ;;      Totals:         9       0       0       0       0
  2503 ;;Total ram usage:        9 bytes
  2504 ;; Hardware stack levels used:    1
  2505 ;; This function calls:
  2506 ;;		Nothing
  2507 ;; This function is called by:
  2508 ;;		_humo
  2509 ;;		_ultrasonico
  2510 ;;		_luces
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           
  2515                           ;psect for function ___awdiv
  2516  03B9                     ___awdiv:	
  2517  03B9                     l1302:	
  2518                           ;incstack = 0
  2519                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2520                           
  2521  03B9  01F6               	clrf	___awdiv@sign
  2522  03BA                     l1304:	
  2523  03BA  1FF1               	btfss	___awdiv@divisor+1,7
  2524  03BB  2BBD               	goto	u511
  2525  03BC  2BBE               	goto	u510
  2526  03BD                     u511:	
  2527  03BD  2BC5               	goto	l1310
  2528  03BE                     u510:	
  2529  03BE                     l1306:	
  2530  03BE  09F0               	comf	___awdiv@divisor,f
  2531  03BF  09F1               	comf	___awdiv@divisor+1,f
  2532  03C0  0AF0               	incf	___awdiv@divisor,f
  2533  03C1  1903               	skipnz
  2534  03C2  0AF1               	incf	___awdiv@divisor+1,f
  2535  03C3                     l1308:	
  2536  03C3  01F6               	clrf	___awdiv@sign
  2537  03C4  0AF6               	incf	___awdiv@sign,f
  2538  03C5                     l1310:	
  2539  03C5  1FF3               	btfss	___awdiv@dividend+1,7
  2540  03C6  2BC8               	goto	u521
  2541  03C7  2BC9               	goto	u520
  2542  03C8                     u521:	
  2543  03C8  2BD2               	goto	l1316
  2544  03C9                     u520:	
  2545  03C9                     l1312:	
  2546  03C9  09F2               	comf	___awdiv@dividend,f
  2547  03CA  09F3               	comf	___awdiv@dividend+1,f
  2548  03CB  0AF2               	incf	___awdiv@dividend,f
  2549  03CC  1903               	skipnz
  2550  03CD  0AF3               	incf	___awdiv@dividend+1,f
  2551  03CE                     l1314:	
  2552  03CE  3001               	movlw	1
  2553  03CF  00F4               	movwf	??___awdiv
  2554  03D0  0874               	movf	??___awdiv,w
  2555  03D1  06F6               	xorwf	___awdiv@sign,f
  2556  03D2                     l1316:	
  2557  03D2  01F7               	clrf	___awdiv@quotient
  2558  03D3  01F8               	clrf	___awdiv@quotient+1
  2559  03D4                     l1318:	
  2560  03D4  0870               	movf	___awdiv@divisor,w
  2561  03D5  0471               	iorwf	___awdiv@divisor+1,w
  2562  03D6  1903               	btfsc	3,2
  2563  03D7  2BD9               	goto	u531
  2564  03D8  2BDA               	goto	u530
  2565  03D9                     u531:	
  2566  03D9  2C11               	goto	l1338
  2567  03DA                     u530:	
  2568  03DA                     l1320:	
  2569  03DA  01F5               	clrf	___awdiv@counter
  2570  03DB  0AF5               	incf	___awdiv@counter,f
  2571  03DC  2BE8               	goto	l1326
  2572  03DD                     l1322:	
  2573  03DD  3001               	movlw	1
  2574  03DE                     u545:	
  2575  03DE  1003               	clrc
  2576  03DF  0DF0               	rlf	___awdiv@divisor,f
  2577  03E0  0DF1               	rlf	___awdiv@divisor+1,f
  2578  03E1  3EFF               	addlw	-1
  2579  03E2  1D03               	skipz
  2580  03E3  2BDE               	goto	u545
  2581  03E4                     l1324:	
  2582  03E4  3001               	movlw	1
  2583  03E5  00F4               	movwf	??___awdiv
  2584  03E6  0874               	movf	??___awdiv,w
  2585  03E7  07F5               	addwf	___awdiv@counter,f
  2586  03E8                     l1326:	
  2587  03E8  1FF1               	btfss	___awdiv@divisor+1,7
  2588  03E9  2BEB               	goto	u551
  2589  03EA  2BEC               	goto	u550
  2590  03EB                     u551:	
  2591  03EB  2BDD               	goto	l1322
  2592  03EC                     u550:	
  2593  03EC                     l1328:	
  2594  03EC  3001               	movlw	1
  2595  03ED                     u565:	
  2596  03ED  1003               	clrc
  2597  03EE  0DF7               	rlf	___awdiv@quotient,f
  2598  03EF  0DF8               	rlf	___awdiv@quotient+1,f
  2599  03F0  3EFF               	addlw	-1
  2600  03F1  1D03               	skipz
  2601  03F2  2BED               	goto	u565
  2602  03F3  0871               	movf	___awdiv@divisor+1,w
  2603  03F4  0273               	subwf	___awdiv@dividend+1,w
  2604  03F5  1D03               	skipz
  2605  03F6  2BF9               	goto	u575
  2606  03F7  0870               	movf	___awdiv@divisor,w
  2607  03F8  0272               	subwf	___awdiv@dividend,w
  2608  03F9                     u575:	
  2609  03F9  1C03               	skipc
  2610  03FA  2BFC               	goto	u571
  2611  03FB  2BFD               	goto	u570
  2612  03FC                     u571:	
  2613  03FC  2C04               	goto	l1334
  2614  03FD                     u570:	
  2615  03FD                     l1330:	
  2616  03FD  0870               	movf	___awdiv@divisor,w
  2617  03FE  02F2               	subwf	___awdiv@dividend,f
  2618  03FF  0871               	movf	___awdiv@divisor+1,w
  2619  0400  1C03               	skipc
  2620  0401  03F3               	decf	___awdiv@dividend+1,f
  2621  0402  02F3               	subwf	___awdiv@dividend+1,f
  2622  0403                     l1332:	
  2623  0403  1477               	bsf	___awdiv@quotient,0
  2624  0404                     l1334:	
  2625  0404  3001               	movlw	1
  2626  0405                     u585:	
  2627  0405  1003               	clrc
  2628  0406  0CF1               	rrf	___awdiv@divisor+1,f
  2629  0407  0CF0               	rrf	___awdiv@divisor,f
  2630  0408  3EFF               	addlw	-1
  2631  0409  1D03               	skipz
  2632  040A  2C05               	goto	u585
  2633  040B                     l1336:	
  2634  040B  3001               	movlw	1
  2635  040C  02F5               	subwf	___awdiv@counter,f
  2636  040D  1D03               	btfss	3,2
  2637  040E  2C10               	goto	u591
  2638  040F  2C11               	goto	u590
  2639  0410                     u591:	
  2640  0410  2BEC               	goto	l1328
  2641  0411                     u590:	
  2642  0411                     l1338:	
  2643  0411  0876               	movf	___awdiv@sign,w
  2644  0412  1903               	btfsc	3,2
  2645  0413  2C15               	goto	u601
  2646  0414  2C16               	goto	u600
  2647  0415                     u601:	
  2648  0415  2C1B               	goto	l1342
  2649  0416                     u600:	
  2650  0416                     l1340:	
  2651  0416  09F7               	comf	___awdiv@quotient,f
  2652  0417  09F8               	comf	___awdiv@quotient+1,f
  2653  0418  0AF7               	incf	___awdiv@quotient,f
  2654  0419  1903               	skipnz
  2655  041A  0AF8               	incf	___awdiv@quotient+1,f
  2656  041B                     l1342:	
  2657  041B  0878               	movf	___awdiv@quotient+1,w
  2658  041C  00F1               	movwf	?___awdiv+1
  2659  041D  0877               	movf	___awdiv@quotient,w
  2660  041E  00F0               	movwf	?___awdiv
  2661  041F                     l407:	
  2662  041F  0008               	return
  2663  0420                     __end_of___awdiv:	
  2664                           
  2665                           	psect	text11
  2666  0244                     __ptext11:	
  2667 ;; *************** function _celda *****************
  2668 ;; Defined at:
  2669 ;;		line 150 in file "Carcelero.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;		None
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;		None
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2683 ;;      Params:         0       0       0       0       0
  2684 ;;      Locals:         0       0       0       0       0
  2685 ;;      Temps:          1       0       0       0       0
  2686 ;;      Totals:         1       0       0       0       0
  2687 ;;Total ram usage:        1 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; Hardware stack levels required when called:    2
  2690 ;; This function calls:
  2691 ;;		_colocar
  2692 ;;		_imprimir
  2693 ;; This function is called by:
  2694 ;;		_main
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           
  2699                           ;psect for function _celda
  2700  0244                     _celda:	
  2701  0244                     l1558:	
  2702                           ;incstack = 0
  2703                           ; Regs used in _celda: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2704                           
  2705                           
  2706                           ;Carcelero.c: 152:     if (grados == 0)
  2707  0244  1283               	bcf	3,5	;RP0=0, select bank0
  2708  0245  1303               	bcf	3,6	;RP1=0, select bank0
  2709  0246  0836               	movf	_grados,w
  2710  0247  1D03               	btfss	3,2
  2711  0248  2A4A               	goto	u751
  2712  0249  2A4B               	goto	u750
  2713  024A                     u751:	
  2714  024A  2A6F               	goto	l1568
  2715  024B                     u750:	
  2716  024B                     l1560:	
  2717                           
  2718                           ;Carcelero.c: 153:     {;Carcelero.c: 154:         colocar(38,2);
  2719  024B  3002               	movlw	2
  2720  024C  00F7               	movwf	??_celda
  2721  024D  0877               	movf	??_celda,w
  2722  024E  00F3               	movwf	colocar@y
  2723  024F  3026               	movlw	38
  2724  0250  120A  118A  2135  120A  118A  	fcall	_colocar
  2725  0255                     l1562:	
  2726                           
  2727                           ;Carcelero.c: 155:         imprimir(" ");
  2728  0255  3010               	movlw	(low (((STR_2+5)-__stringbase)| (0+32768)))& (0+255)
  2729  0256  120A  118A  2187  120A  118A  	fcall	_imprimir
  2730  025B                     l1564:	
  2731                           
  2732                           ;Carcelero.c: 157:         PORTAbits.RA1 = 0;
  2733  025B  1283               	bcf	3,5	;RP0=0, select bank0
  2734  025C  1303               	bcf	3,6	;RP1=0, select bank0
  2735  025D  1085               	bcf	5,1	;volatile
  2736  025E                     l1566:	
  2737                           
  2738                           ;Carcelero.c: 159:         colocar(39,2);
  2739  025E  3002               	movlw	2
  2740  025F  00F7               	movwf	??_celda
  2741  0260  0877               	movf	??_celda,w
  2742  0261  00F3               	movwf	colocar@y
  2743  0262  3027               	movlw	39
  2744  0263  120A  118A  2135  120A  118A  	fcall	_colocar
  2745                           
  2746                           ;Carcelero.c: 160:         imprimir("-");
  2747  0268  3044               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2748  0269  120A  118A  2187  120A  118A  	fcall	_imprimir
  2749                           
  2750                           ;Carcelero.c: 161:     }
  2751  026E  2A98               	goto	l157
  2752  026F                     l1568:	
  2753  026F  305A               	movlw	90
  2754  0270  0636               	xorwf	_grados,w
  2755  0271  1D03               	btfss	3,2
  2756  0272  2A74               	goto	u761
  2757  0273  2A75               	goto	u760
  2758  0274                     u761:	
  2759  0274  2A98               	goto	l157
  2760  0275                     u760:	
  2761  0275                     l1570:	
  2762                           
  2763                           ;Carcelero.c: 164:     {;Carcelero.c: 165:         colocar(39,2);
  2764  0275  3002               	movlw	2
  2765  0276  00F7               	movwf	??_celda
  2766  0277  0877               	movf	??_celda,w
  2767  0278  00F3               	movwf	colocar@y
  2768  0279  3027               	movlw	39
  2769  027A  120A  118A  2135  120A  118A  	fcall	_colocar
  2770  027F                     l1572:	
  2771                           
  2772                           ;Carcelero.c: 166:         imprimir(" ");
  2773  027F  3010               	movlw	(low (((STR_2+5)-__stringbase)| (0+32768)))& (0+255)
  2774  0280  120A  118A  2187  120A  118A  	fcall	_imprimir
  2775  0285                     l1574:	
  2776                           
  2777                           ;Carcelero.c: 168:         PORTAbits.RA1 = 1;
  2778  0285  1283               	bcf	3,5	;RP0=0, select bank0
  2779  0286  1303               	bcf	3,6	;RP1=0, select bank0
  2780  0287  1485               	bsf	5,1	;volatile
  2781  0288                     l1576:	
  2782                           
  2783                           ;Carcelero.c: 170:         colocar(38,2);
  2784  0288  3002               	movlw	2
  2785  0289  00F7               	movwf	??_celda
  2786  028A  0877               	movf	??_celda,w
  2787  028B  00F3               	movwf	colocar@y
  2788  028C  3026               	movlw	38
  2789  028D  120A  118A  2135  120A  118A  	fcall	_colocar
  2790                           
  2791                           ;Carcelero.c: 171:         imprimir("+");
  2792  0292  3042               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2793  0293  120A  118A  2187  120A  118A  	fcall	_imprimir
  2794  0298                     l157:	
  2795  0298  0008               	return
  2796  0299                     __end_of_celda:	
  2797                           
  2798                           	psect	text12
  2799  0187                     __ptext12:	
  2800 ;; *************** function _imprimir *****************
  2801 ;; Defined at:
  2802 ;;		line 78 in file "./LCD.h"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;  texto           1    wreg     PTR const unsigned char 
  2805 ;;		 -> STR_22(3), STR_21(3), STR_20(2), STR_19(6), 
  2806 ;;		 -> STR_18(2), STR_17(5), STR_16(6), STR_15(3), 
  2807 ;;		 -> STR_14(3), STR_13(5), STR_12(2), STR_11(2), 
  2808 ;;		 -> STR_10(2), STR_9(2), STR_8(4), STR_7(3), 
  2809 ;;		 -> STR_6(3), STR_5(4), STR_4(7), STR_3(7), 
  2810 ;;		 -> STR_2(7), STR_1(7), 
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;  texto           1    4[COMMON] PTR const unsigned char 
  2813 ;;		 -> STR_22(3), STR_21(3), STR_20(2), STR_19(6), 
  2814 ;;		 -> STR_18(2), STR_17(5), STR_16(6), STR_15(3), 
  2815 ;;		 -> STR_14(3), STR_13(5), STR_12(2), STR_11(2), 
  2816 ;;		 -> STR_10(2), STR_9(2), STR_8(4), STR_7(3), 
  2817 ;;		 -> STR_6(3), STR_5(4), STR_4(7), STR_3(7), 
  2818 ;;		 -> STR_2(7), STR_1(7), 
  2819 ;;  i               2    2[COMMON] int 
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  1    wreg      void 
  2822 ;; Registers used:
  2823 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2829 ;;      Params:         0       0       0       0       0
  2830 ;;      Locals:         3       0       0       0       0
  2831 ;;      Temps:          2       0       0       0       0
  2832 ;;      Totals:         5       0       0       0       0
  2833 ;;Total ram usage:        5 bytes
  2834 ;; Hardware stack levels used:    2
  2835 ;; This function calls:
  2836 ;;		Nothing
  2837 ;; This function is called by:
  2838 ;;		_humo
  2839 ;;		_ultrasonico
  2840 ;;		_luces
  2841 ;;		_celda
  2842 ;;		_main
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           
  2847                           ;psect for function _imprimir
  2848  0187                     _imprimir:	
  2849                           
  2850                           ;incstack = 0
  2851                           ; Regs used in _imprimir: [wreg-fsr0h+status,2+status,0+pclath]
  2852                           ;imprimir@texto stored from wreg
  2853  0187  00F4               	movwf	imprimir@texto
  2854  0188                     l1258:	
  2855                           
  2856                           ;./LCD.h: 78: void imprimir(const char *texto);./LCD.h: 79: {;./LCD.h: 80:     for(int i
      +                           = 0; texto[i] != '\0'; i++)
  2857  0188  01F2               	clrf	imprimir@i
  2858  0189  01F3               	clrf	imprimir@i+1
  2859  018A  29AA               	goto	l83
  2860  018B                     l84:	
  2861                           
  2862                           ;./LCD.h: 81:     {;./LCD.h: 82:         PORTDbits.RD6 = 1;
  2863  018B  1283               	bcf	3,5	;RP0=0, select bank0
  2864  018C  1303               	bcf	3,6	;RP1=0, select bank0
  2865  018D  1708               	bsf	8,6	;volatile
  2866  018E                     l1260:	
  2867                           
  2868                           ;./LCD.h: 83:         PORTB = texto[i];
  2869  018E  0872               	movf	imprimir@i,w
  2870  018F  0774               	addwf	imprimir@texto,w
  2871  0190  0084               	movwf	4
  2872  0191  120A  118A  2003  120A  118A  	fcall	stringdir
  2873  0196  0086               	movwf	6	;volatile
  2874  0197                     l1262:	
  2875                           
  2876                           ;./LCD.h: 84:         PORTDbits.RD7 = 1;
  2877  0197  1788               	bsf	8,7	;volatile
  2878  0198                     l1264:	
  2879                           
  2880                           ;./LCD.h: 85:         _delay((unsigned long)((2)*(4000000/4000.0)));
  2881  0198  3003               	movlw	3
  2882  0199  00F1               	movwf	??_imprimir+1
  2883  019A  3097               	movlw	151
  2884  019B  00F0               	movwf	??_imprimir
  2885  019C                     u877:	
  2886  019C  0BF0               	decfsz	??_imprimir,f
  2887  019D  299C               	goto	u877
  2888  019E  0BF1               	decfsz	??_imprimir+1,f
  2889  019F  299C               	goto	u877
  2890  01A0  29A1               	nop2
  2891  01A1                     l1266:	
  2892                           
  2893                           ;./LCD.h: 86:         PORTDbits.RD7 = 0;
  2894  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  2895  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  2896  01A3  1388               	bcf	8,7	;volatile
  2897  01A4                     l1268:	
  2898                           
  2899                           ;./LCD.h: 87:     }
  2900  01A4  3001               	movlw	1
  2901  01A5  07F2               	addwf	imprimir@i,f
  2902  01A6  1803               	skipnc
  2903  01A7  0AF3               	incf	imprimir@i+1,f
  2904  01A8  3000               	movlw	0
  2905  01A9  07F3               	addwf	imprimir@i+1,f
  2906  01AA                     l83:	
  2907  01AA  0872               	movf	imprimir@i,w
  2908  01AB  0774               	addwf	imprimir@texto,w
  2909  01AC  0084               	movwf	4
  2910  01AD  120A  118A  2003  120A  118A  	fcall	stringdir
  2911  01B2  3A00               	xorlw	0
  2912  01B3  1D03               	skipz
  2913  01B4  29B6               	goto	u431
  2914  01B5  29B7               	goto	u430
  2915  01B6                     u431:	
  2916  01B6  298B               	goto	l84
  2917  01B7                     u430:	
  2918  01B7                     l86:	
  2919  01B7  0008               	return
  2920  01B8                     __end_of_imprimir:	
  2921                           
  2922                           	psect	text13
  2923  0135                     __ptext13:	
  2924 ;; *************** function _colocar *****************
  2925 ;; Defined at:
  2926 ;;		line 62 in file "./LCD.h"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;  x               1    wreg     const unsigned char 
  2929 ;;  y               1    3[COMMON] const unsigned char 
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;  x               1    5[COMMON] const unsigned char 
  2932 ;;  temp            1    6[COMMON] unsigned char 
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  1    wreg      void 
  2935 ;; Registers used:
  2936 ;;		wreg, status,2, status,0, pclath, cstack
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2942 ;;      Params:         1       0       0       0       0
  2943 ;;      Locals:         2       0       0       0       0
  2944 ;;      Temps:          1       0       0       0       0
  2945 ;;      Totals:         4       0       0       0       0
  2946 ;;Total ram usage:        4 bytes
  2947 ;; Hardware stack levels used:    1
  2948 ;; Hardware stack levels required when called:    1
  2949 ;; This function calls:
  2950 ;;		_comando
  2951 ;; This function is called by:
  2952 ;;		_humo
  2953 ;;		_ultrasonico
  2954 ;;		_luces
  2955 ;;		_celda
  2956 ;;		_main
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           
  2961                           ;psect for function _colocar
  2962  0135                     _colocar:	
  2963                           
  2964                           ;incstack = 0
  2965                           ; Regs used in _colocar: [wreg+status,2+status,0+pclath+cstack]
  2966                           ;colocar@x stored from wreg
  2967  0135  00F5               	movwf	colocar@x
  2968  0136                     l1246:	
  2969                           
  2970                           ;./LCD.h: 62: void colocar(const char x,const char y);./LCD.h: 63: {;./LCD.h: 64:     ch
      +                          ar temp;;./LCD.h: 66:     if (y == 1)
  2971  0136  0373               	decf	colocar@y,w
  2972  0137  1D03               	btfss	3,2
  2973  0138  293A               	goto	u411
  2974  0139  293B               	goto	u410
  2975  013A                     u411:	
  2976  013A  2947               	goto	l1252
  2977  013B                     u410:	
  2978  013B                     l1248:	
  2979                           
  2980                           ;./LCD.h: 67:     {;./LCD.h: 68:         temp = 0x80 + x - 1;
  2981  013B  0875               	movf	colocar@x,w
  2982  013C  3E7F               	addlw	127
  2983  013D  00F4               	movwf	??_colocar
  2984  013E  0874               	movf	??_colocar,w
  2985  013F  00F6               	movwf	colocar@temp
  2986  0140                     l1250:	
  2987                           
  2988                           ;./LCD.h: 69:         comando(temp);
  2989  0140  0876               	movf	colocar@temp,w
  2990  0141  120A  118A  210D  120A  118A  	fcall	_comando
  2991                           
  2992                           ;./LCD.h: 70:     }
  2993  0146  2958               	goto	l80
  2994  0147                     l1252:	
  2995  0147  3002               	movlw	2
  2996  0148  0673               	xorwf	colocar@y,w
  2997  0149  1D03               	btfss	3,2
  2998  014A  294C               	goto	u421
  2999  014B  294D               	goto	u420
  3000  014C                     u421:	
  3001  014C  2958               	goto	l80
  3002  014D                     u420:	
  3003  014D                     l1254:	
  3004                           
  3005                           ;./LCD.h: 72:     {;./LCD.h: 73:         temp = 0xC0 + x - 1;
  3006  014D  0875               	movf	colocar@x,w
  3007  014E  3EBF               	addlw	191
  3008  014F  00F4               	movwf	??_colocar
  3009  0150  0874               	movf	??_colocar,w
  3010  0151  00F6               	movwf	colocar@temp
  3011  0152                     l1256:	
  3012                           
  3013                           ;./LCD.h: 74:         comando(temp);
  3014  0152  0876               	movf	colocar@temp,w
  3015  0153  120A  118A  210D  120A  118A  	fcall	_comando
  3016  0158                     l80:	
  3017  0158  0008               	return
  3018  0159                     __end_of_colocar:	
  3019                           
  3020                           	psect	text14
  3021  00FA                     __ptext14:	
  3022 ;; *************** function _borrarv *****************
  3023 ;; Defined at:
  3024 ;;		line 54 in file "./LCD.h"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;		None
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;		None
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  1    wreg      void 
  3031 ;; Registers used:
  3032 ;;		wreg, status,2, status,0, pclath, cstack
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3038 ;;      Params:         0       0       0       0       0
  3039 ;;      Locals:         0       0       0       0       0
  3040 ;;      Temps:          0       0       0       0       0
  3041 ;;      Totals:         0       0       0       0       0
  3042 ;;Total ram usage:        0 bytes
  3043 ;; Hardware stack levels used:    1
  3044 ;; Hardware stack levels required when called:    1
  3045 ;; This function calls:
  3046 ;;		_comando
  3047 ;; This function is called by:
  3048 ;;		_main
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           
  3053                           ;psect for function _borrarv
  3054  00FA                     _borrarv:	
  3055  00FA                     l1448:	
  3056                           ;incstack = 0
  3057                           ; Regs used in _borrarv: [wreg+status,2+status,0+pclath+cstack]
  3058                           
  3059                           
  3060                           ;./LCD.h: 56:     comando(0);
  3061  00FA  3000               	movlw	0
  3062  00FB  120A  118A  210D  120A  118A  	fcall	_comando
  3063                           
  3064                           ;./LCD.h: 57:     comando(1);
  3065  0100  3001               	movlw	1
  3066  0101  120A  118A  210D  120A  118A  	fcall	_comando
  3067                           
  3068                           ;./LCD.h: 59:     comando(0x0C);
  3069  0106  300C               	movlw	12
  3070  0107  120A  118A  210D  120A  118A  	fcall	_comando
  3071  010C                     l74:	
  3072  010C  0008               	return
  3073  010D                     __end_of_borrarv:	
  3074                           
  3075                           	psect	text15
  3076  010D                     __ptext15:	
  3077 ;; *************** function _comando *****************
  3078 ;; Defined at:
  3079 ;;		line 16 in file "./LCD.h"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;  x               1    wreg     const unsigned char 
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;  x               1    2[COMMON] const unsigned char 
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      void 
  3086 ;; Registers used:
  3087 ;;		wreg
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3093 ;;      Params:         0       0       0       0       0
  3094 ;;      Locals:         1       0       0       0       0
  3095 ;;      Temps:          2       0       0       0       0
  3096 ;;      Totals:         3       0       0       0       0
  3097 ;;Total ram usage:        3 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; This function calls:
  3100 ;;		Nothing
  3101 ;; This function is called by:
  3102 ;;		_iniciarLCD
  3103 ;;		_borrarv
  3104 ;;		_colocar
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           
  3109                           ;psect for function _comando
  3110  010D                     _comando:	
  3111                           
  3112                           ;incstack = 0
  3113                           ; Regs used in _comando: [wreg]
  3114                           ;comando@x stored from wreg
  3115  010D  00F2               	movwf	comando@x
  3116  010E                     l1234:	
  3117                           
  3118                           ;./LCD.h: 16: void comando(const char x);./LCD.h: 17: {;./LCD.h: 18:     PORTDbits.RD6 =
      +                           0;
  3119  010E  1283               	bcf	3,5	;RP0=0, select bank0
  3120  010F  1303               	bcf	3,6	;RP1=0, select bank0
  3121  0110  1308               	bcf	8,6	;volatile
  3122  0111                     l1236:	
  3123                           
  3124                           ;./LCD.h: 19:     PORTB = x;
  3125  0111  0872               	movf	comando@x,w
  3126  0112  0086               	movwf	6	;volatile
  3127  0113                     l1238:	
  3128                           
  3129                           ;./LCD.h: 20:     PORTDbits.RD7 = 1;
  3130  0113  1788               	bsf	8,7	;volatile
  3131                           
  3132                           ;./LCD.h: 21:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3133  0114  3006               	movlw	6
  3134  0115  00F1               	movwf	??_comando+1
  3135  0116  3030               	movlw	48
  3136  0117  00F0               	movwf	??_comando
  3137  0118                     u887:	
  3138  0118  0BF0               	decfsz	??_comando,f
  3139  0119  2918               	goto	u887
  3140  011A  0BF1               	decfsz	??_comando+1,f
  3141  011B  2918               	goto	u887
  3142  011C  0000               	nop
  3143  011D                     l1240:	
  3144                           
  3145                           ;./LCD.h: 22:     PORTDbits.RD7 = 0;
  3146  011D  1283               	bcf	3,5	;RP0=0, select bank0
  3147  011E  1303               	bcf	3,6	;RP1=0, select bank0
  3148  011F  1388               	bcf	8,7	;volatile
  3149  0120                     l68:	
  3150  0120  0008               	return
  3151  0121                     __end_of_comando:	
  3152                           
  3153                           	psect	text16
  3154  00C0                     __ptext16:	
  3155 ;; *************** function _I2C_Master_Write *****************
  3156 ;; Defined at:
  3157 ;;		line 65 in file "./I2Cmaestro.h"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;  d               2    0[COMMON] unsigned int 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;		None
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		wreg, status,2, status,0, pclath, cstack
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3171 ;;      Params:         2       0       0       0       0
  3172 ;;      Locals:         0       0       0       0       0
  3173 ;;      Temps:          0       0       0       0       0
  3174 ;;      Totals:         2       0       0       0       0
  3175 ;;Total ram usage:        2 bytes
  3176 ;; Hardware stack levels used:    1
  3177 ;; Hardware stack levels required when called:    1
  3178 ;; This function calls:
  3179 ;;		_I2C_Master_Wait
  3180 ;; This function is called by:
  3181 ;;		_main
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           
  3186                           ;psect for function _I2C_Master_Write
  3187  00C0                     _I2C_Master_Write:	
  3188  00C0                     l1404:	
  3189                           ;incstack = 0
  3190                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3191                           
  3192                           
  3193                           ;./I2Cmaestro.h: 65: void I2C_Master_Write(unsigned d);./I2Cmaestro.h: 66: {;./I2Cmaestr
      +                          o.h: 67:     I2C_Master_Wait();
  3194  00C0  120A  118A  20CA  120A  118A  	fcall	_I2C_Master_Wait
  3195  00C5                     l1406:	
  3196                           
  3197                           ;./I2Cmaestro.h: 68:     SSPBUF = d;
  3198  00C5  0870               	movf	I2C_Master_Write@d,w
  3199  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  3200  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  3201  00C8  0093               	movwf	19	;volatile
  3202  00C9                     l60:	
  3203  00C9  0008               	return
  3204  00CA                     __end_of_I2C_Master_Write:	
  3205                           
  3206                           	psect	text17
  3207  00B7                     __ptext17:	
  3208 ;; *************** function _I2C_Master_Stop *****************
  3209 ;; Defined at:
  3210 ;;		line 55 in file "./I2Cmaestro.h"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;		None
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;		None
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  1    wreg      void 
  3217 ;; Registers used:
  3218 ;;		wreg, status,2, status,0, pclath, cstack
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3224 ;;      Params:         0       0       0       0       0
  3225 ;;      Locals:         0       0       0       0       0
  3226 ;;      Temps:          0       0       0       0       0
  3227 ;;      Totals:         0       0       0       0       0
  3228 ;;Total ram usage:        0 bytes
  3229 ;; Hardware stack levels used:    1
  3230 ;; Hardware stack levels required when called:    1
  3231 ;; This function calls:
  3232 ;;		_I2C_Master_Wait
  3233 ;; This function is called by:
  3234 ;;		_main
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           
  3239                           ;psect for function _I2C_Master_Stop
  3240  00B7                     _I2C_Master_Stop:	
  3241  00B7                     l1400:	
  3242                           ;incstack = 0
  3243                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3244                           
  3245                           
  3246                           ;./I2Cmaestro.h: 57:     I2C_Master_Wait();
  3247  00B7  120A  118A  20CA  120A  118A  	fcall	_I2C_Master_Wait
  3248  00BC                     l1402:	
  3249                           
  3250                           ;./I2Cmaestro.h: 58:     SSPCON2bits.PEN = 1;
  3251  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  3252  00BD  1303               	bcf	3,6	;RP1=0, select bank1
  3253  00BE  1511               	bsf	17,2	;volatile
  3254  00BF                     l57:	
  3255  00BF  0008               	return
  3256  00C0                     __end_of_I2C_Master_Stop:	
  3257                           
  3258                           	psect	text18
  3259  00AE                     __ptext18:	
  3260 ;; *************** function _I2C_Master_Start *****************
  3261 ;; Defined at:
  3262 ;;		line 39 in file "./I2Cmaestro.h"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;		None
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;		None
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  1    wreg      void 
  3269 ;; Registers used:
  3270 ;;		wreg, status,2, status,0, pclath, cstack
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3276 ;;      Params:         0       0       0       0       0
  3277 ;;      Locals:         0       0       0       0       0
  3278 ;;      Temps:          0       0       0       0       0
  3279 ;;      Totals:         0       0       0       0       0
  3280 ;;Total ram usage:        0 bytes
  3281 ;; Hardware stack levels used:    1
  3282 ;; Hardware stack levels required when called:    1
  3283 ;; This function calls:
  3284 ;;		_I2C_Master_Wait
  3285 ;; This function is called by:
  3286 ;;		_main
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           
  3291                           ;psect for function _I2C_Master_Start
  3292  00AE                     _I2C_Master_Start:	
  3293  00AE                     l1396:	
  3294                           ;incstack = 0
  3295                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3296                           
  3297                           
  3298                           ;./I2Cmaestro.h: 41:     I2C_Master_Wait();
  3299  00AE  120A  118A  20CA  120A  118A  	fcall	_I2C_Master_Wait
  3300  00B3                     l1398:	
  3301                           
  3302                           ;./I2Cmaestro.h: 42:     SSPCON2bits.SEN = 1;
  3303  00B3  1683               	bsf	3,5	;RP0=1, select bank1
  3304  00B4  1303               	bcf	3,6	;RP1=0, select bank1
  3305  00B5  1411               	bsf	17,0	;volatile
  3306  00B6                     l54:	
  3307  00B6  0008               	return
  3308  00B7                     __end_of_I2C_Master_Start:	
  3309                           
  3310                           	psect	text19
  3311  0159                     __ptext19:	
  3312 ;; *************** function _I2C_Master_Read *****************
  3313 ;; Defined at:
  3314 ;;		line 74 in file "./I2Cmaestro.h"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;  a               2    0[COMMON] unsigned short 
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;  temp            2    4[COMMON] unsigned short 
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  2    0[COMMON] unsigned short 
  3321 ;; Registers used:
  3322 ;;		wreg, status,2, status,0, pclath, cstack
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3328 ;;      Params:         2       0       0       0       0
  3329 ;;      Locals:         2       0       0       0       0
  3330 ;;      Temps:          2       0       0       0       0
  3331 ;;      Totals:         6       0       0       0       0
  3332 ;;Total ram usage:        6 bytes
  3333 ;; Hardware stack levels used:    1
  3334 ;; Hardware stack levels required when called:    1
  3335 ;; This function calls:
  3336 ;;		_I2C_Master_Wait
  3337 ;; This function is called by:
  3338 ;;		_main
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           
  3343                           ;psect for function _I2C_Master_Read
  3344  0159                     _I2C_Master_Read:	
  3345  0159                     l1408:	
  3346                           ;incstack = 0
  3347                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3348                           
  3349                           
  3350                           ;./I2Cmaestro.h: 74: unsigned short I2C_Master_Read(unsigned short a);./I2Cmaestro.h: 75
      +                          : {;./I2Cmaestro.h: 76:     unsigned short temp;;./I2Cmaestro.h: 77:     I2C_Master_Wait
      +                          ();
  3351  0159  120A  118A  20CA  120A  118A  	fcall	_I2C_Master_Wait
  3352  015E                     l1410:	
  3353                           
  3354                           ;./I2Cmaestro.h: 78:     SSPCON2bits.RCEN = 1;
  3355  015E  1683               	bsf	3,5	;RP0=1, select bank1
  3356  015F  1303               	bcf	3,6	;RP1=0, select bank1
  3357  0160  1591               	bsf	17,3	;volatile
  3358                           
  3359                           ;./I2Cmaestro.h: 79:     I2C_Master_Wait();
  3360  0161  120A  118A  20CA  120A  118A  	fcall	_I2C_Master_Wait
  3361  0166                     l1412:	
  3362                           
  3363                           ;./I2Cmaestro.h: 80:     temp = SSPBUF;
  3364  0166  1283               	bcf	3,5	;RP0=0, select bank0
  3365  0167  1303               	bcf	3,6	;RP1=0, select bank0
  3366  0168  0813               	movf	19,w	;volatile
  3367  0169  00F2               	movwf	??_I2C_Master_Read
  3368  016A  01F3               	clrf	??_I2C_Master_Read+1
  3369  016B  0872               	movf	??_I2C_Master_Read,w
  3370  016C  00F4               	movwf	I2C_Master_Read@temp
  3371  016D  0873               	movf	??_I2C_Master_Read+1,w
  3372  016E  00F5               	movwf	I2C_Master_Read@temp+1
  3373  016F                     l1414:	
  3374                           
  3375                           ;./I2Cmaestro.h: 81:     I2C_Master_Wait();
  3376  016F  120A  118A  20CA  120A  118A  	fcall	_I2C_Master_Wait
  3377  0174                     l1416:	
  3378                           
  3379                           ;./I2Cmaestro.h: 82:     if(a == 1){
  3380  0174  0370               	decf	I2C_Master_Read@a,w
  3381  0175  0471               	iorwf	I2C_Master_Read@a+1,w
  3382  0176  1D03               	btfss	3,2
  3383  0177  2979               	goto	u711
  3384  0178  297A               	goto	u710
  3385  0179                     u711:	
  3386  0179  297E               	goto	l63
  3387  017A                     u710:	
  3388  017A                     l1418:	
  3389                           
  3390                           ;./I2Cmaestro.h: 83:         SSPCON2bits.ACKDT = 0;
  3391  017A  1683               	bsf	3,5	;RP0=1, select bank1
  3392  017B  1303               	bcf	3,6	;RP1=0, select bank1
  3393  017C  1291               	bcf	17,5	;volatile
  3394                           
  3395                           ;./I2Cmaestro.h: 84:     }else{
  3396  017D  2981               	goto	l64
  3397  017E                     l63:	
  3398                           
  3399                           ;./I2Cmaestro.h: 85:         SSPCON2bits.ACKDT = 1;
  3400  017E  1683               	bsf	3,5	;RP0=1, select bank1
  3401  017F  1303               	bcf	3,6	;RP1=0, select bank1
  3402  0180  1691               	bsf	17,5	;volatile
  3403  0181                     l64:	
  3404                           ;./I2Cmaestro.h: 86:     }
  3405                           
  3406                           
  3407                           ;./I2Cmaestro.h: 87:     SSPCON2bits.ACKEN = 1;
  3408  0181  1611               	bsf	17,4	;volatile
  3409  0182                     l1420:	
  3410                           
  3411                           ;./I2Cmaestro.h: 88:     return temp;
  3412  0182  0875               	movf	I2C_Master_Read@temp+1,w
  3413  0183  00F1               	movwf	?_I2C_Master_Read+1
  3414  0184  0874               	movf	I2C_Master_Read@temp,w
  3415  0185  00F0               	movwf	?_I2C_Master_Read
  3416  0186                     l65:	
  3417  0186  0008               	return
  3418  0187                     __end_of_I2C_Master_Read:	
  3419                           
  3420                           	psect	text20
  3421  00CA                     __ptext20:	
  3422 ;; *************** function _I2C_Master_Wait *****************
  3423 ;; Defined at:
  3424 ;;		line 32 in file "./I2Cmaestro.h"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;		None
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;		None
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  1    wreg      void 
  3431 ;; Registers used:
  3432 ;;		wreg, status,2
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3438 ;;      Params:         0       0       0       0       0
  3439 ;;      Locals:         0       0       0       0       0
  3440 ;;      Temps:          0       0       0       0       0
  3441 ;;      Totals:         0       0       0       0       0
  3442 ;;Total ram usage:        0 bytes
  3443 ;; Hardware stack levels used:    1
  3444 ;; This function calls:
  3445 ;;		Nothing
  3446 ;; This function is called by:
  3447 ;;		_I2C_Master_Start
  3448 ;;		_I2C_Master_Stop
  3449 ;;		_I2C_Master_Write
  3450 ;;		_I2C_Master_Read
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           
  3455                           ;psect for function _I2C_Master_Wait
  3456  00CA                     _I2C_Master_Wait:	
  3457  00CA                     l1242:	
  3458                           ;incstack = 0
  3459                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3460                           
  3461  00CA                     l48:	
  3462                           ;./I2Cmaestro.h: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3463                           
  3464  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  3465  00CB  1303               	bcf	3,6	;RP1=0, select bank1
  3466  00CC  1914               	btfsc	20,2	;volatile
  3467  00CD  28CF               	goto	u391
  3468  00CE  28D0               	goto	u390
  3469  00CF                     u391:	
  3470  00CF  28CA               	goto	l48
  3471  00D0                     u390:	
  3472  00D0                     l1244:	
  3473  00D0  0811               	movf	17,w	;volatile
  3474  00D1  391F               	andlw	31
  3475  00D2  1D03               	btfss	3,2
  3476  00D3  28D5               	goto	u401
  3477  00D4  28D6               	goto	u400
  3478  00D5                     u401:	
  3479  00D5  28CA               	goto	l48
  3480  00D6                     u400:	
  3481  00D6                     l51:	
  3482  00D6  0008               	return
  3483  00D7                     __end_of_I2C_Master_Wait:	
  3484                           
  3485                           	psect	text21
  3486  01B8                     __ptext21:	
  3487 ;; *************** function _I2C_Master_Init *****************
  3488 ;; Defined at:
  3489 ;;		line 16 in file "./I2Cmaestro.h"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;  c               4    0[BANK0 ] const unsigned long 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;		None
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  1    wreg      void 
  3496 ;; Registers used:
  3497 ;;		wreg, status,2, status,0, pclath, cstack
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3503 ;;      Params:         0       4       0       0       0
  3504 ;;      Locals:         0       0       0       0       0
  3505 ;;      Temps:          0       4       0       0       0
  3506 ;;      Totals:         0       8       0       0       0
  3507 ;;Total ram usage:        8 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    1
  3510 ;; This function calls:
  3511 ;;		___lldiv
  3512 ;; This function is called by:
  3513 ;;		_main
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           
  3518                           ;psect for function _I2C_Master_Init
  3519  01B8                     _I2C_Master_Init:	
  3520  01B8                     l1384:	
  3521                           ;incstack = 0
  3522                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3523                           
  3524                           
  3525                           ;./I2Cmaestro.h: 16: void I2C_Master_Init(const unsigned long c);./I2Cmaestro.h: 17: {;.
      +                          /I2Cmaestro.h: 18:     SSPCON = 0b00101000;
  3526  01B8  3028               	movlw	40
  3527  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  3528  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  3529  01BB  0094               	movwf	20	;volatile
  3530  01BC                     l1386:	
  3531                           
  3532                           ;./I2Cmaestro.h: 19:     SSPCON2 = 0;
  3533  01BC  1683               	bsf	3,5	;RP0=1, select bank1
  3534  01BD  1303               	bcf	3,6	;RP1=0, select bank1
  3535  01BE  0191               	clrf	17	;volatile
  3536  01BF                     l1388:	
  3537                           
  3538                           ;./I2Cmaestro.h: 20:     SSPADD = (4000000/(4*c))-1;
  3539  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  3540  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  3541  01C1  0838               	movf	I2C_Master_Init@c,w
  3542  01C2  00BC               	movwf	??_I2C_Master_Init
  3543  01C3  0839               	movf	I2C_Master_Init@c+1,w
  3544  01C4  00BD               	movwf	??_I2C_Master_Init+1
  3545  01C5  083A               	movf	I2C_Master_Init@c+2,w
  3546  01C6  00BE               	movwf	??_I2C_Master_Init+2
  3547  01C7  083B               	movf	I2C_Master_Init@c+3,w
  3548  01C8  00BF               	movwf	??_I2C_Master_Init+3
  3549  01C9  3002               	movlw	2
  3550  01CA                     u705:	
  3551  01CA  1003               	clrc
  3552  01CB  0DBC               	rlf	??_I2C_Master_Init,f
  3553  01CC  0DBD               	rlf	??_I2C_Master_Init+1,f
  3554  01CD  0DBE               	rlf	??_I2C_Master_Init+2,f
  3555  01CE  0DBF               	rlf	??_I2C_Master_Init+3,f
  3556  01CF                     u700:	
  3557  01CF  3EFF               	addlw	-1
  3558  01D0  1D03               	skipz
  3559  01D1  29CA               	goto	u705
  3560  01D2  083F               	movf	??_I2C_Master_Init+3,w
  3561  01D3  00F3               	movwf	___lldiv@divisor+3
  3562  01D4  083E               	movf	??_I2C_Master_Init+2,w
  3563  01D5  00F2               	movwf	___lldiv@divisor+2
  3564  01D6  083D               	movf	??_I2C_Master_Init+1,w
  3565  01D7  00F1               	movwf	___lldiv@divisor+1
  3566  01D8  083C               	movf	??_I2C_Master_Init,w
  3567  01D9  00F0               	movwf	___lldiv@divisor
  3568  01DA  3000               	movlw	0
  3569  01DB  00F7               	movwf	___lldiv@dividend+3
  3570  01DC  303D               	movlw	61
  3571  01DD  00F6               	movwf	___lldiv@dividend+2
  3572  01DE  3009               	movlw	9
  3573  01DF  00F5               	movwf	___lldiv@dividend+1
  3574  01E0  3000               	movlw	0
  3575  01E1  00F4               	movwf	___lldiv@dividend
  3576  01E2  120A  118A  2353  120A  118A  	fcall	___lldiv
  3577  01E7  0870               	movf	?___lldiv,w
  3578  01E8  3EFF               	addlw	255
  3579  01E9  1683               	bsf	3,5	;RP0=1, select bank1
  3580  01EA  1303               	bcf	3,6	;RP1=0, select bank1
  3581  01EB  0093               	movwf	19	;volatile
  3582  01EC                     l1390:	
  3583                           
  3584                           ;./I2Cmaestro.h: 21:     SSPSTAT = 0;
  3585  01EC  0194               	clrf	20	;volatile
  3586  01ED                     l1392:	
  3587                           
  3588                           ;./I2Cmaestro.h: 22:     TRISCbits.TRISC3 = 1;
  3589  01ED  1587               	bsf	7,3	;volatile
  3590  01EE                     l1394:	
  3591                           
  3592                           ;./I2Cmaestro.h: 23:     TRISCbits.TRISC4 = 1;
  3593  01EE  1607               	bsf	7,4	;volatile
  3594  01EF                     l45:	
  3595  01EF  0008               	return
  3596  01F0                     __end_of_I2C_Master_Init:	
  3597                           
  3598                           	psect	text22
  3599  0353                     __ptext22:	
  3600 ;; *************** function ___lldiv *****************
  3601 ;; Defined at:
  3602 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  divisor         4    0[COMMON] unsigned long 
  3605 ;;  dividend        4    4[COMMON] unsigned long 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  quotient        4    9[COMMON] unsigned long 
  3608 ;;  counter         1   13[COMMON] unsigned char 
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  4    0[COMMON] unsigned long 
  3611 ;; Registers used:
  3612 ;;		wreg, status,2, status,0
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3618 ;;      Params:         8       0       0       0       0
  3619 ;;      Locals:         5       0       0       0       0
  3620 ;;      Temps:          1       0       0       0       0
  3621 ;;      Totals:        14       0       0       0       0
  3622 ;;Total ram usage:       14 bytes
  3623 ;; Hardware stack levels used:    1
  3624 ;; This function calls:
  3625 ;;		Nothing
  3626 ;; This function is called by:
  3627 ;;		_I2C_Master_Init
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           
  3632                           ;psect for function ___lldiv
  3633  0353                     ___lldiv:	
  3634  0353                     l1278:	
  3635                           ;incstack = 0
  3636                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3637                           
  3638  0353  3000               	movlw	0
  3639  0354  00FC               	movwf	___lldiv@quotient+3
  3640  0355  3000               	movlw	0
  3641  0356  00FB               	movwf	___lldiv@quotient+2
  3642  0357  3000               	movlw	0
  3643  0358  00FA               	movwf	___lldiv@quotient+1
  3644  0359  3000               	movlw	0
  3645  035A  00F9               	movwf	___lldiv@quotient
  3646  035B  0873               	movf	___lldiv@divisor+3,w
  3647  035C  0472               	iorwf	___lldiv@divisor+2,w
  3648  035D  0471               	iorwf	___lldiv@divisor+1,w
  3649  035E  0470               	iorwf	___lldiv@divisor,w
  3650  035F  1903               	skipnz
  3651  0360  2B62               	goto	u441
  3652  0361  2B63               	goto	u440
  3653  0362                     u441:	
  3654  0362  2BB0               	goto	l1298
  3655  0363                     u440:	
  3656  0363                     l1280:	
  3657  0363  01FD               	clrf	___lldiv@counter
  3658  0364  0AFD               	incf	___lldiv@counter,f
  3659  0365  2B73               	goto	l1284
  3660  0366                     l1282:	
  3661  0366  3001               	movlw	1
  3662  0367  00F8               	movwf	??___lldiv
  3663  0368                     u455:	
  3664  0368  1003               	clrc
  3665  0369  0DF0               	rlf	___lldiv@divisor,f
  3666  036A  0DF1               	rlf	___lldiv@divisor+1,f
  3667  036B  0DF2               	rlf	___lldiv@divisor+2,f
  3668  036C  0DF3               	rlf	___lldiv@divisor+3,f
  3669  036D  0BF8               	decfsz	??___lldiv,f
  3670  036E  2B68               	goto	u455
  3671  036F  3001               	movlw	1
  3672  0370  00F8               	movwf	??___lldiv
  3673  0371  0878               	movf	??___lldiv,w
  3674  0372  07FD               	addwf	___lldiv@counter,f
  3675  0373                     l1284:	
  3676  0373  1FF3               	btfss	___lldiv@divisor+3,7
  3677  0374  2B76               	goto	u461
  3678  0375  2B77               	goto	u460
  3679  0376                     u461:	
  3680  0376  2B66               	goto	l1282
  3681  0377                     u460:	
  3682  0377                     l1286:	
  3683  0377  3001               	movlw	1
  3684  0378  00F8               	movwf	??___lldiv
  3685  0379                     u475:	
  3686  0379  1003               	clrc
  3687  037A  0DF9               	rlf	___lldiv@quotient,f
  3688  037B  0DFA               	rlf	___lldiv@quotient+1,f
  3689  037C  0DFB               	rlf	___lldiv@quotient+2,f
  3690  037D  0DFC               	rlf	___lldiv@quotient+3,f
  3691  037E  0BF8               	decfsz	??___lldiv,f
  3692  037F  2B79               	goto	u475
  3693  0380                     l1288:	
  3694  0380  0873               	movf	___lldiv@divisor+3,w
  3695  0381  0277               	subwf	___lldiv@dividend+3,w
  3696  0382  1D03               	skipz
  3697  0383  2B8E               	goto	u485
  3698  0384  0872               	movf	___lldiv@divisor+2,w
  3699  0385  0276               	subwf	___lldiv@dividend+2,w
  3700  0386  1D03               	skipz
  3701  0387  2B8E               	goto	u485
  3702  0388  0871               	movf	___lldiv@divisor+1,w
  3703  0389  0275               	subwf	___lldiv@dividend+1,w
  3704  038A  1D03               	skipz
  3705  038B  2B8E               	goto	u485
  3706  038C  0870               	movf	___lldiv@divisor,w
  3707  038D  0274               	subwf	___lldiv@dividend,w
  3708  038E                     u485:	
  3709  038E  1C03               	skipc
  3710  038F  2B91               	goto	u481
  3711  0390  2B92               	goto	u480
  3712  0391                     u481:	
  3713  0391  2BA1               	goto	l1294
  3714  0392                     u480:	
  3715  0392                     l1290:	
  3716  0392  0870               	movf	___lldiv@divisor,w
  3717  0393  02F4               	subwf	___lldiv@dividend,f
  3718  0394  0871               	movf	___lldiv@divisor+1,w
  3719  0395  1C03               	skipc
  3720  0396  0F71               	incfsz	___lldiv@divisor+1,w
  3721  0397  02F5               	subwf	___lldiv@dividend+1,f
  3722  0398  0872               	movf	___lldiv@divisor+2,w
  3723  0399  1C03               	skipc
  3724  039A  0F72               	incfsz	___lldiv@divisor+2,w
  3725  039B  02F6               	subwf	___lldiv@dividend+2,f
  3726  039C  0873               	movf	___lldiv@divisor+3,w
  3727  039D  1C03               	skipc
  3728  039E  0F73               	incfsz	___lldiv@divisor+3,w
  3729  039F  02F7               	subwf	___lldiv@dividend+3,f
  3730  03A0                     l1292:	
  3731  03A0  1479               	bsf	___lldiv@quotient,0
  3732  03A1                     l1294:	
  3733  03A1  3001               	movlw	1
  3734  03A2                     u495:	
  3735  03A2  1003               	clrc
  3736  03A3  0CF3               	rrf	___lldiv@divisor+3,f
  3737  03A4  0CF2               	rrf	___lldiv@divisor+2,f
  3738  03A5  0CF1               	rrf	___lldiv@divisor+1,f
  3739  03A6  0CF0               	rrf	___lldiv@divisor,f
  3740  03A7  3EFF               	addlw	-1
  3741  03A8  1D03               	skipz
  3742  03A9  2BA2               	goto	u495
  3743  03AA                     l1296:	
  3744  03AA  3001               	movlw	1
  3745  03AB  02FD               	subwf	___lldiv@counter,f
  3746  03AC  1D03               	btfss	3,2
  3747  03AD  2BAF               	goto	u501
  3748  03AE  2BB0               	goto	u500
  3749  03AF                     u501:	
  3750  03AF  2B77               	goto	l1286
  3751  03B0                     u500:	
  3752  03B0                     l1298:	
  3753  03B0  087C               	movf	___lldiv@quotient+3,w
  3754  03B1  00F3               	movwf	?___lldiv+3
  3755  03B2  087B               	movf	___lldiv@quotient+2,w
  3756  03B3  00F2               	movwf	?___lldiv+2
  3757  03B4  087A               	movf	___lldiv@quotient+1,w
  3758  03B5  00F1               	movwf	?___lldiv+1
  3759  03B6  0879               	movf	___lldiv@quotient,w
  3760  03B7  00F0               	movwf	?___lldiv
  3761  03B8                     l290:	
  3762  03B8  0008               	return
  3763  03B9                     __end_of___lldiv:	
  3764  007E                     btemp	set	126	;btemp
  3765  007E                     wtemp0	set	126


Data Sizes:
    Strings     59
    Constant    10
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    imprimir@texto	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[2]), STR_19(CODE[6]), 
		 -> STR_18(CODE[2]), STR_17(CODE[5]), STR_16(CODE[6]), STR_15(CODE[3]), 
		 -> STR_14(CODE[3]), STR_13(CODE[5]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[4]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), STR_5(CODE[4]), STR_4(CODE[7]), STR_3(CODE[7]), 
		 -> STR_2(CODE[7]), STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _ultrasonico->___awdiv
    _luces->___awdiv
    _iniciarLCD->_comando
    _humo->___awdiv
    _celda->_colocar
    _colocar->_comando
    _borrarv->_comando
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   24229
                                              8 BANK0      2     2      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _borrarv
                              _celda
                            _colocar
                               _humo
                           _imprimir
                         _iniciarLCD
                         _iniciarOSC
                              _luces
                            _mostrar
                              _setup
                              _shift
                        _ultrasonico
 ---------------------------------------------------------------------------------
 (1) _ultrasonico                                          2     2      0    5466
                                              9 COMMON     2     2      0
                            ___awdiv
                            ___awmod
                            _colocar
                           _imprimir
                            _mostrar
 ---------------------------------------------------------------------------------
 (1) _shift                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _luces                                                2     2      0    5466
                                              9 COMMON     2     2      0
                            ___awdiv
                            ___awmod
                            _colocar
                           _imprimir
                            _mostrar
 ---------------------------------------------------------------------------------
 (1) _iniciarOSC                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _iniciarLCD                                           2     2      0      22
                                              3 COMMON     2     2      0
                            _comando
 ---------------------------------------------------------------------------------
 (1) _humo                                                 2     2      0    5466
                                              9 COMMON     2     2      0
                            ___awdiv
                            ___awmod
                            _colocar
                           _imprimir
                            _mostrar
 ---------------------------------------------------------------------------------
 (2) _mostrar                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1056
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1060
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _celda                                                1     1      0    3328
                                              7 COMMON     1     1      0
                            _colocar
                           _imprimir
 ---------------------------------------------------------------------------------
 (3) _imprimir                                             5     5      0     816
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _colocar                                              4     3      1    2512
                                              3 COMMON     4     3      1
                            _comando
 ---------------------------------------------------------------------------------
 (1) _borrarv                                              0     0      0      22
                            _comando
 ---------------------------------------------------------------------------------
 (3) _comando                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     326
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     349
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _borrarv
     _comando
   _celda
     _colocar
       _comando
     _imprimir
   _colocar
     _comando
   _humo
     ___awdiv
     ___awmod
     _colocar
       _comando
     _imprimir
     _mostrar
   _imprimir
   _iniciarLCD
     _comando
   _iniciarOSC
   _luces
     ___awdiv
     ___awmod
     _colocar
       _comando
     _imprimir
     _mostrar
   _mostrar
   _setup
   _shift
   _ultrasonico
     ___awdiv
     ___awmod
     _colocar
       _comando
     _imprimir
     _mostrar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      30       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A      22       5       42.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      30      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Apr 08 15:20:16 2020

                        _a 0009                          _w 0026                          _y 0032  
                        _z 002A                          pc 0002                __CFG_CP$OFF 0000  
                       l51 00D6                         l60 00C9                         l45 01EF  
                       l54 00B6                         l63 017E                         l71 0243  
                       l48 00CA                         l64 0181                         l80 0158  
                       l65 0186                         l57 00BF                         l74 010C  
                       l83 01AA                         l68 0120                         l84 018B  
                       l92 00E7                         l86 01B7                         l89 0134  
                       l97 0351               ___awdiv@sign 0076                         _w1 0024  
                       _w2 0022                         _w3 0020                         _y1 0030  
                       _y2 002E                         _y3 002C                         _z1 0028  
                       fsr 0004                        l106 0352                        l141 0574  
                      l151 065F                        l160 00F9                        l146 04AB  
                      l420 02F1                        l157 0298                        l407 041F  
                      l290 03B8                        u400 00D6                        u401 00D5  
                      u410 013B                        u411 013A                        u500 03B0  
                      u420 014D                        u501 03AF                        u421 014C  
                      u430 01B7                        u510 03BE                        u431 01B6  
                      u511 03BD                        u440 0363                        u600 0416  
                      u520 03C9                        u441 0362                        u601 0415  
                      u521 03C8                        u530 03DA                        u610 029E  
             __CFG_CPD$OFF 0000                        u531 03D9                        u611 029D  
                      u460 0377                        u700 01CF                        u620 02A9  
                      u461 0376                        u621 02A8                        u390 00D0  
                      u710 017A                        u550 03EC                        u630 02B4  
                      u455 0368                        u391 00CF                        u711 0179  
                      u551 03EB                        u631 02B3                        u480 0392  
                      u720 054D                        u481 0391                        u705 01CA  
                      u545 03DE                        u721 054C                        u570 03FD  
                      u650 02C6                        u730 0484                        u475 0379  
                      u571 03FC                        u651 02C5                        u731 0483  
                      u660 02D0                        u740 061C                        u485 038E  
                      u565 03ED                        u661 02CF                        u645 02B8  
                      u741 061B                        u750 024B                        u590 0411  
                      u495 03A2                        u751 024A                        u591 0410  
                      u575 03F9                        u807 07D2                        u760 0275  
                      u680 02E3                        u761 0274                        u585 0405  
                      u681 02E2                        u665 02CC                        u817 00DF  
                      u690 02E8                        u691 02E7                        u675 02D7  
                      u827 01FD                        u837 020C                        u847 0219  
                      u857 0223                        u777 0751                        u867 012C  
                      u787 077C                        u877 019C                        u797 07A7  
                      u887 0118                        _Luz 0037                        fsr0 0004  
                      indf 0000               ___awmod@sign 0076                colocar@temp 0076  
             __CFG_LVP$OFF 0000                       l1310 03C5                       l1302 03B9  
                     l1400 00B7                       l1240 011D                       l1320 03DA  
                     l1312 03C9                       l1304 03BA                       l1242 00CA  
                     l1410 015E                       l1402 00BC                       l1234 010E  
                     l1250 0140                       l1330 03FD                       l1322 03DD  
                     l1314 03CE                       l1306 03BE                       l1244 00D0  
                     l1420 0182                       l1412 0166                       l1404 00C0  
                     l1236 0111                       l1252 0147                       l1260 018E  
                     l1340 0416                       l1332 0403                       l1324 03E4  
                     l1316 03D2                       l1308 03C3                       l1500 0557  
                     l1414 016F                       l1406 00C5                       l1238 0113  
                     l1254 014D                       l1246 0136                       l1262 0197  
                     l1342 041B                       l1334 0404                       l1326 03E8  
                     l1318 03D4                       l1350 029E                       l1270 0122  
                     l1502 055D                       l1430 0202                       l1510 0420  
                     l1280 0363                       l1416 0174                       l1408 0159  
                     l1256 0152                       l1248 013B                       l1264 0198  
                     l1336 040B                       l1328 03EC                       l1360 02B4  
                     l1352 02A3                       l1272 0125                       l1504 0561  
                     l1440 022B                       l1432 0211                       l1424 01F0  
                     l1520 048E                       l1512 0456                       l1600 069A  
                     l1290 0392                       l1282 0366                       l1418 017A  
                     l1266 01A1                       l1258 0188                       l1338 0411  
                     l1370 02D0                       l1362 02B7                       l1354 02A5  
                     l1346 0299                       l1274 0127                       l1506 056B  
                     l1442 0231                       l1434 0217                       l1426 01F3  
                     l1530 0575                       l1450 00D7                       l1522 0494  
                     l1514 0465                       l1610 06BC                       l1602 06A0  
                     l1292 03A0                       l1284 0373                       l1268 01A4  
                     l1380 02ED                       l1372 02D6                       l1364 02BE  
                     l1356 02A9                       l1348 029A                       l1276 0131  
                     l1508 0571                       l1444 0237                       l1436 0221  
                     l1428 01F9                       l1460 02F4                       l1540 0614  
                     l1532 05D3                       l1452 00DA                       l1524 0498  
                     l1516 047C                       l1620 06E8                       l1612 06C4  
                     l1604 06A8                       l1294 03A1                       l1286 0377  
                     l1278 0353                       l1390 01EC                       l1374 02DD  
                     l1366 02C2                       l1358 02AE                       l1446 023D  
                     l1438 0225                       l1470 0315                       l1462 02F9  
                     l1542 061C                       l1550 063E                       l1534 05E2  
                     l1454 00DC                       l1526 04A2                       l1518 0484  
                     l1630 070E                       l1622 06EE                       l1614 06CA  
                     l1606 06AE                       l1296 03AA                       l1288 0380  
                     l1392 01ED                       l1384 01B8                       l1448 00FA  
                     l1560 024B                       l1368 02C6                       l1376 02E3  
                     l1472 031C                       l1464 0300                       l1480 032F  
                     l1552 0646                       l1544 0626                       l1536 05FB  
                     l1456 00E4                       l1528 04A8                       l1640 072F  
                     l1632 0716                       l1624 06F6                       l1616 06D6  
                     l1608 06B6                       l1298 03B0                       l1394 01EE  
                     l1386 01BC                       l1570 0275                       l1562 0255  
                     l1378 02E8                       l1490 0517                       l1474 0323  
                     l1466 0307                       l1458 02F3                       l1554 064C  
                     l1546 062C                       l1538 0605                       l1650 075A  
                     l1642 0738                       l1634 071C                       l1626 06FC  
                     l1618 06DC                       l1388 01BF                       l1396 00AE  
                     l1572 027F                       l1564 025B                       l1492 052E  
                     l1708 0337                       l1476 0328                       l1468 030E  
                     l1556 065C                       l1548 063A                       l1580 00F1  
                     l1660 0785                       l1652 0763                       l1644 0746  
                     l1636 0724                       l1628 0708                       l1398 00B3  
                     l1574 0285                       l1566 025E                       l1558 0244  
                     l1494 0536                       l1486 04AC                       l1582 00F2  
                     l1670 07B0                       l1662 078E                       l1654 0771  
                     l1646 074B                       l1638 072A                       l1590 0670  
                     l1576 0288                       l1568 026F                       l1496 0545  
                     l1488 0508                       l1680 07DB                       l1672 07B9  
                     l1664 079C                       l1656 0776                       l1648 0755  
                     l1592 0675                       l1584 0660                       l1498 054D  
                     l1578 00E8                       l1682 07E0                       l1674 07C7  
                     l1666 07A1                       l1658 0780                       l1594 0684  
                     l1586 0666                       l1684 07E5                       l1676 07CC  
                     l1668 07AB                       l1596 068C                       l1588 066B  
                     l1686 07EA                       l1678 07D6                       l1598 0692  
                     STR_1 001A                       STR_2 0013                       STR_3 001A  
                     STR_4 0013                       STR_5 0016                       STR_6 0041  
                     STR_7 0017                       STR_8 0037                       STR_9 0018  
                     _Humo 0034               __CFG_WRT$OFF 0000                       _main 0660  
                     _humo 04AC                       btemp 007E                       start 0000  
            __CFG_IESO$OFF 0000                _ultrasonico 0420           ?_I2C_Master_Init 0038  
         ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070            __end_of___awdiv 0420                      ?_humo 0070  
                    STR_10 004C                      STR_11 0018                      STR_20 003C  
                    STR_12 004A                      STR_21 0044                      STR_13 0032  
                    STR_22 003E                      STR_14 003B                      STR_15 0047  
                    STR_16 0027                      STR_17 002D              __CFG_WDTE$OFF 0000  
                    STR_18 003F                      STR_19 0021            __end_of___awmod 02F2  
                    _ANSEL 0188            __end_of___lldiv 03B9            ___awdiv@divisor 0070  
          ___awdiv@counter 0075                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087             __CFG_FCMEN$OFF 0000  
          __end_of_comando 0121            __end_of_colocar 0159            __end_of_borrarv 010D  
                    _celda 0244              imprimir@texto 0074                      _luces 0575  
                    _shift 00D7                      _setup 00E8             __CFG_BOREN$OFF 0000  
                    pclath 000A            __end_of_mostrar 0135                      status 0003  
                    wtemp0 007E             __CFG_MCLRE$OFF 0000            __initialization 07F3  
             __end_of_main 07F3               __end_of_humo 0575                     ??_main 0040  
                   ??_humo 0079          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070  
                   ?_celda 0070         ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072  
                   ?_luces 0070           ___awdiv@dividend 0072                     ?_shift 0070  
                   ?_setup 0070                     _ANSELH 0189                     _SSPADD 0093  
                   _SSPCON 0014                     _SSPBUF 0013             __CFG_PWRTE$OFF 0000  
                ??___awdiv 0074                  ??___awmod 0074                  ??___lldiv 0078  
           iniciarOSC@frec 0072                     _grados 0036           ___awdiv@quotient 0077  
          ___awmod@divisor 0070           __end_of_imprimir 01B8            ___awmod@counter 0075  
                ??_comando 0070                  ??_colocar 0074                  ??_borrarv 0073  
                ??_mostrar 0070    __end_of__initialization 07FC             __pcstackCOMMON 0070  
            __end_of_celda 0299              __end_of_luces 0660              __end_of_shift 00E8  
            __end_of_setup 00FA                    ??_celda 0077                    ??_luces 0079  
                  ??_shift 0070                    ??_setup 0070                 __pbssBANK0 0020  
             ?_ultrasonico 0070                 __pmaintext 0660                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 0003                  ?_imprimir 0070  
               _iniciarLCD 01F0                 _iniciarOSC 02F2                    ___awdiv 03B9  
                  ___awmod 0299                    ___lldiv 0353                    __ptext1 0420  
                  __ptext2 00D7                    __ptext3 00E8                    __ptext4 0575  
                  __ptext5 02F2                    __ptext6 01F0                    __ptext7 04AC  
                  __ptext8 0121                    __ptext9 0299                    _comando 010D  
                  _colocar 0135                    _borrarv 00FA           ___awmod@dividend 0072  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009                    _mostrar 0121                    clrloop0 00A7  
     end_of_initialization 07FC                 ??_imprimir 0070  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070            ___lldiv@counter 007D  
         I2C_Master_Init@c 0038           I2C_Master_Read@a 0070                  _PORTAbits 0005  
                _PORTDbits 0008                  _TRISCbits 0087                  _TRISDbits 0088  
              ?_iniciarLCD 0070                ?_iniciarOSC 0070       __size_of_ultrasonico 008C  
                _Distancia 0035        start_initialization 07F3          ??_I2C_Master_Init 003C  
        ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070  
 __CFG_FOSC$INTRC_NOCLKOUT 0000                  ___latbits 0002              __pcstackBANK0 0038  
      __size_of_iniciarLCD 0054        __size_of_iniciarOSC 0061                  __end_of_a 0013  
         _I2C_Master_Start 00AE           _I2C_Master_Write 00C0          __size_of_imprimir 0031  
                 ?___awdiv 0070                   ?___awmod 0070                   ?___lldiv 0070  
                __pstrings 0003                   ?_comando 0070                   ?_colocar 0073  
                 ?_borrarv 0070                   ?_mostrar 0070             __size_of_celda 0055  
           __size_of_luces 00EB             __size_of_shift 0011             __size_of_setup 0012  
                clear_ram0 00A6                __stringbase 0008        I2C_Master_Read@temp 0074  
             ??_iniciarLCD 0073               ??_iniciarOSC 0070           __size_of___awdiv 0067  
         __size_of___awmod 0059           __size_of___lldiv 0066         __end_of__stringtab 0009  
                imprimir@i 0072           __size_of_comando 0014           __size_of_colocar 0024  
         __size_of_borrarv 0013            _I2C_Master_Init 01B8            _I2C_Master_Read 0159  
          _I2C_Master_Wait 00CA            _I2C_Master_Stop 00B7         __end_of_iniciarLCD 0244  
                 __ptext10 03B9                   __ptext11 0244                   __ptext20 00CA  
                 __ptext12 0187                   __ptext21 01B8                   __ptext13 0135  
                 __ptext22 0353                   __ptext14 00FA                   __ptext15 010D  
                 __ptext16 00C0                   __ptext17 00B7                   __ptext18 00AE  
                 __ptext19 0159         __end_of_iniciarOSC 0353          __CFG_BOR4V$BOR40V 0000  
         __size_of_mostrar 0014              __size_of_main 0193              __size_of_humo 00C9  
                 _imprimir 0187              ??_ultrasonico 0079                   comando@x 0072  
                 colocar@x 0075                   colocar@y 0073   __end_of_I2C_Master_Start 00B7  
 __end_of_I2C_Master_Write 00CA           ___lldiv@dividend 0074                  stringcode 0003  
               _OSCCONbits 008F                   mostrar@t 0072    __end_of_I2C_Master_Init 01F0  
  __end_of_I2C_Master_Read 0187    __end_of_I2C_Master_Wait 00D7        __end_of_ultrasonico 04AC  
  __end_of_I2C_Master_Stop 00C0           ___lldiv@quotient 0079          I2C_Master_Write@d 0070  
                 stringdir 0003                   stringtab 0003                _SSPCON2bits 0091  
