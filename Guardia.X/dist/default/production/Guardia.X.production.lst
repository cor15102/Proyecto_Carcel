

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Mar 12 17:10:34 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 2.10
    12                           ; Generated 31/07/2019 GMT
    13                           ; 
    14                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F887 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0087                     	;# 
    84  0088                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  008F                     	;# 
    90  0090                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  0105                     	;# 
   109  0107                     	;# 
   110  0108                     	;# 
   111  0109                     	;# 
   112  010C                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  0185                     	;# 
   118  0187                     	;# 
   119  0188                     	;# 
   120  0189                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001B                     	;# 
   153  001B                     	;# 
   154  001C                     	;# 
   155  001D                     	;# 
   156  001E                     	;# 
   157  001F                     	;# 
   158  0081                     	;# 
   159  0085                     	;# 
   160  0086                     	;# 
   161  0087                     	;# 
   162  0088                     	;# 
   163  0089                     	;# 
   164  008C                     	;# 
   165  008D                     	;# 
   166  008E                     	;# 
   167  008F                     	;# 
   168  0090                     	;# 
   169  0091                     	;# 
   170  0092                     	;# 
   171  0093                     	;# 
   172  0093                     	;# 
   173  0093                     	;# 
   174  0094                     	;# 
   175  0095                     	;# 
   176  0096                     	;# 
   177  0097                     	;# 
   178  0098                     	;# 
   179  0099                     	;# 
   180  009A                     	;# 
   181  009B                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  009F                     	;# 
   186  0105                     	;# 
   187  0107                     	;# 
   188  0108                     	;# 
   189  0109                     	;# 
   190  010C                     	;# 
   191  010C                     	;# 
   192  010D                     	;# 
   193  010E                     	;# 
   194  010F                     	;# 
   195  0185                     	;# 
   196  0187                     	;# 
   197  0188                     	;# 
   198  0189                     	;# 
   199  018C                     	;# 
   200  018D                     	;# 
   201  0006                     _PORTB	set	6
   202  0008                     _PORTDbits	set	8
   203  0013                     _SSPBUF	set	19
   204  0014                     _SSPCONbits	set	20
   205  0086                     _TRISB	set	134
   206  008F                     _OSCCONbits	set	143
   207  0091                     _SSPCON2bits	set	145
   208  0087                     _TRISCbits	set	135
   209  0094                     _SSPSTAT	set	148
   210  0093                     _SSPADD	set	147
   211  0091                     _SSPCON2	set	145
   212  0189                     _ANSELH	set	393
   213  0188                     _ANSEL	set	392
   214                           
   215                           ; #config settings
   216  0000                     
   217                           	psect	cinit
   218  07FC                     start_initialization:	
   219  07FC                     __initialization:	
   220  07FC                     end_of_initialization:	
   221                           ;End of C runtime variable initialization code
   222                           
   223  07FC                     __end_of__initialization:	
   224  07FC  0183               	clrf	3
   225  07FD  120A  118A  2F8D   	ljmp	_main	;jump to C main() function
   226                           
   227                           	psect	cstackCOMMON
   228  0070                     __pcstackCOMMON:	
   229  0070                     ?_iniciarOSC:	
   230  0070                     ??_iniciarOSC:	
   231                           ; 1 bytes @ 0x0
   232                           
   233  0070                     ?_setup:	
   234                           ; 1 bytes @ 0x0
   235                           
   236  0070                     ??_setup:	
   237                           ; 1 bytes @ 0x0
   238                           
   239  0070                     ?_main:	
   240                           ; 1 bytes @ 0x0
   241                           
   242                           
   243                           ; 1 bytes @ 0x0
   244  0070                     	ds	2
   245  0072                     iniciarOSC@frec:	
   246                           
   247                           ; 1 bytes @ 0x2
   248  0072                     	ds	1
   249  0073                     ??_main:	
   250                           
   251                           	psect	maintext
   252  078D                     __pmaintext:	
   253                           ; 1 bytes @ 0x3
   254 ;;
   255 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   256 ;;
   257 ;; *************** function _main *****************
   258 ;; Defined at:
   259 ;;		line 52 in file "Carcelero.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;		None
   262 ;; Auto vars:     Size  Location     Type
   263 ;;		None
   264 ;; Return value:  Size  Location     Type
   265 ;;                  1    wreg      void 
   266 ;; Registers used:
   267 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   268 ;; Tracked objects:
   269 ;;		On entry : B00/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   273 ;;      Params:         0       0       0       0       0
   274 ;;      Locals:         0       0       0       0       0
   275 ;;      Temps:          0       0       0       0       0
   276 ;;      Totals:         0       0       0       0       0
   277 ;;Total ram usage:        0 bytes
   278 ;; Hardware stack levels required when called:    1
   279 ;; This function calls:
   280 ;;		_iniciarOSC
   281 ;;		_setup
   282 ;; This function is called by:
   283 ;;		Startup code after reset
   284 ;; This function uses a non-reentrant model
   285 ;;
   286                           
   287                           
   288                           ;psect for function _main
   289  078D                     _main:	
   290  078D                     l829:	
   291                           ;incstack = 0
   292                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   293                           
   294                           
   295                           ;Carcelero.c: 54:     iniciarOSC(6);
   296  078D  3006               	movlw	6
   297  078E  120A  118A  279B  120A  118A  	fcall	_iniciarOSC
   298  0793                     l831:	
   299                           
   300                           ;Carcelero.c: 56:     setup();
   301  0793  120A  118A  2785  120A  118A  	fcall	_setup
   302  0798                     l97:	
   303  0798  120A  118A  2800   	ljmp	start
   304  079B                     __end_of_main:	
   305                           
   306                           	psect	text1
   307  0785                     __ptext1:	
   308 ;; *************** function _setup *****************
   309 ;; Defined at:
   310 ;;		line 44 in file "Carcelero.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;		None
   313 ;; Auto vars:     Size  Location     Type
   314 ;;		None
   315 ;; Return value:  Size  Location     Type
   316 ;;                  1    wreg      void 
   317 ;; Registers used:
   318 ;;		status,2
   319 ;; Tracked objects:
   320 ;;		On entry : 0/0
   321 ;;		On exit  : 0/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   324 ;;      Params:         0       0       0       0       0
   325 ;;      Locals:         0       0       0       0       0
   326 ;;      Temps:          0       0       0       0       0
   327 ;;      Totals:         0       0       0       0       0
   328 ;;Total ram usage:        0 bytes
   329 ;; Hardware stack levels used:    1
   330 ;; This function calls:
   331 ;;		Nothing
   332 ;; This function is called by:
   333 ;;		_main
   334 ;; This function uses a non-reentrant model
   335 ;;
   336                           
   337                           
   338                           ;psect for function _setup
   339  0785                     _setup:	
   340  0785                     l729:	
   341                           ;incstack = 0
   342                           ; Regs used in _setup: [status,2]
   343                           
   344                           
   345                           ;Carcelero.c: 46:     ANSEL = 0;
   346  0785  1683               	bsf	3,5	;RP0=1, select bank3
   347  0786  1703               	bsf	3,6	;RP1=1, select bank3
   348  0787  0188               	clrf	8	;volatile
   349                           
   350                           ;Carcelero.c: 47:     ANSELH = 0;
   351  0788  0189               	clrf	9	;volatile
   352                           
   353                           ;Carcelero.c: 49:     TRISB = 0;
   354  0789  1683               	bsf	3,5	;RP0=1, select bank1
   355  078A  1303               	bcf	3,6	;RP1=0, select bank1
   356  078B  0186               	clrf	6	;volatile
   357  078C                     l92:	
   358  078C  0008               	return
   359  078D                     __end_of_setup:	
   360                           
   361                           	psect	text2
   362  079B                     __ptext2:	
   363 ;; *************** function _iniciarOSC *****************
   364 ;; Defined at:
   365 ;;		line 5 in file "./Oscilador.h"
   366 ;; Parameters:    Size  Location     Type
   367 ;;  frec            1    wreg     unsigned char 
   368 ;; Auto vars:     Size  Location     Type
   369 ;;  frec            1    2[COMMON] unsigned char 
   370 ;; Return value:  Size  Location     Type
   371 ;;                  1    wreg      void 
   372 ;; Registers used:
   373 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   374 ;; Tracked objects:
   375 ;;		On entry : 0/0
   376 ;;		On exit  : 0/0
   377 ;;		Unchanged: 0/0
   378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   379 ;;      Params:         0       0       0       0       0
   380 ;;      Locals:         1       0       0       0       0
   381 ;;      Temps:          2       0       0       0       0
   382 ;;      Totals:         3       0       0       0       0
   383 ;;Total ram usage:        3 bytes
   384 ;; Hardware stack levels used:    1
   385 ;; This function calls:
   386 ;;		Nothing
   387 ;; This function is called by:
   388 ;;		_main
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392                           
   393                           ;psect for function _iniciarOSC
   394  079B                     _iniciarOSC:	
   395                           
   396                           ;incstack = 0
   397                           ; Regs used in _iniciarOSC: [wreg-fsr0h+status,2+status,0]
   398                           ;iniciarOSC@frec stored from wreg
   399  079B  00F2               	movwf	iniciarOSC@frec
   400  079C                     l701:	
   401                           
   402                           ;./Oscilador.h: 5: void iniciarOSC(uint8_t frec);./Oscilador.h: 6: {;./Oscilador.h: 7:  
      +                             switch(frec)
   403  079C  2FD8               	goto	l723
   404  079D                     l703:	
   405                           
   406                           ;./Oscilador.h: 10:             OSCCONbits.IRCF = 0b000;
   407  079D  308F               	movlw	-113
   408  079E  1683               	bsf	3,5	;RP0=1, select bank1
   409  079F  1303               	bcf	3,6	;RP1=0, select bank1
   410  07A0  058F               	andwf	15,f	;volatile
   411                           
   412                           ;./Oscilador.h: 11:             break;
   413  07A1  2FFA               	goto	l80
   414  07A2                     l705:	
   415                           
   416                           ;./Oscilador.h: 14:             OSCCONbits.IRCF = 0b001;
   417  07A2  1683               	bsf	3,5	;RP0=1, select bank1
   418  07A3  1303               	bcf	3,6	;RP1=0, select bank1
   419  07A4  080F               	movf	15,w	;volatile
   420  07A5  398F               	andlw	-113
   421  07A6  3810               	iorlw	16
   422  07A7  008F               	movwf	15	;volatile
   423                           
   424                           ;./Oscilador.h: 15:             break;
   425  07A8  2FFA               	goto	l80
   426  07A9                     l707:	
   427                           
   428                           ;./Oscilador.h: 18:             OSCCONbits.IRCF = 0b010;
   429  07A9  1683               	bsf	3,5	;RP0=1, select bank1
   430  07AA  1303               	bcf	3,6	;RP1=0, select bank1
   431  07AB  080F               	movf	15,w	;volatile
   432  07AC  398F               	andlw	-113
   433  07AD  3820               	iorlw	32
   434  07AE  008F               	movwf	15	;volatile
   435                           
   436                           ;./Oscilador.h: 19:             break;
   437  07AF  2FFA               	goto	l80
   438  07B0                     l709:	
   439                           
   440                           ;./Oscilador.h: 22:             OSCCONbits.IRCF = 0b001;
   441  07B0  1683               	bsf	3,5	;RP0=1, select bank1
   442  07B1  1303               	bcf	3,6	;RP1=0, select bank1
   443  07B2  080F               	movf	15,w	;volatile
   444  07B3  398F               	andlw	-113
   445  07B4  3810               	iorlw	16
   446  07B5  008F               	movwf	15	;volatile
   447                           
   448                           ;./Oscilador.h: 23:             break;
   449  07B6  2FFA               	goto	l80
   450  07B7                     l711:	
   451                           
   452                           ;./Oscilador.h: 26:             OSCCONbits.IRCF = 0b100;
   453  07B7  1683               	bsf	3,5	;RP0=1, select bank1
   454  07B8  1303               	bcf	3,6	;RP1=0, select bank1
   455  07B9  080F               	movf	15,w	;volatile
   456  07BA  398F               	andlw	-113
   457  07BB  3840               	iorlw	64
   458  07BC  008F               	movwf	15	;volatile
   459                           
   460                           ;./Oscilador.h: 27:             break;
   461  07BD  2FFA               	goto	l80
   462  07BE                     l713:	
   463                           
   464                           ;./Oscilador.h: 30:             OSCCONbits.IRCF = 0b101;
   465  07BE  1683               	bsf	3,5	;RP0=1, select bank1
   466  07BF  1303               	bcf	3,6	;RP1=0, select bank1
   467  07C0  080F               	movf	15,w	;volatile
   468  07C1  398F               	andlw	-113
   469  07C2  3850               	iorlw	80
   470  07C3  008F               	movwf	15	;volatile
   471                           
   472                           ;./Oscilador.h: 31:             break;
   473  07C4  2FFA               	goto	l80
   474  07C5                     l715:	
   475                           
   476                           ;./Oscilador.h: 34:             OSCCONbits.IRCF = 0b110;
   477  07C5  1683               	bsf	3,5	;RP0=1, select bank1
   478  07C6  1303               	bcf	3,6	;RP1=0, select bank1
   479  07C7  080F               	movf	15,w	;volatile
   480  07C8  398F               	andlw	-113
   481  07C9  3860               	iorlw	96
   482  07CA  008F               	movwf	15	;volatile
   483                           
   484                           ;./Oscilador.h: 35:             break;
   485  07CB  2FFA               	goto	l80
   486  07CC                     l717:	
   487                           
   488                           ;./Oscilador.h: 38:             OSCCONbits.IRCF = 0b111;
   489  07CC  3070               	movlw	112
   490  07CD  1683               	bsf	3,5	;RP0=1, select bank1
   491  07CE  1303               	bcf	3,6	;RP1=0, select bank1
   492  07CF  048F               	iorwf	15,f	;volatile
   493                           
   494                           ;./Oscilador.h: 39:             break;
   495  07D0  2FFA               	goto	l80
   496  07D1                     l719:	
   497                           
   498                           ;./Oscilador.h: 42:             OSCCONbits.IRCF = 0b110;
   499  07D1  1683               	bsf	3,5	;RP0=1, select bank1
   500  07D2  1303               	bcf	3,6	;RP1=0, select bank1
   501  07D3  080F               	movf	15,w	;volatile
   502  07D4  398F               	andlw	-113
   503  07D5  3860               	iorlw	96
   504  07D6  008F               	movwf	15	;volatile
   505                           
   506                           ;./Oscilador.h: 43:             break;
   507  07D7  2FFA               	goto	l80
   508  07D8                     l723:	
   509  07D8  0872               	movf	iniciarOSC@frec,w
   510  07D9  00F0               	movwf	??_iniciarOSC
   511  07DA  01F1               	clrf	??_iniciarOSC+1
   512                           
   513                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   514                           ; Switch size 1, requested type "simple"
   515                           ; Number of cases is 1, Range of values is 0 to 0
   516                           ; switch strategies available:
   517                           ; Name         Instructions Cycles
   518                           ; simple_byte            4     3 (average)
   519                           ; direct_byte           11     8 (fixed)
   520                           ; jumptable            260     6 (fixed)
   521                           ;	Chosen strategy is simple_byte
   522  07DB  0871               	movf	??_iniciarOSC+1,w
   523  07DC  3A00               	xorlw	0	; case 0
   524  07DD  1903               	skipnz
   525  07DE  2FE0               	goto	l855
   526  07DF  2FD1               	goto	l719
   527  07E0                     l855:	
   528                           
   529                           ; Switch size 1, requested type "simple"
   530                           ; Number of cases is 8, Range of values is 0 to 7
   531                           ; switch strategies available:
   532                           ; Name         Instructions Cycles
   533                           ; simple_byte           25    13 (average)
   534                           ; direct_byte           32     8 (fixed)
   535                           ; jumptable            260     6 (fixed)
   536                           ;	Chosen strategy is simple_byte
   537  07E0  0870               	movf	??_iniciarOSC,w
   538  07E1  3A00               	xorlw	0	; case 0
   539  07E2  1903               	skipnz
   540  07E3  2F9D               	goto	l703
   541  07E4  3A01               	xorlw	1	; case 1
   542  07E5  1903               	skipnz
   543  07E6  2FA2               	goto	l705
   544  07E7  3A03               	xorlw	3	; case 2
   545  07E8  1903               	skipnz
   546  07E9  2FA9               	goto	l707
   547  07EA  3A01               	xorlw	1	; case 3
   548  07EB  1903               	skipnz
   549  07EC  2FB0               	goto	l709
   550  07ED  3A07               	xorlw	7	; case 4
   551  07EE  1903               	skipnz
   552  07EF  2FB7               	goto	l711
   553  07F0  3A01               	xorlw	1	; case 5
   554  07F1  1903               	skipnz
   555  07F2  2FBE               	goto	l713
   556  07F3  3A03               	xorlw	3	; case 6
   557  07F4  1903               	skipnz
   558  07F5  2FC5               	goto	l715
   559  07F6  3A01               	xorlw	1	; case 7
   560  07F7  1903               	skipnz
   561  07F8  2FCC               	goto	l717
   562  07F9  2FD1               	goto	l719
   563  07FA                     l80:	
   564                           
   565                           ;./Oscilador.h: 47:     OSCCONbits.SCS = 1;
   566  07FA  140F               	bsf	15,0	;volatile
   567  07FB                     l89:	
   568  07FB  0008               	return
   569  07FC                     __end_of_iniciarOSC:	
   570  007E                     btemp	set	126	;btemp
   571  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_iniciarOSC

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                         _iniciarOSC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _iniciarOSC                                           3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _iniciarOSC
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Mar 12 17:10:34 2020

             __CFG_CP$OFF 0000                        l80 07FA                        l92 078C  
                      l89 07FB                        l97 0798                       l701 079C  
                     l711 07B7                       l703 079D                       l713 07BE  
                     l705 07A2                       l715 07C5                       l707 07A9  
                     l723 07D8                       l717 07CC                       l709 07B0  
                     l719 07D1                       l831 0793                       l729 0785  
                     l829 078D                       l855 07E0              __CFG_CPD$OFF 0000  
            __CFG_LVP$OFF 0000              __CFG_WRT$OFF 0000                      _main 078D  
                    btemp 007E                      start 0000             __CFG_IESO$OFF 0000  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   _PORTB 0006                     _TRISB 0086            __CFG_FCMEN$OFF 0000  
                   _setup 0785            __CFG_BOREN$OFF 0000                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 07FC  
            __end_of_main 079B                    ??_main 0073                    ?_setup 0070  
                  _ANSELH 0189                    _SSPADD 0093                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000            iniciarOSC@frec 0072   __end_of__initialization 07FC  
          __pcstackCOMMON 0070             __end_of_setup 078D                   ??_setup 0070  
              __pmaintext 078D                   _SSPCON2 0091                   _SSPSTAT 0094  
              _iniciarOSC 079B                   __ptext1 0785                   __ptext2 079B  
    end_of_initialization 07FC                 _PORTDbits 0008                 _TRISCbits 0087  
             ?_iniciarOSC 0070       start_initialization 07FC  __CFG_FOSC$INTRC_NOCLKOUT 0000  
               ___latbits 0002       __size_of_iniciarOSC 0061            __size_of_setup 0008  
            ??_iniciarOSC 0070        __end_of_iniciarOSC 07FC         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 000E                _OSCCONbits 008F               _SSPCON2bits 0091  
              _SSPCONbits 0014  
