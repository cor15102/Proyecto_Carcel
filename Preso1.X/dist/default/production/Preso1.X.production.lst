

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Mar 13 19:12:38 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.10
    21                           ; Generated 31/07/2019 GMT
    22                           ; 
    23                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0010                     _T1CONbits	set	16
   211  0008                     _PORTDbits	set	8
   212  000F                     _TMR1H	set	15
   213  000E                     _TMR1L	set	14
   214  0010                     _T1CON	set	16
   215  000B                     _INTCONbits	set	11
   216  0008                     _PORTD	set	8
   217  0005                     _PORTA	set	5
   218  0013                     _SSPBUF	set	19
   219  0014                     _SSPCONbits	set	20
   220  000C                     _PIR1bits	set	12
   221  0014                     _SSPCON	set	20
   222  001E                     _ADRESH	set	30
   223  001F                     _ADCON0	set	31
   224  001F                     _ADCON0bits	set	31
   225  0063                     _SSPIF	set	99
   226  005E                     _PEIE	set	94
   227  005F                     _GIE	set	95
   228  00F9                     _GO_nDONE	set	249
   229  008C                     _PIE1bits	set	140
   230  0088                     _TRISDbits	set	136
   231  0085                     _TRISAbits	set	133
   232  0094                     _SSPSTATbits	set	148
   233  008F                     _OSCCONbits	set	143
   234  0091                     _SSPCON2	set	145
   235  0094                     _SSPSTAT	set	148
   236  0093                     _SSPADD	set	147
   237  009F                     _ADCON1bits	set	159
   238  04A0                     _BF	set	1184
   239  0463                     _SSPIE	set	1123
   240  043C                     _TRISC4	set	1084
   241  043B                     _TRISC3	set	1083
   242  0188                     _ANSELbits	set	392
   243  0189                     _ANSELH	set	393
   244  0188                     _ANSEL	set	392
   245                           
   246                           ; #config settings
   247  0000                     
   248                           	psect	cinit
   249  000F                     start_initialization:	
   250  000F                     __initialization:	
   251                           
   252                           ; Clear objects allocated to COMMON
   253  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   254  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   255  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   256  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   257  0013  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   258                           
   259                           ; Clear objects allocated to BANK0
   260  0014  1283               	bcf	3,5	;RP0=0, select bank0
   261  0015  1303               	bcf	3,6	;RP1=0, select bank0
   262  0016  01A3               	clrf	__pbssBANK0& (0+127)
   263  0017  01A4               	clrf	(__pbssBANK0+1)& (0+127)
   264  0018                     end_of_initialization:	
   265                           ;End of C runtime variable initialization code
   266                           
   267  0018                     __end_of__initialization:	
   268  0018  0183               	clrf	3
   269  0019  120A  118A  2950   	ljmp	_main	;jump to C main() function
   270                           
   271                           	psect	bssCOMMON
   272  0076                     __pbssCOMMON:	
   273  0076                     _tiempoH:	
   274  0076                     	ds	1
   275  0077                     _tiempoL:	
   276  0077                     	ds	1
   277  0078                     _x:	
   278  0078                     	ds	1
   279  0079                     _humo:	
   280  0079                     	ds	1
   281  007A                     _luz:	
   282  007A                     	ds	1
   283                           
   284                           	psect	bssBANK0
   285  0023                     __pbssBANK0:	
   286  0023                     _dato:	
   287  0023                     	ds	1
   288  0024                     _z:	
   289  0024                     	ds	1
   290                           
   291                           	psect	cstackCOMMON
   292  0070                     __pcstackCOMMON:	
   293  0070                     ?_I2C_Negro:	
   294  0070                     ?_iniciarOSC:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ?_isr:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ??_isr:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     ?_setup:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     ?_cronometro:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     ?_main:	
   310                           ; 1 bytes @ 0x0
   311                           
   312                           
   313                           ; 1 bytes @ 0x0
   314  0070                     	ds	3
   315  0073                     ?_iniciarADC:	
   316  0073                     ??_I2C_Negro:	
   317                           ; 1 bytes @ 0x3
   318                           
   319  0073                     ??_iniciarOSC:	
   320                           ; 1 bytes @ 0x3
   321                           
   322  0073                     ??_setup:	
   323                           ; 1 bytes @ 0x3
   324                           
   325  0073                     ??_cronometro:	
   326                           ; 1 bytes @ 0x3
   327                           
   328  0073                     ?_leerADC:	
   329                           ; 1 bytes @ 0x3
   330                           
   331  0073                     I2C_Negro@address:	
   332                           ; 2 bytes @ 0x3
   333                           
   334  0073                     iniciarADC@conv:	
   335                           ; 1 bytes @ 0x3
   336                           
   337                           
   338                           ; 2 bytes @ 0x3
   339  0073                     	ds	2
   340  0075                     ??_iniciarADC:	
   341  0075                     leerADC@channel:	
   342                           ; 1 bytes @ 0x5
   343                           
   344  0075                     iniciarOSC@frec:	
   345                           ; 1 bytes @ 0x5
   346                           
   347                           
   348                           ; 1 bytes @ 0x5
   349  0075                     	ds	1
   350                           
   351                           	psect	cstackBANK0
   352  0020                     __pcstackBANK0:	
   353  0020                     ??_leerADC:	
   354                           
   355                           ; 1 bytes @ 0x0
   356  0020                     	ds	2
   357  0022                     ??_main:	
   358                           
   359                           ; 1 bytes @ 0x2
   360  0022                     	ds	1
   361                           
   362                           	psect	maintext
   363  0150                     __pmaintext:	
   364 ;;
   365 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   366 ;;
   367 ;; *************** function _main *****************
   368 ;; Defined at:
   369 ;;		line 193 in file "Reo1.c"
   370 ;; Parameters:    Size  Location     Type
   371 ;;		None
   372 ;; Auto vars:     Size  Location     Type
   373 ;;		None
   374 ;; Return value:  Size  Location     Type
   375 ;;                  1    wreg      void 
   376 ;; Registers used:
   377 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   378 ;; Tracked objects:
   379 ;;		On entry : B00/0
   380 ;;		On exit  : 0/0
   381 ;;		Unchanged: 0/0
   382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   383 ;;      Params:         0       0       0       0       0
   384 ;;      Locals:         0       0       0       0       0
   385 ;;      Temps:          0       1       0       0       0
   386 ;;      Totals:         0       1       0       0       0
   387 ;;Total ram usage:        1 bytes
   388 ;; Hardware stack levels required when called:    2
   389 ;; This function calls:
   390 ;;		_I2C_Negro
   391 ;;		_cronometro
   392 ;;		_iniciarADC
   393 ;;		_iniciarOSC
   394 ;;		_leerADC
   395 ;;		_setup
   396 ;; This function is called by:
   397 ;;		Startup code after reset
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401                           
   402                           ;psect for function _main
   403  0150                     _main:	
   404  0150                     l1176:	
   405                           ;incstack = 0
   406                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   407                           
   408                           
   409                           ;Reo1.c: 195:     iniciarOSC(6);
   410  0150  3006               	movlw	6
   411  0151  120A  118A  20EF  120A  118A  	fcall	_iniciarOSC
   412  0156                     l1178:	
   413                           
   414                           ;Reo1.c: 197:     setup();
   415  0156  120A  118A  2228  120A  118A  	fcall	_setup
   416  015B                     l1180:	
   417                           
   418                           ;Reo1.c: 199:     iniciarADC(2);
   419  015B  3002               	movlw	2
   420  015C  00F3               	movwf	iniciarADC@conv
   421  015D  3000               	movlw	0
   422  015E  00F4               	movwf	iniciarADC@conv+1
   423  015F  120A  118A  21DB  120A  118A  	fcall	_iniciarADC
   424                           
   425                           ;Reo1.c: 201:     I2C_Negro(0x20);
   426  0164  3020               	movlw	32
   427  0165  120A  118A  2243  120A  118A  	fcall	_I2C_Negro
   428  016A                     l1182:	
   429                           
   430                           ;Reo1.c: 204:     {;Reo1.c: 205:         ADCON0bits.CHS = 0b0000;
   431  016A  30C3               	movlw	-61
   432  016B  1283               	bcf	3,5	;RP0=0, select bank0
   433  016C  1303               	bcf	3,6	;RP1=0, select bank0
   434  016D  059F               	andwf	31,f	;volatile
   435  016E                     l1184:	
   436                           
   437                           ;Reo1.c: 206:         luz = leerADC(0);
   438  016E  3000               	movlw	0
   439  016F  120A  118A  21A5  120A  118A  	fcall	_leerADC
   440  0174  0873               	movf	?_leerADC,w
   441  0175  1283               	bcf	3,5	;RP0=0, select bank0
   442  0176  1303               	bcf	3,6	;RP1=0, select bank0
   443  0177  00A2               	movwf	??_main
   444  0178  0822               	movf	??_main,w
   445  0179  00FA               	movwf	_luz
   446  017A                     l1186:	
   447                           
   448                           ;Reo1.c: 207:         _delay((unsigned long)((1)*(4000000/4000.0)));
   449  017A  30C7               	movlw	199
   450  017B  1283               	bcf	3,5	;RP0=0, select bank0
   451  017C  1303               	bcf	3,6	;RP1=0, select bank0
   452  017D  00A2               	movwf	??_main
   453  017E                     u467:	
   454  017E  297F               	nop2
   455  017F  0BA2               	decfsz	??_main,f
   456  0180  297E               	goto	u467
   457  0181  2982               	nop2
   458  0182                     l1188:	
   459                           
   460                           ;Reo1.c: 209:         ADCON0bits.CHS = 0b0001;
   461  0182  1283               	bcf	3,5	;RP0=0, select bank0
   462  0183  1303               	bcf	3,6	;RP1=0, select bank0
   463  0184  081F               	movf	31,w	;volatile
   464  0185  39C3               	andlw	-61
   465  0186  3804               	iorlw	4
   466  0187  009F               	movwf	31	;volatile
   467  0188                     l1190:	
   468                           
   469                           ;Reo1.c: 210:         humo = leerADC(0);
   470  0188  3000               	movlw	0
   471  0189  120A  118A  21A5  120A  118A  	fcall	_leerADC
   472  018E  0873               	movf	?_leerADC,w
   473  018F  1283               	bcf	3,5	;RP0=0, select bank0
   474  0190  1303               	bcf	3,6	;RP1=0, select bank0
   475  0191  00A2               	movwf	??_main
   476  0192  0822               	movf	??_main,w
   477  0193  00F9               	movwf	_humo
   478  0194                     l1192:	
   479                           
   480                           ;Reo1.c: 211:         _delay((unsigned long)((1)*(4000000/4000.0)));
   481  0194  30C7               	movlw	199
   482  0195  1283               	bcf	3,5	;RP0=0, select bank0
   483  0196  1303               	bcf	3,6	;RP1=0, select bank0
   484  0197  00A2               	movwf	??_main
   485  0198                     u477:	
   486  0198  2999               	nop2
   487  0199  0BA2               	decfsz	??_main,f
   488  019A  2998               	goto	u477
   489  019B  299C               	nop2
   490                           
   491                           ;Reo1.c: 213:         cronometro();
   492  019C  120A  118A  220C  120A  118A  	fcall	_cronometro
   493  01A1  296A               	goto	l1182
   494  01A2  120A  118A  280C   	ljmp	start
   495  01A5                     __end_of_main:	
   496                           
   497                           	psect	text1
   498  0228                     __ptext1:	
   499 ;; *************** function _setup *****************
   500 ;; Defined at:
   501 ;;		line 135 in file "Reo1.c"
   502 ;; Parameters:    Size  Location     Type
   503 ;;		None
   504 ;; Auto vars:     Size  Location     Type
   505 ;;		None
   506 ;; Return value:  Size  Location     Type
   507 ;;                  1    wreg      void 
   508 ;; Registers used:
   509 ;;		wreg, status,2
   510 ;; Tracked objects:
   511 ;;		On entry : 0/0
   512 ;;		On exit  : 0/0
   513 ;;		Unchanged: 0/0
   514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   515 ;;      Params:         0       0       0       0       0
   516 ;;      Locals:         0       0       0       0       0
   517 ;;      Temps:          0       0       0       0       0
   518 ;;      Totals:         0       0       0       0       0
   519 ;;Total ram usage:        0 bytes
   520 ;; Hardware stack levels used:    1
   521 ;; Hardware stack levels required when called:    1
   522 ;; This function calls:
   523 ;;		Nothing
   524 ;; This function is called by:
   525 ;;		_main
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529                           
   530                           ;psect for function _setup
   531  0228                     _setup:	
   532  0228                     l842:	
   533                           ;incstack = 0
   534                           ; Regs used in _setup: [wreg+status,2]
   535                           
   536                           
   537                           ;Reo1.c: 137:     ANSEL = 0;
   538  0228  1683               	bsf	3,5	;RP0=1, select bank3
   539  0229  1703               	bsf	3,6	;RP1=1, select bank3
   540  022A  0188               	clrf	8	;volatile
   541                           
   542                           ;Reo1.c: 138:     ANSELH = 0;
   543  022B  0189               	clrf	9	;volatile
   544  022C                     l844:	
   545                           
   546                           ;Reo1.c: 140:     ANSELbits.ANS0 = 1;
   547  022C  1408               	bsf	8,0	;volatile
   548  022D                     l846:	
   549                           
   550                           ;Reo1.c: 141:     ANSELbits.ANS1 = 1;
   551  022D  1488               	bsf	8,1	;volatile
   552  022E                     l848:	
   553                           
   554                           ;Reo1.c: 143:     TRISAbits.TRISA0 = 1;
   555  022E  1683               	bsf	3,5	;RP0=1, select bank1
   556  022F  1303               	bcf	3,6	;RP1=0, select bank1
   557  0230  1405               	bsf	5,0	;volatile
   558  0231                     l850:	
   559                           
   560                           ;Reo1.c: 144:     TRISAbits.TRISA1 = 1;
   561  0231  1485               	bsf	5,1	;volatile
   562  0232                     l852:	
   563                           
   564                           ;Reo1.c: 147:     TRISDbits.TRISD0 = 0;
   565  0232  1008               	bcf	8,0	;volatile
   566  0233                     l854:	
   567                           
   568                           ;Reo1.c: 148:     TRISDbits.TRISD1 = 1;
   569  0233  1488               	bsf	8,1	;volatile
   570                           
   571                           ;Reo1.c: 150:     PORTA = 0;
   572  0234  1283               	bcf	3,5	;RP0=0, select bank0
   573  0235  1303               	bcf	3,6	;RP1=0, select bank0
   574  0236  0185               	clrf	5	;volatile
   575                           
   576                           ;Reo1.c: 151:     PORTD = 0;
   577  0237  0188               	clrf	8	;volatile
   578  0238                     l856:	
   579                           
   580                           ;Reo1.c: 153:     INTCONbits.GIE = 1;
   581  0238  178B               	bsf	11,7	;volatile
   582  0239                     l858:	
   583                           
   584                           ;Reo1.c: 154:     INTCONbits.PEIE = 1;
   585  0239  170B               	bsf	11,6	;volatile
   586  023A                     l860:	
   587                           
   588                           ;Reo1.c: 155:     PIE1bits.ADIE = 1;
   589  023A  1683               	bsf	3,5	;RP0=1, select bank1
   590  023B  1303               	bcf	3,6	;RP1=0, select bank1
   591  023C  170C               	bsf	12,6	;volatile
   592  023D                     l862:	
   593                           
   594                           ;Reo1.c: 156:     PIE1bits.TMR1IE = 1;
   595  023D  140C               	bsf	12,0	;volatile
   596  023E                     l864:	
   597                           
   598                           ;Reo1.c: 158:     T1CON = 0x10;
   599  023E  3010               	movlw	16
   600  023F  1283               	bcf	3,5	;RP0=0, select bank0
   601  0240  1303               	bcf	3,6	;RP1=0, select bank0
   602  0241  0090               	movwf	16	;volatile
   603  0242                     l157:	
   604  0242  0008               	return
   605  0243                     __end_of_setup:	
   606                           
   607                           	psect	text2
   608  01A5                     __ptext2:	
   609 ;; *************** function _leerADC *****************
   610 ;; Defined at:
   611 ;;		line 128 in file "./ADC.h"
   612 ;; Parameters:    Size  Location     Type
   613 ;;  channel         1    wreg     unsigned char 
   614 ;; Auto vars:     Size  Location     Type
   615 ;;  channel         1    5[COMMON] unsigned char 
   616 ;; Return value:  Size  Location     Type
   617 ;;                  2    3[COMMON] unsigned int 
   618 ;; Registers used:
   619 ;;		wreg, status,2, status,0
   620 ;; Tracked objects:
   621 ;;		On entry : 0/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   625 ;;      Params:         2       0       0       0       0
   626 ;;      Locals:         1       0       0       0       0
   627 ;;      Temps:          0       2       0       0       0
   628 ;;      Totals:         3       2       0       0       0
   629 ;;Total ram usage:        5 bytes
   630 ;; Hardware stack levels used:    1
   631 ;; Hardware stack levels required when called:    1
   632 ;; This function calls:
   633 ;;		Nothing
   634 ;; This function is called by:
   635 ;;		_main
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           
   640                           ;psect for function _leerADC
   641  01A5                     _leerADC:	
   642                           
   643                           ;incstack = 0
   644                           ; Regs used in _leerADC: [wreg+status,2+status,0]
   645                           ;leerADC@channel stored from wreg
   646  01A5  00F5               	movwf	leerADC@channel
   647  01A6                     l1160:	
   648                           
   649                           ;./ADC.h: 128: unsigned int leerADC(unsigned char channel);./ADC.h: 129: {;./ADC.h: 130:
      +                               if(channel > 7)
   650  01A6  3008               	movlw	8
   651  01A7  0275               	subwf	leerADC@channel,w
   652  01A8  1C03               	skipc
   653  01A9  29AB               	goto	u431
   654  01AA  29AC               	goto	u430
   655  01AB                     u431:	
   656  01AB  29AF               	goto	l1166
   657  01AC                     u430:	
   658  01AC                     l1162:	
   659                           
   660                           ;./ADC.h: 131:     {;./ADC.h: 132:         return 0;
   661  01AC  01F3               	clrf	?_leerADC
   662  01AD  01F4               	clrf	?_leerADC+1
   663  01AE  29DA               	goto	l85
   664  01AF                     l1166:	
   665                           
   666                           ;./ADC.h: 135:     ADCON0 &= 0xC5;
   667  01AF  30C5               	movlw	197
   668  01B0  1283               	bcf	3,5	;RP0=0, select bank0
   669  01B1  1303               	bcf	3,6	;RP1=0, select bank0
   670  01B2  00A0               	movwf	??_leerADC
   671  01B3  0820               	movf	??_leerADC,w
   672  01B4  059F               	andwf	31,f	;volatile
   673                           
   674                           ;./ADC.h: 136:     ADCON0 |= channel<<3;
   675  01B5  0875               	movf	leerADC@channel,w	;volatile
   676  01B6  00A0               	movwf	??_leerADC
   677  01B7  3002               	movlw	2
   678  01B8                     u445:	
   679  01B8  1003               	clrc
   680  01B9  0DA0               	rlf	??_leerADC,f
   681  01BA  3EFF               	addlw	-1
   682  01BB  1D03               	skipz
   683  01BC  29B8               	goto	u445
   684  01BD  1003               	clrc
   685  01BE  0D20               	rlf	??_leerADC,w
   686  01BF  00A1               	movwf	??_leerADC+1
   687  01C0  0821               	movf	??_leerADC+1,w
   688  01C1  049F               	iorwf	31,f	;volatile
   689  01C2                     l1168:	
   690                           
   691                           ;./ADC.h: 137:     _delay((unsigned long)((2)*(4000000/4000.0)));
   692  01C2  3003               	movlw	3
   693  01C3  1283               	bcf	3,5	;RP0=0, select bank0
   694  01C4  1303               	bcf	3,6	;RP1=0, select bank0
   695  01C5  00A1               	movwf	??_leerADC+1
   696  01C6  3097               	movlw	151
   697  01C7  00A0               	movwf	??_leerADC
   698  01C8                     u487:	
   699  01C8  0BA0               	decfsz	??_leerADC,f
   700  01C9  29C8               	goto	u487
   701  01CA  0BA1               	decfsz	??_leerADC+1,f
   702  01CB  29C8               	goto	u487
   703  01CC                     l1170:	
   704                           
   705                           ;./ADC.h: 138:     GO_nDONE = 1;
   706  01CC  1283               	bcf	3,5	;RP0=0, select bank0
   707  01CD  1303               	bcf	3,6	;RP1=0, select bank0
   708  01CE  149F               	bsf	31,1	;volatile
   709  01CF                     l86:	
   710                           ;./ADC.h: 141:     {;./ADC.h: 142:     }
   711                           
   712                           
   713                           ;./ADC.h: 140:     while(GO_nDONE)
   714  01CF  189F               	btfsc	31,1	;volatile
   715  01D0  29D2               	goto	u451
   716  01D1  29D3               	goto	u450
   717  01D2                     u451:	
   718  01D2  29CF               	goto	l86
   719  01D3                     u450:	
   720  01D3                     l1172:	
   721                           
   722                           ;./ADC.h: 144:     return (ADRESH);
   723  01D3  081E               	movf	30,w	;volatile
   724  01D4  00A0               	movwf	??_leerADC
   725  01D5  01A1               	clrf	??_leerADC+1
   726  01D6  0820               	movf	??_leerADC,w
   727  01D7  00F3               	movwf	?_leerADC
   728  01D8  0821               	movf	??_leerADC+1,w
   729  01D9  00F4               	movwf	?_leerADC+1
   730  01DA                     l85:	
   731  01DA  0008               	return
   732  01DB                     __end_of_leerADC:	
   733                           
   734                           	psect	text3
   735  00EF                     __ptext3:	
   736 ;; *************** function _iniciarOSC *****************
   737 ;; Defined at:
   738 ;;		line 5 in file "./Oscilador.h"
   739 ;; Parameters:    Size  Location     Type
   740 ;;  frec            1    wreg     unsigned char 
   741 ;; Auto vars:     Size  Location     Type
   742 ;;  frec            1    5[COMMON] unsigned char 
   743 ;; Return value:  Size  Location     Type
   744 ;;                  1    wreg      void 
   745 ;; Registers used:
   746 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   747 ;; Tracked objects:
   748 ;;		On entry : 0/0
   749 ;;		On exit  : 0/0
   750 ;;		Unchanged: 0/0
   751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   752 ;;      Params:         0       0       0       0       0
   753 ;;      Locals:         1       0       0       0       0
   754 ;;      Temps:          2       0       0       0       0
   755 ;;      Totals:         3       0       0       0       0
   756 ;;Total ram usage:        3 bytes
   757 ;; Hardware stack levels used:    1
   758 ;; Hardware stack levels required when called:    1
   759 ;; This function calls:
   760 ;;		Nothing
   761 ;; This function is called by:
   762 ;;		_main
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           
   767                           ;psect for function _iniciarOSC
   768  00EF                     _iniciarOSC:	
   769                           
   770                           ;incstack = 0
   771                           ; Regs used in _iniciarOSC: [wreg-fsr0h+status,2+status,0]
   772                           ;iniciarOSC@frec stored from wreg
   773  00EF  00F5               	movwf	iniciarOSC@frec
   774  00F0                     l814:	
   775                           
   776                           ;./Oscilador.h: 5: void iniciarOSC(uint8_t frec);./Oscilador.h: 6: {;./Oscilador.h: 7:  
      +                             switch(frec)
   777  00F0  292C               	goto	l836
   778  00F1                     l816:	
   779                           
   780                           ;./Oscilador.h: 10:             OSCCONbits.IRCF = 0b000;
   781  00F1  308F               	movlw	-113
   782  00F2  1683               	bsf	3,5	;RP0=1, select bank1
   783  00F3  1303               	bcf	3,6	;RP1=0, select bank1
   784  00F4  058F               	andwf	15,f	;volatile
   785                           
   786                           ;./Oscilador.h: 11:             break;
   787  00F5  294E               	goto	l96
   788  00F6                     l818:	
   789                           
   790                           ;./Oscilador.h: 14:             OSCCONbits.IRCF = 0b001;
   791  00F6  1683               	bsf	3,5	;RP0=1, select bank1
   792  00F7  1303               	bcf	3,6	;RP1=0, select bank1
   793  00F8  080F               	movf	15,w	;volatile
   794  00F9  398F               	andlw	-113
   795  00FA  3810               	iorlw	16
   796  00FB  008F               	movwf	15	;volatile
   797                           
   798                           ;./Oscilador.h: 15:             break;
   799  00FC  294E               	goto	l96
   800  00FD                     l820:	
   801                           
   802                           ;./Oscilador.h: 18:             OSCCONbits.IRCF = 0b010;
   803  00FD  1683               	bsf	3,5	;RP0=1, select bank1
   804  00FE  1303               	bcf	3,6	;RP1=0, select bank1
   805  00FF  080F               	movf	15,w	;volatile
   806  0100  398F               	andlw	-113
   807  0101  3820               	iorlw	32
   808  0102  008F               	movwf	15	;volatile
   809                           
   810                           ;./Oscilador.h: 19:             break;
   811  0103  294E               	goto	l96
   812  0104                     l822:	
   813                           
   814                           ;./Oscilador.h: 22:             OSCCONbits.IRCF = 0b001;
   815  0104  1683               	bsf	3,5	;RP0=1, select bank1
   816  0105  1303               	bcf	3,6	;RP1=0, select bank1
   817  0106  080F               	movf	15,w	;volatile
   818  0107  398F               	andlw	-113
   819  0108  3810               	iorlw	16
   820  0109  008F               	movwf	15	;volatile
   821                           
   822                           ;./Oscilador.h: 23:             break;
   823  010A  294E               	goto	l96
   824  010B                     l824:	
   825                           
   826                           ;./Oscilador.h: 26:             OSCCONbits.IRCF = 0b100;
   827  010B  1683               	bsf	3,5	;RP0=1, select bank1
   828  010C  1303               	bcf	3,6	;RP1=0, select bank1
   829  010D  080F               	movf	15,w	;volatile
   830  010E  398F               	andlw	-113
   831  010F  3840               	iorlw	64
   832  0110  008F               	movwf	15	;volatile
   833                           
   834                           ;./Oscilador.h: 27:             break;
   835  0111  294E               	goto	l96
   836  0112                     l826:	
   837                           
   838                           ;./Oscilador.h: 30:             OSCCONbits.IRCF = 0b101;
   839  0112  1683               	bsf	3,5	;RP0=1, select bank1
   840  0113  1303               	bcf	3,6	;RP1=0, select bank1
   841  0114  080F               	movf	15,w	;volatile
   842  0115  398F               	andlw	-113
   843  0116  3850               	iorlw	80
   844  0117  008F               	movwf	15	;volatile
   845                           
   846                           ;./Oscilador.h: 31:             break;
   847  0118  294E               	goto	l96
   848  0119                     l828:	
   849                           
   850                           ;./Oscilador.h: 34:             OSCCONbits.IRCF = 0b110;
   851  0119  1683               	bsf	3,5	;RP0=1, select bank1
   852  011A  1303               	bcf	3,6	;RP1=0, select bank1
   853  011B  080F               	movf	15,w	;volatile
   854  011C  398F               	andlw	-113
   855  011D  3860               	iorlw	96
   856  011E  008F               	movwf	15	;volatile
   857                           
   858                           ;./Oscilador.h: 35:             break;
   859  011F  294E               	goto	l96
   860  0120                     l830:	
   861                           
   862                           ;./Oscilador.h: 38:             OSCCONbits.IRCF = 0b111;
   863  0120  3070               	movlw	112
   864  0121  1683               	bsf	3,5	;RP0=1, select bank1
   865  0122  1303               	bcf	3,6	;RP1=0, select bank1
   866  0123  048F               	iorwf	15,f	;volatile
   867                           
   868                           ;./Oscilador.h: 39:             break;
   869  0124  294E               	goto	l96
   870  0125                     l832:	
   871                           
   872                           ;./Oscilador.h: 42:             OSCCONbits.IRCF = 0b110;
   873  0125  1683               	bsf	3,5	;RP0=1, select bank1
   874  0126  1303               	bcf	3,6	;RP1=0, select bank1
   875  0127  080F               	movf	15,w	;volatile
   876  0128  398F               	andlw	-113
   877  0129  3860               	iorlw	96
   878  012A  008F               	movwf	15	;volatile
   879                           
   880                           ;./Oscilador.h: 43:             break;
   881  012B  294E               	goto	l96
   882  012C                     l836:	
   883  012C  0875               	movf	iniciarOSC@frec,w
   884  012D  00F3               	movwf	??_iniciarOSC
   885  012E  01F4               	clrf	??_iniciarOSC+1
   886                           
   887                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   888                           ; Switch size 1, requested type "simple"
   889                           ; Number of cases is 1, Range of values is 0 to 0
   890                           ; switch strategies available:
   891                           ; Name         Instructions Cycles
   892                           ; simple_byte            4     3 (average)
   893                           ; direct_byte           11     8 (fixed)
   894                           ; jumptable            260     6 (fixed)
   895                           ;	Chosen strategy is simple_byte
   896  012F  0874               	movf	??_iniciarOSC+1,w
   897  0130  3A00               	xorlw	0	; case 0
   898  0131  1903               	skipnz
   899  0132  2934               	goto	l1234
   900  0133  2925               	goto	l832
   901  0134                     l1234:	
   902                           
   903                           ; Switch size 1, requested type "simple"
   904                           ; Number of cases is 8, Range of values is 0 to 7
   905                           ; switch strategies available:
   906                           ; Name         Instructions Cycles
   907                           ; simple_byte           25    13 (average)
   908                           ; direct_byte           32     8 (fixed)
   909                           ; jumptable            260     6 (fixed)
   910                           ;	Chosen strategy is simple_byte
   911  0134  0873               	movf	??_iniciarOSC,w
   912  0135  3A00               	xorlw	0	; case 0
   913  0136  1903               	skipnz
   914  0137  28F1               	goto	l816
   915  0138  3A01               	xorlw	1	; case 1
   916  0139  1903               	skipnz
   917  013A  28F6               	goto	l818
   918  013B  3A03               	xorlw	3	; case 2
   919  013C  1903               	skipnz
   920  013D  28FD               	goto	l820
   921  013E  3A01               	xorlw	1	; case 3
   922  013F  1903               	skipnz
   923  0140  2904               	goto	l822
   924  0141  3A07               	xorlw	7	; case 4
   925  0142  1903               	skipnz
   926  0143  290B               	goto	l824
   927  0144  3A01               	xorlw	1	; case 5
   928  0145  1903               	skipnz
   929  0146  2912               	goto	l826
   930  0147  3A03               	xorlw	3	; case 6
   931  0148  1903               	skipnz
   932  0149  2919               	goto	l828
   933  014A  3A01               	xorlw	1	; case 7
   934  014B  1903               	skipnz
   935  014C  2920               	goto	l830
   936  014D  2925               	goto	l832
   937  014E                     l96:	
   938                           
   939                           ;./Oscilador.h: 47:     OSCCONbits.SCS = 1;
   940  014E  140F               	bsf	15,0	;volatile
   941  014F                     l105:	
   942  014F  0008               	return
   943  0150                     __end_of_iniciarOSC:	
   944                           
   945                           	psect	text4
   946  01DB                     __ptext4:	
   947 ;; *************** function _iniciarADC *****************
   948 ;; Defined at:
   949 ;;		line 12 in file "./ADC.h"
   950 ;; Parameters:    Size  Location     Type
   951 ;;  conv            2    3[COMMON] int 
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   963 ;;      Params:         2       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0
   965 ;;      Temps:          0       0       0       0       0
   966 ;;      Totals:         2       0       0       0       0
   967 ;;Total ram usage:        2 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; Hardware stack levels required when called:    1
   970 ;; This function calls:
   971 ;;		Nothing
   972 ;; This function is called by:
   973 ;;		_main
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           
   978                           ;psect for function _iniciarADC
   979  01DB                     _iniciarADC:	
   980  01DB                     l1002:	
   981                           ;incstack = 0
   982                           ; Regs used in _iniciarADC: [wreg-fsr0h+status,2+status,0]
   983                           
   984                           
   985                           ;./ADC.h: 12: ;./ADC.h: 13:         case 2:;./ADC.h: 18:             ADCON0bits.ADCS = 0
      +                          b10;
   986  01DB  29F4               	goto	l1014
   987  01DC                     l1004:	
   988                           
   989                           ;./ADC.h: 21:         default:
   990  01DC  303F               	movlw	-193
   991  01DD  1283               	bcf	3,5	;RP0=0, select bank0
   992  01DE  1303               	bcf	3,6	;RP1=0, select bank0
   993  01DF  059F               	andwf	31,f	;volatile
   994                           
   995                           ;./ADC.h: 22:             ADCON0bits.ADCS = 0b11;
   996  01E0  2A04               	goto	l77
   997  01E1                     l1006:	
   998  01E1  1283               	bcf	3,5	;RP0=0, select bank0
   999  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  1000  01E3  081F               	movf	31,w	;volatile
  1001  01E4  393F               	andlw	-193
  1002  01E5  3840               	iorlw	64
  1003  01E6  009F               	movwf	31	;volatile
  1004  01E7  2A04               	goto	l77
  1005  01E8                     l1008:	
  1006  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  1007  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  1008  01EA  081F               	movf	31,w	;volatile
  1009  01EB  393F               	andlw	-193
  1010  01EC  3880               	iorlw	128
  1011  01ED  009F               	movwf	31	;volatile
  1012  01EE  2A04               	goto	l77
  1013  01EF                     l1010:	
  1014  01EF  30C0               	movlw	192
  1015  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  1016  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  1017  01F2  049F               	iorwf	31,f	;volatile
  1018  01F3  2A04               	goto	l77
  1019  01F4                     l1014:	
  1020                           
  1021                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1022                           ; Switch size 1, requested type "simple"
  1023                           ; Number of cases is 1, Range of values is 0 to 0
  1024                           ; switch strategies available:
  1025                           ; Name         Instructions Cycles
  1026                           ; simple_byte            4     3 (average)
  1027                           ; direct_byte           11     8 (fixed)
  1028                           ; jumptable            260     6 (fixed)
  1029                           ;	Chosen strategy is simple_byte
  1030  01F4  0874               	movf	iniciarADC@conv+1,w
  1031  01F5  3A00               	xorlw	0	; case 0
  1032  01F6  1903               	skipnz
  1033  01F7  29F9               	goto	l1236
  1034  01F8  29EF               	goto	l1010
  1035  01F9                     l1236:	
  1036                           
  1037                           ; Switch size 1, requested type "simple"
  1038                           ; Number of cases is 3, Range of values is 1 to 3
  1039                           ; switch strategies available:
  1040                           ; Name         Instructions Cycles
  1041                           ; simple_byte           10     6 (average)
  1042                           ; direct_byte           20    11 (fixed)
  1043                           ; jumptable            263     9 (fixed)
  1044                           ;	Chosen strategy is simple_byte
  1045  01F9  0873               	movf	iniciarADC@conv,w
  1046  01FA  3A01               	xorlw	1	; case 1
  1047  01FB  1903               	skipnz
  1048  01FC  29DC               	goto	l1004
  1049  01FD  3A03               	xorlw	3	; case 2
  1050  01FE  1903               	skipnz
  1051  01FF  29E1               	goto	l1006
  1052  0200  3A01               	xorlw	1	; case 3
  1053  0201  1903               	skipnz
  1054  0202  29E8               	goto	l1008
  1055  0203  29EF               	goto	l1010
  1056  0204                     l77:	
  1057                           
  1058                           ;./ADC.h: 112:     ADCON0bits.GO_DONE = 1;
  1059  0204  149F               	bsf	31,1	;volatile
  1060                           
  1061                           ;./ADC.h: 114:     ADCON0bits.ADON = 1;
  1062  0205  141F               	bsf	31,0	;volatile
  1063                           
  1064                           ;./ADC.h: 116:     ADCON1bits.ADFM = 0;
  1065  0206  1683               	bsf	3,5	;RP0=1, select bank1
  1066  0207  1303               	bcf	3,6	;RP1=0, select bank1
  1067  0208  139F               	bcf	31,7	;volatile
  1068                           
  1069                           ;./ADC.h: 118:     ADCON1bits.VCFG1 = 0;
  1070  0209  129F               	bcf	31,5	;volatile
  1071                           
  1072                           ;./ADC.h: 120:     ADCON1bits.VCFG0 = 0;
  1073  020A  121F               	bcf	31,4	;volatile
  1074  020B                     l81:	
  1075  020B  0008               	return
  1076  020C                     __end_of_iniciarADC:	
  1077                           
  1078                           	psect	text5
  1079  020C                     __ptext5:	
  1080 ;; *************** function _cronometro *****************
  1081 ;; Defined at:
  1082 ;;		line 164 in file "Reo1.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;		None
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;		None
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      void 
  1089 ;; Registers used:
  1090 ;;		wreg, status,2
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1096 ;;      Params:         0       0       0       0       0
  1097 ;;      Locals:         0       0       0       0       0
  1098 ;;      Temps:          1       0       0       0       0
  1099 ;;      Totals:         1       0       0       0       0
  1100 ;;Total ram usage:        1 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; Hardware stack levels required when called:    1
  1103 ;; This function calls:
  1104 ;;		Nothing
  1105 ;; This function is called by:
  1106 ;;		_main
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           
  1111                           ;psect for function _cronometro
  1112  020C                     _cronometro:	
  1113  020C                     l866:	
  1114                           ;incstack = 0
  1115                           ; Regs used in _cronometro: [wreg+status,2]
  1116                           
  1117                           
  1118                           ;Reo1.c: 166:     TMR1L = 0;
  1119  020C  1283               	bcf	3,5	;RP0=0, select bank0
  1120  020D  1303               	bcf	3,6	;RP1=0, select bank0
  1121  020E  018E               	clrf	14	;volatile
  1122                           
  1123                           ;Reo1.c: 167:     TMR1H = 0;
  1124  020F  018F               	clrf	15	;volatile
  1125  0210                     l868:	
  1126                           
  1127                           ;Reo1.c: 169:     PORTDbits.RD0 = 1;
  1128  0210  1408               	bsf	8,0	;volatile
  1129  0211                     l870:	
  1130                           
  1131                           ;Reo1.c: 170:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1132  0211  3003               	movlw	3
  1133  0212  00F3               	movwf	??_cronometro
  1134  0213                     u497:	
  1135  0213  0BF3               	decfsz	??_cronometro,f
  1136  0214  2A13               	goto	u497
  1137  0215                     l872:	
  1138                           
  1139                           ;Reo1.c: 171:     PORTDbits.RD0 = 0;
  1140  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1141  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1142  0217  1008               	bcf	8,0	;volatile
  1143  0218                     l160:	
  1144                           ;Reo1.c: 173:     while(!PORTDbits.RD1);
  1145                           
  1146  0218  1C88               	btfss	8,1	;volatile
  1147  0219  2A1B               	goto	u41
  1148  021A  2A1C               	goto	u40
  1149  021B                     u41:	
  1150  021B  2A18               	goto	l160
  1151  021C                     u40:	
  1152  021C                     l162:	
  1153                           
  1154                           ;Reo1.c: 175:     T1CONbits.TMR1ON = 1;
  1155  021C  1410               	bsf	16,0	;volatile
  1156  021D                     l163:	
  1157                           ;Reo1.c: 176:     while(PORTDbits.RD1);
  1158                           
  1159  021D  1888               	btfsc	8,1	;volatile
  1160  021E  2A20               	goto	u51
  1161  021F  2A21               	goto	u50
  1162  0220                     u51:	
  1163  0220  2A1D               	goto	l163
  1164  0221                     u50:	
  1165  0221                     l165:	
  1166                           
  1167                           ;Reo1.c: 177:     T1CONbits.TMR1ON = 0;
  1168  0221  1010               	bcf	16,0	;volatile
  1169  0222                     l874:	
  1170                           
  1171                           ;Reo1.c: 179:     tiempoL = TMR1L;
  1172  0222  080E               	movf	14,w	;volatile
  1173  0223  00F3               	movwf	??_cronometro
  1174  0224  0873               	movf	??_cronometro,w
  1175  0225  00F7               	movwf	_tiempoL
  1176  0226                     l876:	
  1177                           
  1178                           ;Reo1.c: 180:     tiempoH = (TMR1H<<8);
  1179  0226  01F6               	clrf	_tiempoH
  1180  0227                     l166:	
  1181  0227  0008               	return
  1182  0228                     __end_of_cronometro:	
  1183                           
  1184                           	psect	text6
  1185  0243                     __ptext6:	
  1186 ;; *************** function _I2C_Negro *****************
  1187 ;; Defined at:
  1188 ;;		line 18 in file "./I2Cesclavo.h"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;  address         1    wreg     unsigned char 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  address         1    3[COMMON] unsigned char 
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      void 
  1195 ;; Registers used:
  1196 ;;		wreg
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1202 ;;      Params:         0       0       0       0       0
  1203 ;;      Locals:         1       0       0       0       0
  1204 ;;      Temps:          0       0       0       0       0
  1205 ;;      Totals:         1       0       0       0       0
  1206 ;;Total ram usage:        1 bytes
  1207 ;; Hardware stack levels used:    1
  1208 ;; Hardware stack levels required when called:    1
  1209 ;; This function calls:
  1210 ;;		Nothing
  1211 ;; This function is called by:
  1212 ;;		_main
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           
  1217                           ;psect for function _I2C_Negro
  1218  0243                     _I2C_Negro:	
  1219                           
  1220                           ;incstack = 0
  1221                           ; Regs used in _I2C_Negro: [wreg]
  1222                           ;I2C_Negro@address stored from wreg
  1223  0243  00F3               	movwf	I2C_Negro@address
  1224  0244                     l800:	
  1225                           
  1226                           ;./I2Cesclavo.h: 18: void I2C_Negro(uint8_t address);./I2Cesclavo.h: 19: {;./I2Cesclavo.
      +                          h: 20:     SSPADD = address;
  1227  0244  0873               	movf	I2C_Negro@address,w
  1228  0245  1683               	bsf	3,5	;RP0=1, select bank1
  1229  0246  1303               	bcf	3,6	;RP1=0, select bank1
  1230  0247  0093               	movwf	19	;volatile
  1231                           
  1232                           ;./I2Cesclavo.h: 21:     SSPCON = 0x36;
  1233  0248  3036               	movlw	54
  1234  0249  1283               	bcf	3,5	;RP0=0, select bank0
  1235  024A  1303               	bcf	3,6	;RP1=0, select bank0
  1236  024B  0094               	movwf	20	;volatile
  1237                           
  1238                           ;./I2Cesclavo.h: 22:     SSPSTAT = 0x80;
  1239  024C  3080               	movlw	128
  1240  024D  1683               	bsf	3,5	;RP0=1, select bank1
  1241  024E  1303               	bcf	3,6	;RP1=0, select bank1
  1242  024F  0094               	movwf	20	;volatile
  1243                           
  1244                           ;./I2Cesclavo.h: 23:     SSPCON2 = 0x01;
  1245  0250  3001               	movlw	1
  1246  0251  0091               	movwf	17	;volatile
  1247  0252                     l802:	
  1248                           
  1249                           ;./I2Cesclavo.h: 24:     TRISC3 = 1;
  1250  0252  1587               	bsf	7,3	;volatile
  1251  0253                     l804:	
  1252                           
  1253                           ;./I2Cesclavo.h: 25:     TRISC4 = 1;
  1254  0253  1607               	bsf	7,4	;volatile
  1255  0254                     l806:	
  1256                           
  1257                           ;./I2Cesclavo.h: 26:     GIE = 1;
  1258  0254  178B               	bsf	11,7	;volatile
  1259  0255                     l808:	
  1260                           
  1261                           ;./I2Cesclavo.h: 27:     PEIE = 1;
  1262  0255  170B               	bsf	11,6	;volatile
  1263  0256                     l810:	
  1264                           
  1265                           ;./I2Cesclavo.h: 28:     SSPIF = 0;
  1266  0256  1283               	bcf	3,5	;RP0=0, select bank0
  1267  0257  1303               	bcf	3,6	;RP1=0, select bank0
  1268  0258  118C               	bcf	12,3	;volatile
  1269  0259                     l812:	
  1270                           
  1271                           ;./I2Cesclavo.h: 29:     SSPIE = 1;
  1272  0259  1683               	bsf	3,5	;RP0=1, select bank1
  1273  025A  1303               	bcf	3,6	;RP1=0, select bank1
  1274  025B  158C               	bsf	12,3	;volatile
  1275  025C                     l91:	
  1276  025C  0008               	return
  1277  025D                     __end_of_I2C_Negro:	
  1278                           
  1279                           	psect	text7
  1280  001C                     __ptext7:	
  1281 ;; *************** function _isr *****************
  1282 ;; Defined at:
  1283 ;;		line 53 in file "Reo1.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;		None
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;		None
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      void 
  1290 ;; Registers used:
  1291 ;;		wreg, status,2, status,0
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1297 ;;      Params:         0       0       0       0       0
  1298 ;;      Locals:         0       0       0       0       0
  1299 ;;      Temps:          3       0       0       0       0
  1300 ;;      Totals:         3       0       0       0       0
  1301 ;;Total ram usage:        3 bytes
  1302 ;; Hardware stack levels used:    1
  1303 ;; This function calls:
  1304 ;;		Nothing
  1305 ;; This function is called by:
  1306 ;;		Interrupt level 1
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           
  1311                           ;psect for function _isr
  1312  001C                     _isr:	
  1313  001C                     i1l1036:	
  1314                           
  1315                           ;Reo1.c: 56:     if (PIR1bits.ADIF == 1)
  1316  001C  1283               	bcf	3,5	;RP0=0, select bank0
  1317  001D  1303               	bcf	3,6	;RP1=0, select bank0
  1318  001E  1F0C               	btfss	12,6	;volatile
  1319  001F  2821               	goto	u26_21
  1320  0020  2822               	goto	u26_20
  1321  0021                     u26_21:	
  1322  0021  282A               	goto	i1l1042
  1323  0022                     u26_20:	
  1324  0022                     i1l1038:	
  1325                           
  1326                           ;Reo1.c: 57:     {;Reo1.c: 58:         PIR1bits.ADIF = 0;
  1327  0022  130C               	bcf	12,6	;volatile
  1328  0023                     i1l1040:	
  1329                           
  1330                           ;Reo1.c: 59:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1331  0023  30C7               	movlw	199
  1332  0024  00F0               	movwf	??_isr
  1333  0025                     u50_27:	
  1334  0025  2826               	nop2
  1335  0026  0BF0               	decfsz	??_isr,f
  1336  0027  2825               	goto	u50_27
  1337  0028  2829               	nop2
  1338  0029  282A               	nop2
  1339  002A                     i1l1042:	
  1340                           
  1341                           ;Reo1.c: 62:     if(PIR1bits.SSPIF == 1)
  1342  002A  1283               	bcf	3,5	;RP0=0, select bank0
  1343  002B  1303               	bcf	3,6	;RP1=0, select bank0
  1344  002C  1D8C               	btfss	12,3	;volatile
  1345  002D  282F               	goto	u27_21
  1346  002E  2830               	goto	u27_20
  1347  002F                     u27_21:	
  1348  002F  28E8               	goto	i1l154
  1349  0030                     u27_20:	
  1350  0030                     i1l1044:	
  1351                           
  1352                           ;Reo1.c: 63:     {;Reo1.c: 64:         SSPCONbits.CKP = 0;
  1353  0030  1214               	bcf	20,4	;volatile
  1354                           
  1355                           ;Reo1.c: 66:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL))
  1356  0031  1B14               	btfsc	20,6	;volatile
  1357  0032  2834               	goto	u28_21
  1358  0033  2835               	goto	u28_20
  1359  0034                     u28_21:	
  1360  0034  2839               	goto	i1l1048
  1361  0035                     u28_20:	
  1362  0035                     i1l1046:	
  1363  0035  1F94               	btfss	20,7	;volatile
  1364  0036  2838               	goto	u29_21
  1365  0037  2839               	goto	u29_20
  1366  0038                     u29_21:	
  1367  0038  2840               	goto	i1l1056
  1368  0039                     u29_20:	
  1369  0039                     i1l1048:	
  1370                           
  1371                           ;Reo1.c: 67:         {;Reo1.c: 68:             z = SSPBUF;
  1372  0039  0813               	movf	19,w	;volatile
  1373  003A  00F0               	movwf	??_isr
  1374  003B  0870               	movf	??_isr,w
  1375  003C  00A4               	movwf	_z
  1376  003D                     i1l1050:	
  1377                           
  1378                           ;Reo1.c: 69:             SSPCONbits.SSPOV = 0;
  1379  003D  1314               	bcf	20,6	;volatile
  1380  003E                     i1l1052:	
  1381                           
  1382                           ;Reo1.c: 70:             SSPCONbits.WCOL = 0;
  1383  003E  1394               	bcf	20,7	;volatile
  1384  003F                     i1l1054:	
  1385                           
  1386                           ;Reo1.c: 71:             SSPCONbits.CKP = 1;
  1387  003F  1614               	bsf	20,4	;volatile
  1388  0040                     i1l1056:	
  1389                           
  1390                           ;Reo1.c: 74:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW)
  1391  0040  1683               	bsf	3,5	;RP0=1, select bank1
  1392  0041  1303               	bcf	3,6	;RP1=0, select bank1
  1393  0042  1A94               	btfsc	20,5	;volatile
  1394  0043  2845               	goto	u30_21
  1395  0044  2846               	goto	u30_20
  1396  0045                     u30_21:	
  1397  0045  2863               	goto	i1l129
  1398  0046                     u30_20:	
  1399  0046                     i1l1058:	
  1400  0046  1914               	btfsc	20,2	;volatile
  1401  0047  2849               	goto	u31_21
  1402  0048  284A               	goto	u31_20
  1403  0049                     u31_21:	
  1404  0049  2863               	goto	i1l129
  1405  004A                     u31_20:	
  1406  004A                     i1l1060:	
  1407                           
  1408                           ;Reo1.c: 75:         {;Reo1.c: 77:             z = SSPBUF;
  1409  004A  1283               	bcf	3,5	;RP0=0, select bank0
  1410  004B  1303               	bcf	3,6	;RP1=0, select bank0
  1411  004C  0813               	movf	19,w	;volatile
  1412  004D  00F0               	movwf	??_isr
  1413  004E  0870               	movf	??_isr,w
  1414  004F  00A4               	movwf	_z
  1415  0050                     i1l1062:	
  1416                           
  1417                           ;Reo1.c: 78:             PIR1bits.SSPIF = 0;
  1418  0050  118C               	bcf	12,3	;volatile
  1419  0051                     i1l1064:	
  1420                           
  1421                           ;Reo1.c: 79:             SSPCONbits.CKP = 1;
  1422  0051  1614               	bsf	20,4	;volatile
  1423  0052                     i1l130:	
  1424                           ;Reo1.c: 80:             while(!SSPSTATbits.BF);
  1425                           
  1426  0052  1683               	bsf	3,5	;RP0=1, select bank1
  1427  0053  1303               	bcf	3,6	;RP1=0, select bank1
  1428  0054  1C14               	btfss	20,0	;volatile
  1429  0055  2857               	goto	u32_21
  1430  0056  2858               	goto	u32_20
  1431  0057                     u32_21:	
  1432  0057  2852               	goto	i1l130
  1433  0058                     u32_20:	
  1434  0058                     i1l1066:	
  1435                           
  1436                           ;Reo1.c: 81:             x = SSPBUF;
  1437  0058  1283               	bcf	3,5	;RP0=0, select bank0
  1438  0059  1303               	bcf	3,6	;RP1=0, select bank0
  1439  005A  0813               	movf	19,w	;volatile
  1440  005B  00F0               	movwf	??_isr
  1441  005C  0870               	movf	??_isr,w
  1442  005D  00F8               	movwf	_x
  1443                           
  1444                           ;Reo1.c: 82:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1445  005E  3053               	movlw	83
  1446  005F  00F0               	movwf	??_isr
  1447  0060                     u51_27:	
  1448  0060  0BF0               	decfsz	??_isr,f
  1449  0061  2860               	goto	u51_27
  1450                           
  1451                           ;Reo1.c: 83:         }
  1452  0062  28E5               	goto	i1l133
  1453  0063                     i1l129:	
  1454                           ;Reo1.c: 85:         else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW)
  1455                           
  1456  0063  1A94               	btfsc	20,5	;volatile
  1457  0064  2866               	goto	u33_21
  1458  0065  2867               	goto	u33_20
  1459  0066                     u33_21:	
  1460  0066  28E5               	goto	i1l133
  1461  0067                     u33_20:	
  1462  0067                     i1l1068:	
  1463  0067  1D14               	btfss	20,2	;volatile
  1464  0068  286A               	goto	u34_21
  1465  0069  286B               	goto	u34_20
  1466  006A                     u34_21:	
  1467  006A  28E5               	goto	i1l133
  1468  006B                     u34_20:	
  1469  006B                     i1l1070:	
  1470                           
  1471                           ;Reo1.c: 86:         {;Reo1.c: 87:             if (x == 1)
  1472  006B  0378               	decf	_x,w
  1473  006C  1D03               	btfss	3,2
  1474  006D  286F               	goto	u35_21
  1475  006E  2870               	goto	u35_20
  1476  006F                     u35_21:	
  1477  006F  2889               	goto	i1l1078
  1478  0070                     u35_20:	
  1479  0070                     i1l1072:	
  1480                           
  1481                           ;Reo1.c: 88:             {;Reo1.c: 89:                 z = SSPBUF;
  1482  0070  1283               	bcf	3,5	;RP0=0, select bank0
  1483  0071  1303               	bcf	3,6	;RP1=0, select bank0
  1484  0072  0813               	movf	19,w	;volatile
  1485  0073  00F0               	movwf	??_isr
  1486  0074  0870               	movf	??_isr,w
  1487  0075  00A4               	movwf	_z
  1488  0076                     i1l1074:	
  1489                           
  1490                           ;Reo1.c: 90:                 BF = 0;
  1491  0076  1683               	bsf	3,5	;RP0=1, select bank1
  1492  0077  1303               	bcf	3,6	;RP1=0, select bank1
  1493  0078  1014               	bcf	20,0	;volatile
  1494                           
  1495                           ;Reo1.c: 91:                 SSPBUF = luz;
  1496  0079  087A               	movf	_luz,w
  1497  007A  1283               	bcf	3,5	;RP0=0, select bank0
  1498  007B  1303               	bcf	3,6	;RP1=0, select bank0
  1499  007C  0093               	movwf	19	;volatile
  1500  007D                     i1l1076:	
  1501                           
  1502                           ;Reo1.c: 92:                 SSPCONbits.CKP = 1;
  1503  007D  1614               	bsf	20,4	;volatile
  1504                           
  1505                           ;Reo1.c: 93:                 _delay((unsigned long)((250)*(4000000/4000000.0)));
  1506  007E  3053               	movlw	83
  1507  007F  00F0               	movwf	??_isr
  1508  0080                     u52_27:	
  1509  0080  0BF0               	decfsz	??_isr,f
  1510  0081  2880               	goto	u52_27
  1511  0082                     i1l136:	
  1512                           ;Reo1.c: 94:                 while(SSPSTATbits.BF);
  1513                           
  1514  0082  1683               	bsf	3,5	;RP0=1, select bank1
  1515  0083  1303               	bcf	3,6	;RP1=0, select bank1
  1516  0084  1814               	btfsc	20,0	;volatile
  1517  0085  2887               	goto	u36_21
  1518  0086  2888               	goto	u36_20
  1519  0087                     u36_21:	
  1520  0087  2882               	goto	i1l136
  1521  0088                     u36_20:	
  1522  0088  28E5               	goto	i1l133
  1523  0089                     i1l1078:	
  1524  0089  3002               	movlw	2
  1525  008A  0678               	xorwf	_x,w
  1526  008B  1D03               	btfss	3,2
  1527  008C  288E               	goto	u37_21
  1528  008D  288F               	goto	u37_20
  1529  008E                     u37_21:	
  1530  008E  28A8               	goto	i1l1086
  1531  008F                     u37_20:	
  1532  008F                     i1l1080:	
  1533                           
  1534                           ;Reo1.c: 98:             {;Reo1.c: 99:                 z = SSPBUF;
  1535  008F  1283               	bcf	3,5	;RP0=0, select bank0
  1536  0090  1303               	bcf	3,6	;RP1=0, select bank0
  1537  0091  0813               	movf	19,w	;volatile
  1538  0092  00F0               	movwf	??_isr
  1539  0093  0870               	movf	??_isr,w
  1540  0094  00A4               	movwf	_z
  1541  0095                     i1l1082:	
  1542                           
  1543                           ;Reo1.c: 100:                 BF = 0;
  1544  0095  1683               	bsf	3,5	;RP0=1, select bank1
  1545  0096  1303               	bcf	3,6	;RP1=0, select bank1
  1546  0097  1014               	bcf	20,0	;volatile
  1547                           
  1548                           ;Reo1.c: 101:                 SSPBUF = humo;
  1549  0098  0879               	movf	_humo,w
  1550  0099  1283               	bcf	3,5	;RP0=0, select bank0
  1551  009A  1303               	bcf	3,6	;RP1=0, select bank0
  1552  009B  0093               	movwf	19	;volatile
  1553  009C                     i1l1084:	
  1554                           
  1555                           ;Reo1.c: 102:                 SSPCONbits.CKP = 1;
  1556  009C  1614               	bsf	20,4	;volatile
  1557                           
  1558                           ;Reo1.c: 103:                 _delay((unsigned long)((250)*(4000000/4000000.0)));
  1559  009D  3053               	movlw	83
  1560  009E  00F0               	movwf	??_isr
  1561  009F                     u53_27:	
  1562  009F  0BF0               	decfsz	??_isr,f
  1563  00A0  289F               	goto	u53_27
  1564  00A1                     i1l141:	
  1565                           ;Reo1.c: 104:                 while(SSPSTATbits.BF);
  1566                           
  1567  00A1  1683               	bsf	3,5	;RP0=1, select bank1
  1568  00A2  1303               	bcf	3,6	;RP1=0, select bank1
  1569  00A3  1814               	btfsc	20,0	;volatile
  1570  00A4  28A6               	goto	u38_21
  1571  00A5  28A7               	goto	u38_20
  1572  00A6                     u38_21:	
  1573  00A6  28A1               	goto	i1l141
  1574  00A7                     u38_20:	
  1575  00A7  28E5               	goto	i1l133
  1576  00A8                     i1l1086:	
  1577  00A8  3003               	movlw	3
  1578  00A9  0678               	xorwf	_x,w
  1579  00AA  1D03               	btfss	3,2
  1580  00AB  28AD               	goto	u39_21
  1581  00AC  28AE               	goto	u39_20
  1582  00AD                     u39_21:	
  1583  00AD  28C7               	goto	i1l1094
  1584  00AE                     u39_20:	
  1585  00AE                     i1l1088:	
  1586                           
  1587                           ;Reo1.c: 108:             {;Reo1.c: 109:                 z = SSPBUF;
  1588  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1589  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  1590  00B0  0813               	movf	19,w	;volatile
  1591  00B1  00F0               	movwf	??_isr
  1592  00B2  0870               	movf	??_isr,w
  1593  00B3  00A4               	movwf	_z
  1594  00B4                     i1l1090:	
  1595                           
  1596                           ;Reo1.c: 110:                 BF = 0;
  1597  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  1598  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  1599  00B6  1014               	bcf	20,0	;volatile
  1600                           
  1601                           ;Reo1.c: 111:                 SSPBUF = tiempoL;
  1602  00B7  0877               	movf	_tiempoL,w
  1603  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1604  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1605  00BA  0093               	movwf	19	;volatile
  1606  00BB                     i1l1092:	
  1607                           
  1608                           ;Reo1.c: 112:                 SSPCONbits.CKP = 1;
  1609  00BB  1614               	bsf	20,4	;volatile
  1610                           
  1611                           ;Reo1.c: 113:                 _delay((unsigned long)((250)*(4000000/4000000.0)));
  1612  00BC  3053               	movlw	83
  1613  00BD  00F0               	movwf	??_isr
  1614  00BE                     u54_27:	
  1615  00BE  0BF0               	decfsz	??_isr,f
  1616  00BF  28BE               	goto	u54_27
  1617  00C0                     i1l146:	
  1618                           ;Reo1.c: 114:                 while(SSPSTATbits.BF);
  1619                           
  1620  00C0  1683               	bsf	3,5	;RP0=1, select bank1
  1621  00C1  1303               	bcf	3,6	;RP1=0, select bank1
  1622  00C2  1814               	btfsc	20,0	;volatile
  1623  00C3  28C5               	goto	u40_21
  1624  00C4  28C6               	goto	u40_20
  1625  00C5                     u40_21:	
  1626  00C5  28C0               	goto	i1l146
  1627  00C6                     u40_20:	
  1628  00C6  28E5               	goto	i1l133
  1629  00C7                     i1l1094:	
  1630  00C7  3004               	movlw	4
  1631  00C8  0678               	xorwf	_x,w
  1632  00C9  1D03               	btfss	3,2
  1633  00CA  28CC               	goto	u41_21
  1634  00CB  28CD               	goto	u41_20
  1635  00CC                     u41_21:	
  1636  00CC  28E5               	goto	i1l133
  1637  00CD                     u41_20:	
  1638  00CD                     i1l1096:	
  1639                           
  1640                           ;Reo1.c: 118:             {;Reo1.c: 119:                 z = SSPBUF;
  1641  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1642  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1643  00CF  0813               	movf	19,w	;volatile
  1644  00D0  00F0               	movwf	??_isr
  1645  00D1  0870               	movf	??_isr,w
  1646  00D2  00A4               	movwf	_z
  1647  00D3                     i1l1098:	
  1648                           
  1649                           ;Reo1.c: 120:                 BF = 0;
  1650  00D3  1683               	bsf	3,5	;RP0=1, select bank1
  1651  00D4  1303               	bcf	3,6	;RP1=0, select bank1
  1652  00D5  1014               	bcf	20,0	;volatile
  1653                           
  1654                           ;Reo1.c: 121:                 SSPBUF = tiempoH;
  1655  00D6  0876               	movf	_tiempoH,w
  1656  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1657  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1658  00D9  0093               	movwf	19	;volatile
  1659  00DA                     i1l1100:	
  1660                           
  1661                           ;Reo1.c: 122:                 SSPCONbits.CKP = 1;
  1662  00DA  1614               	bsf	20,4	;volatile
  1663                           
  1664                           ;Reo1.c: 123:                 _delay((unsigned long)((250)*(4000000/4000000.0)));
  1665  00DB  3053               	movlw	83
  1666  00DC  00F0               	movwf	??_isr
  1667  00DD                     u55_27:	
  1668  00DD  0BF0               	decfsz	??_isr,f
  1669  00DE  28DD               	goto	u55_27
  1670  00DF                     i1l151:	
  1671                           ;Reo1.c: 124:                 while(SSPSTATbits.BF);
  1672                           
  1673  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  1674  00E0  1303               	bcf	3,6	;RP1=0, select bank1
  1675  00E1  1814               	btfsc	20,0	;volatile
  1676  00E2  28E4               	goto	u42_21
  1677  00E3  28E5               	goto	u42_20
  1678  00E4                     u42_21:	
  1679  00E4  28DF               	goto	i1l151
  1680  00E5                     u42_20:	
  1681  00E5                     i1l133:	
  1682                           
  1683                           ;Reo1.c: 128:         PIR1bits.SSPIF = 0;
  1684  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1685  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1686  00E7  118C               	bcf	12,3	;volatile
  1687  00E8                     i1l154:	
  1688  00E8  0872               	movf	??_isr+2,w
  1689  00E9  008A               	movwf	10
  1690  00EA  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  1691  00EB  0083               	movwf	3
  1692  00EC  0EFE               	swapf	btemp,f
  1693  00ED  0E7E               	swapf	btemp,w
  1694  00EE  0009               	retfie
  1695  00EF                     __end_of_isr:	
  1696  007E                     btemp	set	126	;btemp
  1697  007E                     wtemp0	set	126
  1698                           
  1699                           	psect	intentry
  1700  0004                     __pintentry:	
  1701                           ;incstack = 0
  1702                           ; Regs used in _isr: [wreg+status,2+status,0]
  1703                           
  1704  0004                     interrupt_function:	
  1705  007E                     saved_w	set	btemp
  1706  0004  00FE               	movwf	btemp
  1707  0005  0E03               	swapf	3,w
  1708  0006  00F1               	movwf	??_isr+1
  1709  0007  080A               	movf	10,w
  1710  0008  00F2               	movwf	??_isr+2
  1711  0009  120A  118A  281C   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80      3       5
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_iniciarOSC
    _main->_leerADC

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_leerADC

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     190
                                              2 BANK0      1     1      0
                          _I2C_Negro
                         _cronometro
                         _iniciarADC
                         _iniciarOSC
                            _leerADC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _leerADC                                              5     3      2      62
                                              3 COMMON     3     1      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _iniciarOSC                                           3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _iniciarADC                                           2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _cronometro                                           1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Negro                                            1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Negro
   _cronometro
   _iniciarADC
   _iniciarOSC
   _leerADC
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       5       5        6.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Mar 13 19:12:38 2020

                       _x 0078        __size_of_I2C_Negro 001A                         _z 0024  
             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        _BF 04A0  
                      l81 020B                        l91 025C                        l77 0204  
                      l85 01DA                        l86 01CF                        l96 014E  
                      u40 021C                        u41 021B                        u50 0221  
                      u51 0220                       l105 014F                       l160 0218  
                     l162 021C                       l163 021D                       l165 0221  
                     l157 0242                       l166 0227                       l800 0244  
                     l810 0256                       l802 0252                       l812 0259  
                     l804 0253                       l820 00FD                       l806 0254  
                     l830 0120                       l822 0104                       l814 00F0  
                     l808 0255                       l832 0125                       l824 010B  
                     l816 00F1                       l826 0112                       l818 00F6  
                     l850 0231                       l842 0228                       l828 0119  
                     l836 012C                       l860 023A                       l852 0232  
                     l844 022C                       l870 0211                       l862 023D  
                     l854 0233                       l846 022D                       l872 0215  
                     l864 023E                       l856 0238                       l848 022E  
                     l874 0222                       l866 020C                       l858 0239  
                     l876 0226                       l868 0210                       _GIE 005F  
                     u430 01AC                       u431 01AB                       u450 01D3  
            __CFG_CPD$OFF 0000                       u451 01D2                       u445 01B8  
                     u467 017E                       u477 0198                       u487 01C8  
                     u497 0213                       _isr 001C                       _luz 007A  
            __CFG_LVP$OFF 0000                      l1010 01EF                      l1002 01DB  
                    l1004 01DC                      l1006 01E1                      l1014 01F4  
                    l1008 01E8                      l1160 01A6                      l1234 0134  
                    l1170 01CC                      l1162 01AC                      l1236 01F9  
                    l1172 01D3                      l1180 015B                      l1166 01AF  
                    l1190 0188                      l1182 016A                      l1168 01C2  
                    l1192 0194                      l1184 016E                      l1176 0150  
                    l1186 017A                      l1178 0156                      l1188 0182  
                    ?_isr 0070                      _PEIE 005E              __CFG_WRT$OFF 0000  
                    _dato 0023                      _main 0150                      _humo 0079  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_isr 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     _T1CON 0010                     i1l130 0052  
                   i1l141 00A1                     i1l133 00E5                     i1l151 00DF  
                   i1l136 0082                     i1l129 0063                     i1l146 00C0  
                   i1l154 00E8                     u30_20 0046                     u30_21 0045  
                   u31_20 004A                     u31_21 0049                     u40_20 00C6  
                   u32_20 0058                     u40_21 00C5                     u32_21 0057  
                   u41_20 00CD                     u33_20 0067                     u41_21 00CC  
                   u33_21 0066                     _TMR1H 000F                     _TMR1L 000E  
                   u42_20 00E5                     u34_20 006B                     u26_20 0022  
                   u42_21 00E4                     u34_21 006A                     u26_21 0021  
                   u50_27 0025                     u35_20 0070                     u27_20 0030  
                   u35_21 006F                     u27_21 002F                     _PORTA 0005  
                   _PORTD 0008                     u51_27 0060                     u36_20 0088  
                   u28_20 0035                     u36_21 0087                     u28_21 0034  
                   u52_27 0080                     u37_20 008F                     u29_20 0039  
                   u37_21 008E                     u29_21 0038                     u53_27 009F  
                   u38_20 00A7                     u38_21 00A6                     u54_27 00BE  
                   u39_20 00AE                     u39_21 00AD                     u55_27 00DD  
                   _SSPIE 0463                     _SSPIF 0063            __CFG_FCMEN$OFF 0000  
         __end_of_leerADC 01DB         __end_of_I2C_Negro 025D                     _setup 0228  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 01A5                    ??_main 0022            iniciarADC@conv 0073  
                  _ADCON0 001F                    _ADRESH 001E                    ?_setup 0070  
                  _ANSELH 0189                    i1l1100 00DA                    i1l1040 0023  
                  i1l1050 003D                    i1l1042 002A                    i1l1060 004A  
                  i1l1052 003E                    i1l1044 0030                    i1l1036 001C  
                  i1l1070 006B                    i1l1062 0050                    i1l1054 003F  
                  i1l1046 0035                    i1l1038 0022                    i1l1080 008F  
                  i1l1072 0070                    i1l1064 0051                    i1l1056 0040  
                  i1l1048 0039                    i1l1090 00B4                    i1l1082 0095  
                  i1l1074 0076                    i1l1066 0058                    i1l1058 0046  
                  i1l1092 00BB                    i1l1084 009C                    i1l1076 007D  
                  i1l1068 0067                    i1l1094 00C7                    i1l1086 00A8  
                  i1l1078 0089                    i1l1096 00CD                    i1l1088 00AE  
                  i1l1098 00D3                    _SSPADD 0093                    _TRISC3 043B  
                  _TRISC4 043C                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000            iniciarOSC@frec 0075                 ??_leerADC 0020  
                  saved_w 007E   __end_of__initialization 0018            __pcstackCOMMON 0070  
           __end_of_setup 0243                   ??_setup 0073                __pbssBANK0 0023  
              __pmaintext 0150                __pintentry 0004                   _SSPCON2 0091  
                 _SSPSTAT 0094                 _I2C_Negro 0243                _iniciarADC 01DB  
              _cronometro 020C                _iniciarOSC 00EF          I2C_Negro@address 0073  
               _ANSELbits 0188                   __ptext1 0228                   __ptext2 01A5  
                 __ptext3 00EF                   __ptext4 01DB                   __ptext5 020C  
                 __ptext6 0243                   __ptext7 001C                   _leerADC 01A5  
               _T1CONbits 0010              __size_of_isr 00D3                   _tiempoH 0076  
                 _tiempoL 0077      end_of_initialization 0018                ?_I2C_Negro 0070  
               _PORTDbits 0008                 _TRISAbits 0085                 _TRISDbits 0088  
             ?_iniciarADC 0073               ?_cronometro 0070               ?_iniciarOSC 0070  
     start_initialization 000F               __end_of_isr 00EF               ??_I2C_Negro 0073  
__CFG_FOSC$INTRC_NOCLKOUT 0000               __pbssCOMMON 0076                 ___latbits 0002  
           __pcstackBANK0 0020       __size_of_iniciarADC 0031       __size_of_cronometro 001C  
     __size_of_iniciarOSC 0061                  ?_leerADC 0073            __size_of_setup 001B  
       interrupt_function 0004                  _PIE1bits 008C                  _PIR1bits 000C  
                _GO_nDONE 00F9                _ADCON0bits 001F                _ADCON1bits 009F  
            ??_iniciarADC 0075              ??_cronometro 0073              ??_iniciarOSC 0073  
        __size_of_leerADC 0036        __end_of_iniciarADC 020C        __end_of_cronometro 0228  
      __end_of_iniciarOSC 0150         __CFG_BOR4V$BOR40V 0000             __size_of_main 0055  
              _INTCONbits 000B                  intlevel1 0000                _OSCCONbits 008F  
          leerADC@channel 0075                _SSPCONbits 0014  
