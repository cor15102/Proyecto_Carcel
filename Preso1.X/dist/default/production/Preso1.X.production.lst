

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Mar 14 18:17:10 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.10
    20                           ; Generated 31/07/2019 GMT
    21                           ; 
    22                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  000B                     _INTCONbits	set	11
   210  0005                     _PORTA	set	5
   211  0013                     _SSPBUF	set	19
   212  0014                     _SSPCONbits	set	20
   213  000C                     _PIR1bits	set	12
   214  0014                     _SSPCON	set	20
   215  001E                     _ADRESH	set	30
   216  001F                     _ADCON0	set	31
   217  001F                     _ADCON0bits	set	31
   218  0063                     _SSPIF	set	99
   219  005E                     _PEIE	set	94
   220  005F                     _GIE	set	95
   221  00F9                     _GO_nDONE	set	249
   222  008C                     _PIE1bits	set	140
   223  0085                     _TRISAbits	set	133
   224  0094                     _SSPSTATbits	set	148
   225  008F                     _OSCCONbits	set	143
   226  0091                     _SSPCON2	set	145
   227  0094                     _SSPSTAT	set	148
   228  0093                     _SSPADD	set	147
   229  009F                     _ADCON1bits	set	159
   230  04A0                     _BF	set	1184
   231  0463                     _SSPIE	set	1123
   232  043C                     _TRISC4	set	1084
   233  043B                     _TRISC3	set	1083
   234  0188                     _ANSELbits	set	392
   235  0189                     _ANSELH	set	393
   236  0188                     _ANSEL	set	392
   237                           
   238                           ; #config settings
   239  0000                     
   240                           	psect	cinit
   241  000F                     start_initialization:	
   242  000F                     __initialization:	
   243                           
   244                           ; Clear objects allocated to COMMON
   245  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   246  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   247  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   248  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   249                           
   250                           ; Clear objects allocated to BANK0
   251  0013  1283               	bcf	3,5	;RP0=0, select bank0
   252  0014  1303               	bcf	3,6	;RP1=0, select bank0
   253  0015  01A4               	clrf	__pbssBANK0& (0+127)
   254  0016  01A5               	clrf	(__pbssBANK0+1)& (0+127)
   255  0017                     end_of_initialization:	
   256                           ;End of C runtime variable initialization code
   257                           
   258  0017                     __end_of__initialization:	
   259  0017  0183               	clrf	3
   260  0018  120A  118A  2915   	ljmp	_main	;jump to C main() function
   261                           
   262                           	psect	bssCOMMON
   263  0076                     __pbssCOMMON:	
   264  0076                     _x:	
   265  0076                     	ds	1
   266  0077                     _z:	
   267  0077                     	ds	1
   268  0078                     _humo:	
   269  0078                     	ds	1
   270  0079                     _luz:	
   271  0079                     	ds	1
   272                           
   273                           	psect	bssBANK0
   274  0024                     __pbssBANK0:	
   275  0024                     _y:	
   276  0024                     	ds	1
   277  0025                     _dato:	
   278  0025                     	ds	1
   279                           
   280                           	psect	cstackCOMMON
   281  0070                     __pcstackCOMMON:	
   282  0070                     ?_I2C_Negro:	
   283  0070                     ?_iniciarOSC:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ?_isr:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ??_isr:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ?_setup:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0070                     ?_main:	
   296                           ; 1 bytes @ 0x0
   297                           
   298                           
   299                           ; 1 bytes @ 0x0
   300  0070                     	ds	4
   301  0074                     ?_iniciarADC:	
   302  0074                     ??_I2C_Negro:	
   303                           ; 1 bytes @ 0x4
   304                           
   305  0074                     ??_iniciarOSC:	
   306                           ; 1 bytes @ 0x4
   307                           
   308  0074                     ??_setup:	
   309                           ; 1 bytes @ 0x4
   310                           
   311  0074                     ?_leerADC:	
   312                           ; 1 bytes @ 0x4
   313                           
   314  0074                     I2C_Negro@address:	
   315                           ; 2 bytes @ 0x4
   316                           
   317  0074                     iniciarADC@conv:	
   318                           ; 1 bytes @ 0x4
   319                           
   320                           
   321                           ; 2 bytes @ 0x4
   322  0074                     	ds	2
   323  0076                     ??_iniciarADC:	
   324                           
   325                           	psect	cstackBANK0
   326  0020                     __pcstackBANK0:	
   327                           ; 1 bytes @ 0x6
   328                           
   329  0020                     ??_leerADC:	
   330  0020                     iniciarOSC@frec:	
   331                           ; 1 bytes @ 0x0
   332                           
   333                           
   334                           ; 1 bytes @ 0x0
   335  0020                     	ds	2
   336  0022                     leerADC@channel:	
   337                           
   338                           ; 1 bytes @ 0x2
   339  0022                     	ds	1
   340  0023                     ??_main:	
   341                           
   342                           ; 1 bytes @ 0x3
   343  0023                     	ds	1
   344                           
   345                           	psect	maintext
   346  0115                     __pmaintext:	
   347 ;;
   348 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   349 ;;
   350 ;; *************** function _main *****************
   351 ;; Defined at:
   352 ;;		line 128 in file "Reo1.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;		None
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      void 
   359 ;; Registers used:
   360 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   361 ;; Tracked objects:
   362 ;;		On entry : B00/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   366 ;;      Params:         0       0       0       0       0
   367 ;;      Locals:         0       0       0       0       0
   368 ;;      Temps:          0       1       0       0       0
   369 ;;      Totals:         0       1       0       0       0
   370 ;;Total ram usage:        1 bytes
   371 ;; Hardware stack levels required when called:    2
   372 ;; This function calls:
   373 ;;		_I2C_Negro
   374 ;;		_iniciarADC
   375 ;;		_iniciarOSC
   376 ;;		_leerADC
   377 ;;		_setup
   378 ;; This function is called by:
   379 ;;		Startup code after reset
   380 ;; This function uses a non-reentrant model
   381 ;;
   382                           
   383                           
   384                           ;psect for function _main
   385  0115                     _main:	
   386  0115                     l1119:	
   387                           ;incstack = 0
   388                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   389                           
   390                           
   391                           ;Reo1.c: 130:     iniciarOSC(6);
   392  0115  3006               	movlw	6
   393  0116  120A  118A  20B2  120A  118A  	fcall	_iniciarOSC
   394  011B                     l1121:	
   395                           
   396                           ;Reo1.c: 132:     setup();
   397  011B  120A  118A  21E6  120A  118A  	fcall	_setup
   398  0120                     l1123:	
   399                           
   400                           ;Reo1.c: 134:     iniciarADC(2);
   401  0120  3002               	movlw	2
   402  0121  00F4               	movwf	iniciarADC@conv
   403  0122  3000               	movlw	0
   404  0123  00F5               	movwf	iniciarADC@conv+1
   405  0124  120A  118A  219B  120A  118A  	fcall	_iniciarADC
   406  0129                     l1125:	
   407                           
   408                           ;Reo1.c: 136:     I2C_Negro(0x20);
   409  0129  3020               	movlw	32
   410  012A  120A  118A  21CC  120A  118A  	fcall	_I2C_Negro
   411  012F                     l1127:	
   412                           
   413                           ;Reo1.c: 139:     {;Reo1.c: 140:         ADCON0bits.CHS = 0b0000;
   414  012F  30C3               	movlw	-61
   415  0130  1283               	bcf	3,5	;RP0=0, select bank0
   416  0131  1303               	bcf	3,6	;RP1=0, select bank0
   417  0132  059F               	andwf	31,f	;volatile
   418  0133                     l1129:	
   419                           
   420                           ;Reo1.c: 141:         luz = leerADC(0);
   421  0133  3000               	movlw	0
   422  0134  120A  118A  2165  120A  118A  	fcall	_leerADC
   423  0139  0874               	movf	?_leerADC,w
   424  013A  1283               	bcf	3,5	;RP0=0, select bank0
   425  013B  1303               	bcf	3,6	;RP1=0, select bank0
   426  013C  00A3               	movwf	??_main
   427  013D  0823               	movf	??_main,w
   428  013E  00F9               	movwf	_luz
   429  013F                     l1131:	
   430                           
   431                           ;Reo1.c: 142:         _delay((unsigned long)((1)*(4000000/4000.0)));
   432  013F  30C7               	movlw	199
   433  0140  1283               	bcf	3,5	;RP0=0, select bank0
   434  0141  1303               	bcf	3,6	;RP1=0, select bank0
   435  0142  00A3               	movwf	??_main
   436  0143                     u367:	
   437  0143  2944               	nop2
   438  0144  0BA3               	decfsz	??_main,f
   439  0145  2943               	goto	u367
   440  0146  2947               	nop2
   441  0147                     l1133:	
   442                           
   443                           ;Reo1.c: 144:         ADCON0bits.CHS = 0b0001;
   444  0147  1283               	bcf	3,5	;RP0=0, select bank0
   445  0148  1303               	bcf	3,6	;RP1=0, select bank0
   446  0149  081F               	movf	31,w	;volatile
   447  014A  39C3               	andlw	-61
   448  014B  3804               	iorlw	4
   449  014C  009F               	movwf	31	;volatile
   450                           
   451                           ;Reo1.c: 145:         humo = leerADC(0);
   452  014D  3000               	movlw	0
   453  014E  120A  118A  2165  120A  118A  	fcall	_leerADC
   454  0153  0874               	movf	?_leerADC,w
   455  0154  1283               	bcf	3,5	;RP0=0, select bank0
   456  0155  1303               	bcf	3,6	;RP1=0, select bank0
   457  0156  00A3               	movwf	??_main
   458  0157  0823               	movf	??_main,w
   459  0158  00F8               	movwf	_humo
   460  0159                     l1135:	
   461                           
   462                           ;Reo1.c: 146:         _delay((unsigned long)((1)*(4000000/4000.0)));
   463  0159  30C7               	movlw	199
   464  015A  1283               	bcf	3,5	;RP0=0, select bank0
   465  015B  1303               	bcf	3,6	;RP1=0, select bank0
   466  015C  00A3               	movwf	??_main
   467  015D                     u377:	
   468  015D  295E               	nop2
   469  015E  0BA3               	decfsz	??_main,f
   470  015F  295D               	goto	u377
   471  0160  2961               	nop2
   472  0161  292F               	goto	l1127
   473  0162  120A  118A  280C   	ljmp	start
   474  0165                     __end_of_main:	
   475                           
   476                           	psect	text1
   477  01E6                     __ptext1:	
   478 ;; *************** function _setup *****************
   479 ;; Defined at:
   480 ;;		line 110 in file "Reo1.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;		None
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		status,2
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   494 ;;      Params:         0       0       0       0       0
   495 ;;      Locals:         0       0       0       0       0
   496 ;;      Temps:          0       0       0       0       0
   497 ;;      Totals:         0       0       0       0       0
   498 ;;Total ram usage:        0 bytes
   499 ;; Hardware stack levels used:    1
   500 ;; Hardware stack levels required when called:    1
   501 ;; This function calls:
   502 ;;		Nothing
   503 ;; This function is called by:
   504 ;;		_main
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508                           
   509                           ;psect for function _setup
   510  01E6                     _setup:	
   511  01E6                     l807:	
   512                           ;incstack = 0
   513                           ; Regs used in _setup: [status,2]
   514                           
   515                           
   516                           ;Reo1.c: 112:     ANSEL = 0;
   517  01E6  1683               	bsf	3,5	;RP0=1, select bank3
   518  01E7  1703               	bsf	3,6	;RP1=1, select bank3
   519  01E8  0188               	clrf	8	;volatile
   520                           
   521                           ;Reo1.c: 113:     ANSELH = 0;
   522  01E9  0189               	clrf	9	;volatile
   523  01EA                     l809:	
   524                           
   525                           ;Reo1.c: 115:     ANSELbits.ANS0 = 1;
   526  01EA  1408               	bsf	8,0	;volatile
   527  01EB                     l811:	
   528                           
   529                           ;Reo1.c: 116:     ANSELbits.ANS1 = 1;
   530  01EB  1488               	bsf	8,1	;volatile
   531  01EC                     l813:	
   532                           
   533                           ;Reo1.c: 118:     TRISAbits.TRISA0 = 1;
   534  01EC  1683               	bsf	3,5	;RP0=1, select bank1
   535  01ED  1303               	bcf	3,6	;RP1=0, select bank1
   536  01EE  1405               	bsf	5,0	;volatile
   537  01EF                     l815:	
   538                           
   539                           ;Reo1.c: 119:     TRISAbits.TRISA1 = 1;
   540  01EF  1485               	bsf	5,1	;volatile
   541                           
   542                           ;Reo1.c: 121:     PORTA = 0;
   543  01F0  1283               	bcf	3,5	;RP0=0, select bank0
   544  01F1  1303               	bcf	3,6	;RP1=0, select bank0
   545  01F2  0185               	clrf	5	;volatile
   546  01F3                     l817:	
   547                           
   548                           ;Reo1.c: 123:     INTCONbits.GIE = 1;
   549  01F3  178B               	bsf	11,7	;volatile
   550  01F4                     l819:	
   551                           
   552                           ;Reo1.c: 124:     INTCONbits.PEIE = 1;
   553  01F4  170B               	bsf	11,6	;volatile
   554  01F5                     l821:	
   555                           
   556                           ;Reo1.c: 125:     PIE1bits.ADIE = 1;
   557  01F5  1683               	bsf	3,5	;RP0=1, select bank1
   558  01F6  1303               	bcf	3,6	;RP1=0, select bank1
   559  01F7  170C               	bsf	12,6	;volatile
   560  01F8                     l131:	
   561  01F8  0008               	return
   562  01F9                     __end_of_setup:	
   563                           
   564                           	psect	text2
   565  0165                     __ptext2:	
   566 ;; *************** function _leerADC *****************
   567 ;; Defined at:
   568 ;;		line 128 in file "./ADC.h"
   569 ;; Parameters:    Size  Location     Type
   570 ;;  channel         1    wreg     unsigned char 
   571 ;; Auto vars:     Size  Location     Type
   572 ;;  channel         1    2[BANK0 ] unsigned char 
   573 ;; Return value:  Size  Location     Type
   574 ;;                  2    4[COMMON] unsigned int 
   575 ;; Registers used:
   576 ;;		wreg, status,2, status,0
   577 ;; Tracked objects:
   578 ;;		On entry : 0/0
   579 ;;		On exit  : 0/0
   580 ;;		Unchanged: 0/0
   581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   582 ;;      Params:         2       0       0       0       0
   583 ;;      Locals:         0       1       0       0       0
   584 ;;      Temps:          0       2       0       0       0
   585 ;;      Totals:         2       3       0       0       0
   586 ;;Total ram usage:        5 bytes
   587 ;; Hardware stack levels used:    1
   588 ;; Hardware stack levels required when called:    1
   589 ;; This function calls:
   590 ;;		Nothing
   591 ;; This function is called by:
   592 ;;		_main
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           
   597                           ;psect for function _leerADC
   598  0165                     _leerADC:	
   599                           
   600                           ;incstack = 0
   601                           ; Regs used in _leerADC: [wreg+status,2+status,0]
   602                           ;leerADC@channel stored from wreg
   603  0165  1283               	bcf	3,5	;RP0=0, select bank0
   604  0166  1303               	bcf	3,6	;RP1=0, select bank0
   605  0167  00A2               	movwf	leerADC@channel
   606  0168                     l1073:	
   607                           
   608                           ;./ADC.h: 128: unsigned int leerADC(unsigned char channel);./ADC.h: 129: {;./ADC.h: 130:
      +                               if(channel > 7)
   609  0168  3008               	movlw	8
   610  0169  0222               	subwf	leerADC@channel,w
   611  016A  1C03               	skipc
   612  016B  296D               	goto	u331
   613  016C  296E               	goto	u330
   614  016D                     u331:	
   615  016D  2971               	goto	l1079
   616  016E                     u330:	
   617  016E                     l1075:	
   618                           
   619                           ;./ADC.h: 131:     {;./ADC.h: 132:         return 0;
   620  016E  01F4               	clrf	?_leerADC
   621  016F  01F5               	clrf	?_leerADC+1
   622  0170  299A               	goto	l71
   623  0171                     l1079:	
   624                           
   625                           ;./ADC.h: 135:     ADCON0 &= 0xC5;
   626  0171  30C5               	movlw	197
   627  0172  00A0               	movwf	??_leerADC
   628  0173  0820               	movf	??_leerADC,w
   629  0174  059F               	andwf	31,f	;volatile
   630                           
   631                           ;./ADC.h: 136:     ADCON0 |= channel<<3;
   632  0175  0822               	movf	leerADC@channel,w	;volatile
   633  0176  00A0               	movwf	??_leerADC
   634  0177  3002               	movlw	2
   635  0178                     u345:	
   636  0178  1003               	clrc
   637  0179  0DA0               	rlf	??_leerADC,f
   638  017A  3EFF               	addlw	-1
   639  017B  1D03               	skipz
   640  017C  2978               	goto	u345
   641  017D  1003               	clrc
   642  017E  0D20               	rlf	??_leerADC,w
   643  017F  00A1               	movwf	??_leerADC+1
   644  0180  0821               	movf	??_leerADC+1,w
   645  0181  049F               	iorwf	31,f	;volatile
   646  0182                     l1081:	
   647                           
   648                           ;./ADC.h: 137:     _delay((unsigned long)((2)*(4000000/4000.0)));
   649  0182  3003               	movlw	3
   650  0183  1283               	bcf	3,5	;RP0=0, select bank0
   651  0184  1303               	bcf	3,6	;RP1=0, select bank0
   652  0185  00A1               	movwf	??_leerADC+1
   653  0186  3097               	movlw	151
   654  0187  00A0               	movwf	??_leerADC
   655  0188                     u387:	
   656  0188  0BA0               	decfsz	??_leerADC,f
   657  0189  2988               	goto	u387
   658  018A  0BA1               	decfsz	??_leerADC+1,f
   659  018B  2988               	goto	u387
   660  018C                     l1083:	
   661                           
   662                           ;./ADC.h: 138:     GO_nDONE = 1;
   663  018C  1283               	bcf	3,5	;RP0=0, select bank0
   664  018D  1303               	bcf	3,6	;RP1=0, select bank0
   665  018E  149F               	bsf	31,1	;volatile
   666  018F                     l72:	
   667                           ;./ADC.h: 141:     {;./ADC.h: 142:     }
   668                           
   669                           
   670                           ;./ADC.h: 140:     while(GO_nDONE)
   671  018F  189F               	btfsc	31,1	;volatile
   672  0190  2992               	goto	u351
   673  0191  2993               	goto	u350
   674  0192                     u351:	
   675  0192  298F               	goto	l72
   676  0193                     u350:	
   677  0193                     l1085:	
   678                           
   679                           ;./ADC.h: 144:     return (ADRESH);
   680  0193  081E               	movf	30,w	;volatile
   681  0194  00A0               	movwf	??_leerADC
   682  0195  01A1               	clrf	??_leerADC+1
   683  0196  0820               	movf	??_leerADC,w
   684  0197  00F4               	movwf	?_leerADC
   685  0198  0821               	movf	??_leerADC+1,w
   686  0199  00F5               	movwf	?_leerADC+1
   687  019A                     l71:	
   688  019A  0008               	return
   689  019B                     __end_of_leerADC:	
   690                           
   691                           	psect	text3
   692  00B2                     __ptext3:	
   693 ;; *************** function _iniciarOSC *****************
   694 ;; Defined at:
   695 ;;		line 5 in file "./Oscilador.h"
   696 ;; Parameters:    Size  Location     Type
   697 ;;  frec            1    wreg     unsigned char 
   698 ;; Auto vars:     Size  Location     Type
   699 ;;  frec            1    0[BANK0 ] unsigned char 
   700 ;; Return value:  Size  Location     Type
   701 ;;                  1    wreg      void 
   702 ;; Registers used:
   703 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   704 ;; Tracked objects:
   705 ;;		On entry : 0/0
   706 ;;		On exit  : 0/0
   707 ;;		Unchanged: 0/0
   708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   709 ;;      Params:         0       0       0       0       0
   710 ;;      Locals:         0       1       0       0       0
   711 ;;      Temps:          2       0       0       0       0
   712 ;;      Totals:         2       1       0       0       0
   713 ;;Total ram usage:        3 bytes
   714 ;; Hardware stack levels used:    1
   715 ;; Hardware stack levels required when called:    1
   716 ;; This function calls:
   717 ;;		Nothing
   718 ;; This function is called by:
   719 ;;		_main
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           
   724                           ;psect for function _iniciarOSC
   725  00B2                     _iniciarOSC:	
   726                           
   727                           ;incstack = 0
   728                           ; Regs used in _iniciarOSC: [wreg-fsr0h+status,2+status,0]
   729                           ;iniciarOSC@frec stored from wreg
   730  00B2  1283               	bcf	3,5	;RP0=0, select bank0
   731  00B3  1303               	bcf	3,6	;RP1=0, select bank0
   732  00B4  00A0               	movwf	iniciarOSC@frec
   733  00B5                     l1089:	
   734                           
   735                           ;./Oscilador.h: 5: void iniciarOSC(uint8_t frec);./Oscilador.h: 6: {;./Oscilador.h: 7:  
      +                             switch(frec)
   736  00B5  28F1               	goto	l1111
   737  00B6                     l1091:	
   738                           
   739                           ;./Oscilador.h: 10:             OSCCONbits.IRCF = 0b000;
   740  00B6  308F               	movlw	-113
   741  00B7  1683               	bsf	3,5	;RP0=1, select bank1
   742  00B8  1303               	bcf	3,6	;RP1=0, select bank1
   743  00B9  058F               	andwf	15,f	;volatile
   744                           
   745                           ;./Oscilador.h: 11:             break;
   746  00BA  2913               	goto	l82
   747  00BB                     l1093:	
   748                           
   749                           ;./Oscilador.h: 14:             OSCCONbits.IRCF = 0b001;
   750  00BB  1683               	bsf	3,5	;RP0=1, select bank1
   751  00BC  1303               	bcf	3,6	;RP1=0, select bank1
   752  00BD  080F               	movf	15,w	;volatile
   753  00BE  398F               	andlw	-113
   754  00BF  3810               	iorlw	16
   755  00C0  008F               	movwf	15	;volatile
   756                           
   757                           ;./Oscilador.h: 15:             break;
   758  00C1  2913               	goto	l82
   759  00C2                     l1095:	
   760                           
   761                           ;./Oscilador.h: 18:             OSCCONbits.IRCF = 0b010;
   762  00C2  1683               	bsf	3,5	;RP0=1, select bank1
   763  00C3  1303               	bcf	3,6	;RP1=0, select bank1
   764  00C4  080F               	movf	15,w	;volatile
   765  00C5  398F               	andlw	-113
   766  00C6  3820               	iorlw	32
   767  00C7  008F               	movwf	15	;volatile
   768                           
   769                           ;./Oscilador.h: 19:             break;
   770  00C8  2913               	goto	l82
   771  00C9                     l1097:	
   772                           
   773                           ;./Oscilador.h: 22:             OSCCONbits.IRCF = 0b001;
   774  00C9  1683               	bsf	3,5	;RP0=1, select bank1
   775  00CA  1303               	bcf	3,6	;RP1=0, select bank1
   776  00CB  080F               	movf	15,w	;volatile
   777  00CC  398F               	andlw	-113
   778  00CD  3810               	iorlw	16
   779  00CE  008F               	movwf	15	;volatile
   780                           
   781                           ;./Oscilador.h: 23:             break;
   782  00CF  2913               	goto	l82
   783  00D0                     l1099:	
   784                           
   785                           ;./Oscilador.h: 26:             OSCCONbits.IRCF = 0b100;
   786  00D0  1683               	bsf	3,5	;RP0=1, select bank1
   787  00D1  1303               	bcf	3,6	;RP1=0, select bank1
   788  00D2  080F               	movf	15,w	;volatile
   789  00D3  398F               	andlw	-113
   790  00D4  3840               	iorlw	64
   791  00D5  008F               	movwf	15	;volatile
   792                           
   793                           ;./Oscilador.h: 27:             break;
   794  00D6  2913               	goto	l82
   795  00D7                     l1101:	
   796                           
   797                           ;./Oscilador.h: 30:             OSCCONbits.IRCF = 0b101;
   798  00D7  1683               	bsf	3,5	;RP0=1, select bank1
   799  00D8  1303               	bcf	3,6	;RP1=0, select bank1
   800  00D9  080F               	movf	15,w	;volatile
   801  00DA  398F               	andlw	-113
   802  00DB  3850               	iorlw	80
   803  00DC  008F               	movwf	15	;volatile
   804                           
   805                           ;./Oscilador.h: 31:             break;
   806  00DD  2913               	goto	l82
   807  00DE                     l1103:	
   808                           
   809                           ;./Oscilador.h: 34:             OSCCONbits.IRCF = 0b110;
   810  00DE  1683               	bsf	3,5	;RP0=1, select bank1
   811  00DF  1303               	bcf	3,6	;RP1=0, select bank1
   812  00E0  080F               	movf	15,w	;volatile
   813  00E1  398F               	andlw	-113
   814  00E2  3860               	iorlw	96
   815  00E3  008F               	movwf	15	;volatile
   816                           
   817                           ;./Oscilador.h: 35:             break;
   818  00E4  2913               	goto	l82
   819  00E5                     l1105:	
   820                           
   821                           ;./Oscilador.h: 38:             OSCCONbits.IRCF = 0b111;
   822  00E5  3070               	movlw	112
   823  00E6  1683               	bsf	3,5	;RP0=1, select bank1
   824  00E7  1303               	bcf	3,6	;RP1=0, select bank1
   825  00E8  048F               	iorwf	15,f	;volatile
   826                           
   827                           ;./Oscilador.h: 39:             break;
   828  00E9  2913               	goto	l82
   829  00EA                     l1107:	
   830                           
   831                           ;./Oscilador.h: 42:             OSCCONbits.IRCF = 0b110;
   832  00EA  1683               	bsf	3,5	;RP0=1, select bank1
   833  00EB  1303               	bcf	3,6	;RP1=0, select bank1
   834  00EC  080F               	movf	15,w	;volatile
   835  00ED  398F               	andlw	-113
   836  00EE  3860               	iorlw	96
   837  00EF  008F               	movwf	15	;volatile
   838                           
   839                           ;./Oscilador.h: 43:             break;
   840  00F0  2913               	goto	l82
   841  00F1                     l1111:	
   842  00F1  0820               	movf	iniciarOSC@frec,w
   843  00F2  00F4               	movwf	??_iniciarOSC
   844  00F3  01F5               	clrf	??_iniciarOSC+1
   845                           
   846                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   847                           ; Switch size 1, requested type "simple"
   848                           ; Number of cases is 1, Range of values is 0 to 0
   849                           ; switch strategies available:
   850                           ; Name         Instructions Cycles
   851                           ; simple_byte            4     3 (average)
   852                           ; direct_byte           11     8 (fixed)
   853                           ; jumptable            260     6 (fixed)
   854                           ;	Chosen strategy is simple_byte
   855  00F4  0875               	movf	??_iniciarOSC+1,w
   856  00F5  3A00               	xorlw	0	; case 0
   857  00F6  1903               	skipnz
   858  00F7  28F9               	goto	l1187
   859  00F8  28EA               	goto	l1107
   860  00F9                     l1187:	
   861                           
   862                           ; Switch size 1, requested type "simple"
   863                           ; Number of cases is 8, Range of values is 0 to 7
   864                           ; switch strategies available:
   865                           ; Name         Instructions Cycles
   866                           ; simple_byte           25    13 (average)
   867                           ; direct_byte           32     8 (fixed)
   868                           ; jumptable            260     6 (fixed)
   869                           ;	Chosen strategy is simple_byte
   870  00F9  0874               	movf	??_iniciarOSC,w
   871  00FA  3A00               	xorlw	0	; case 0
   872  00FB  1903               	skipnz
   873  00FC  28B6               	goto	l1091
   874  00FD  3A01               	xorlw	1	; case 1
   875  00FE  1903               	skipnz
   876  00FF  28BB               	goto	l1093
   877  0100  3A03               	xorlw	3	; case 2
   878  0101  1903               	skipnz
   879  0102  28C2               	goto	l1095
   880  0103  3A01               	xorlw	1	; case 3
   881  0104  1903               	skipnz
   882  0105  28C9               	goto	l1097
   883  0106  3A07               	xorlw	7	; case 4
   884  0107  1903               	skipnz
   885  0108  28D0               	goto	l1099
   886  0109  3A01               	xorlw	1	; case 5
   887  010A  1903               	skipnz
   888  010B  28D7               	goto	l1101
   889  010C  3A03               	xorlw	3	; case 6
   890  010D  1903               	skipnz
   891  010E  28DE               	goto	l1103
   892  010F  3A01               	xorlw	1	; case 7
   893  0110  1903               	skipnz
   894  0111  28E5               	goto	l1105
   895  0112  28EA               	goto	l1107
   896  0113                     l82:	
   897                           
   898                           ;./Oscilador.h: 47:     OSCCONbits.SCS = 1;
   899  0113  140F               	bsf	15,0	;volatile
   900  0114                     l91:	
   901  0114  0008               	return
   902  0115                     __end_of_iniciarOSC:	
   903                           
   904                           	psect	text4
   905  019B                     __ptext4:	
   906 ;; *************** function _iniciarADC *****************
   907 ;; Defined at:
   908 ;;		line 12 in file "./ADC.h"
   909 ;; Parameters:    Size  Location     Type
   910 ;;  conv            2    4[COMMON] int 
   911 ;; Auto vars:     Size  Location     Type
   912 ;;		None
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      void 
   915 ;; Registers used:
   916 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   922 ;;      Params:         2       0       0       0       0
   923 ;;      Locals:         0       0       0       0       0
   924 ;;      Temps:          0       0       0       0       0
   925 ;;      Totals:         2       0       0       0       0
   926 ;;Total ram usage:        2 bytes
   927 ;; Hardware stack levels used:    1
   928 ;; Hardware stack levels required when called:    1
   929 ;; This function calls:
   930 ;;		Nothing
   931 ;; This function is called by:
   932 ;;		_main
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           
   937                           ;psect for function _iniciarADC
   938  019B                     _iniciarADC:	
   939  019B                     l931:	
   940                           ;incstack = 0
   941                           ; Regs used in _iniciarADC: [wreg-fsr0h+status,2+status,0]
   942                           
   943                           
   944                           ;./ADC.h: 12: ;./ADC.h: 13:         case 2:;./ADC.h: 18:             ADCON0bits.ADCS = 0
      +                          b10;
   945  019B  29B4               	goto	l943
   946  019C                     l933:	
   947                           
   948                           ;./ADC.h: 21:         default:
   949  019C  303F               	movlw	-193
   950  019D  1283               	bcf	3,5	;RP0=0, select bank0
   951  019E  1303               	bcf	3,6	;RP1=0, select bank0
   952  019F  059F               	andwf	31,f	;volatile
   953                           
   954                           ;./ADC.h: 22:             ADCON0bits.ADCS = 0b11;
   955  01A0  29C4               	goto	l63
   956  01A1                     l935:	
   957  01A1  1283               	bcf	3,5	;RP0=0, select bank0
   958  01A2  1303               	bcf	3,6	;RP1=0, select bank0
   959  01A3  081F               	movf	31,w	;volatile
   960  01A4  393F               	andlw	-193
   961  01A5  3840               	iorlw	64
   962  01A6  009F               	movwf	31	;volatile
   963  01A7  29C4               	goto	l63
   964  01A8                     l937:	
   965  01A8  1283               	bcf	3,5	;RP0=0, select bank0
   966  01A9  1303               	bcf	3,6	;RP1=0, select bank0
   967  01AA  081F               	movf	31,w	;volatile
   968  01AB  393F               	andlw	-193
   969  01AC  3880               	iorlw	128
   970  01AD  009F               	movwf	31	;volatile
   971  01AE  29C4               	goto	l63
   972  01AF                     l939:	
   973  01AF  30C0               	movlw	192
   974  01B0  1283               	bcf	3,5	;RP0=0, select bank0
   975  01B1  1303               	bcf	3,6	;RP1=0, select bank0
   976  01B2  049F               	iorwf	31,f	;volatile
   977  01B3  29C4               	goto	l63
   978  01B4                     l943:	
   979                           
   980                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   981                           ; Switch size 1, requested type "simple"
   982                           ; Number of cases is 1, Range of values is 0 to 0
   983                           ; switch strategies available:
   984                           ; Name         Instructions Cycles
   985                           ; simple_byte            4     3 (average)
   986                           ; direct_byte           11     8 (fixed)
   987                           ; jumptable            260     6 (fixed)
   988                           ;	Chosen strategy is simple_byte
   989  01B4  0875               	movf	iniciarADC@conv+1,w
   990  01B5  3A00               	xorlw	0	; case 0
   991  01B6  1903               	skipnz
   992  01B7  29B9               	goto	l1189
   993  01B8  29AF               	goto	l939
   994  01B9                     l1189:	
   995                           
   996                           ; Switch size 1, requested type "simple"
   997                           ; Number of cases is 3, Range of values is 1 to 3
   998                           ; switch strategies available:
   999                           ; Name         Instructions Cycles
  1000                           ; simple_byte           10     6 (average)
  1001                           ; direct_byte           20    11 (fixed)
  1002                           ; jumptable            263     9 (fixed)
  1003                           ;	Chosen strategy is simple_byte
  1004  01B9  0874               	movf	iniciarADC@conv,w
  1005  01BA  3A01               	xorlw	1	; case 1
  1006  01BB  1903               	skipnz
  1007  01BC  299C               	goto	l933
  1008  01BD  3A03               	xorlw	3	; case 2
  1009  01BE  1903               	skipnz
  1010  01BF  29A1               	goto	l935
  1011  01C0  3A01               	xorlw	1	; case 3
  1012  01C1  1903               	skipnz
  1013  01C2  29A8               	goto	l937
  1014  01C3  29AF               	goto	l939
  1015  01C4                     l63:	
  1016                           
  1017                           ;./ADC.h: 112:     ADCON0bits.GO_DONE = 1;
  1018  01C4  149F               	bsf	31,1	;volatile
  1019                           
  1020                           ;./ADC.h: 114:     ADCON0bits.ADON = 1;
  1021  01C5  141F               	bsf	31,0	;volatile
  1022                           
  1023                           ;./ADC.h: 116:     ADCON1bits.ADFM = 0;
  1024  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  1025  01C7  1303               	bcf	3,6	;RP1=0, select bank1
  1026  01C8  139F               	bcf	31,7	;volatile
  1027                           
  1028                           ;./ADC.h: 118:     ADCON1bits.VCFG1 = 0;
  1029  01C9  129F               	bcf	31,5	;volatile
  1030                           
  1031                           ;./ADC.h: 120:     ADCON1bits.VCFG0 = 0;
  1032  01CA  121F               	bcf	31,4	;volatile
  1033  01CB                     l67:	
  1034  01CB  0008               	return
  1035  01CC                     __end_of_iniciarADC:	
  1036                           
  1037                           	psect	text5
  1038  01CC                     __ptext5:	
  1039 ;; *************** function _I2C_Negro *****************
  1040 ;; Defined at:
  1041 ;;		line 18 in file "./I2Cesclavo.h"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;  address         1    wreg     unsigned char 
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  address         1    4[COMMON] unsigned char 
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      void 
  1048 ;; Registers used:
  1049 ;;		wreg
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1055 ;;      Params:         0       0       0       0       0
  1056 ;;      Locals:         1       0       0       0       0
  1057 ;;      Temps:          0       0       0       0       0
  1058 ;;      Totals:         1       0       0       0       0
  1059 ;;Total ram usage:        1 bytes
  1060 ;; Hardware stack levels used:    1
  1061 ;; Hardware stack levels required when called:    1
  1062 ;; This function calls:
  1063 ;;		Nothing
  1064 ;; This function is called by:
  1065 ;;		_main
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           
  1070                           ;psect for function _I2C_Negro
  1071  01CC                     _I2C_Negro:	
  1072                           
  1073                           ;incstack = 0
  1074                           ; Regs used in _I2C_Negro: [wreg]
  1075                           ;I2C_Negro@address stored from wreg
  1076  01CC  00F4               	movwf	I2C_Negro@address
  1077  01CD                     l765:	
  1078                           
  1079                           ;./I2Cesclavo.h: 18: void I2C_Negro(uint8_t address);./I2Cesclavo.h: 19: {;./I2Cesclavo.
      +                          h: 20:     SSPADD = address;
  1080  01CD  0874               	movf	I2C_Negro@address,w
  1081  01CE  1683               	bsf	3,5	;RP0=1, select bank1
  1082  01CF  1303               	bcf	3,6	;RP1=0, select bank1
  1083  01D0  0093               	movwf	19	;volatile
  1084                           
  1085                           ;./I2Cesclavo.h: 21:     SSPCON = 0x36;
  1086  01D1  3036               	movlw	54
  1087  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  1088  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  1089  01D4  0094               	movwf	20	;volatile
  1090                           
  1091                           ;./I2Cesclavo.h: 22:     SSPSTAT = 0x80;
  1092  01D5  3080               	movlw	128
  1093  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  1094  01D7  1303               	bcf	3,6	;RP1=0, select bank1
  1095  01D8  0094               	movwf	20	;volatile
  1096                           
  1097                           ;./I2Cesclavo.h: 23:     SSPCON2 = 0x01;
  1098  01D9  3001               	movlw	1
  1099  01DA  0091               	movwf	17	;volatile
  1100  01DB                     l767:	
  1101                           
  1102                           ;./I2Cesclavo.h: 24:     TRISC3 = 1;
  1103  01DB  1587               	bsf	7,3	;volatile
  1104  01DC                     l769:	
  1105                           
  1106                           ;./I2Cesclavo.h: 25:     TRISC4 = 1;
  1107  01DC  1607               	bsf	7,4	;volatile
  1108  01DD                     l771:	
  1109                           
  1110                           ;./I2Cesclavo.h: 26:     GIE = 1;
  1111  01DD  178B               	bsf	11,7	;volatile
  1112  01DE                     l773:	
  1113                           
  1114                           ;./I2Cesclavo.h: 27:     PEIE = 1;
  1115  01DE  170B               	bsf	11,6	;volatile
  1116  01DF                     l775:	
  1117                           
  1118                           ;./I2Cesclavo.h: 28:     SSPIF = 0;
  1119  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  1120  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  1121  01E1  118C               	bcf	12,3	;volatile
  1122  01E2                     l777:	
  1123                           
  1124                           ;./I2Cesclavo.h: 29:     SSPIE = 1;
  1125  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  1126  01E3  1303               	bcf	3,6	;RP1=0, select bank1
  1127  01E4  158C               	bsf	12,3	;volatile
  1128  01E5                     l77:	
  1129  01E5  0008               	return
  1130  01E6                     __end_of_I2C_Negro:	
  1131                           
  1132                           	psect	text6
  1133  001B                     __ptext6:	
  1134 ;; *************** function _isr *****************
  1135 ;; Defined at:
  1136 ;;		line 48 in file "Reo1.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;		None
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;		None
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      void 
  1143 ;; Registers used:
  1144 ;;		wreg, status,2, status,0
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1150 ;;      Params:         0       0       0       0       0
  1151 ;;      Locals:         0       0       0       0       0
  1152 ;;      Temps:          4       0       0       0       0
  1153 ;;      Totals:         4       0       0       0       0
  1154 ;;Total ram usage:        4 bytes
  1155 ;; Hardware stack levels used:    1
  1156 ;; This function calls:
  1157 ;;		Nothing
  1158 ;; This function is called by:
  1159 ;;		Interrupt level 1
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           
  1164                           ;psect for function _isr
  1165  001B                     _isr:	
  1166  001B                     i1l965:	
  1167                           
  1168                           ;Reo1.c: 51:     if (PIR1bits.ADIF == 1)
  1169  001B  1283               	bcf	3,5	;RP0=0, select bank0
  1170  001C  1303               	bcf	3,6	;RP1=0, select bank0
  1171  001D  1F0C               	btfss	12,6	;volatile
  1172  001E  2820               	goto	u20_21
  1173  001F  2821               	goto	u20_20
  1174  0020                     u20_21:	
  1175  0020  282B               	goto	i1l971
  1176  0021                     u20_20:	
  1177  0021                     i1l967:	
  1178                           
  1179                           ;Reo1.c: 52:     {;Reo1.c: 53:         PIR1bits.ADIF = 0;
  1180  0021  130C               	bcf	12,6	;volatile
  1181  0022                     i1l969:	
  1182                           
  1183                           ;Reo1.c: 54:         _delay((unsigned long)((2)*(4000000/4000.0)));
  1184  0022  3003               	movlw	3
  1185  0023  00F1               	movwf	??_isr+1
  1186  0024  3097               	movlw	151
  1187  0025  00F0               	movwf	??_isr
  1188  0026                     u39_27:	
  1189  0026  0BF0               	decfsz	??_isr,f
  1190  0027  2826               	goto	u39_27
  1191  0028  0BF1               	decfsz	??_isr+1,f
  1192  0029  2826               	goto	u39_27
  1193  002A  282B               	nop2
  1194  002B                     i1l971:	
  1195                           
  1196                           ;Reo1.c: 57:     if(PIR1bits.SSPIF == 1)
  1197  002B  1283               	bcf	3,5	;RP0=0, select bank0
  1198  002C  1303               	bcf	3,6	;RP1=0, select bank0
  1199  002D  1D8C               	btfss	12,3	;volatile
  1200  002E  2830               	goto	u21_21
  1201  002F  2831               	goto	u21_20
  1202  0030                     u21_21:	
  1203  0030  28AB               	goto	i1l128
  1204  0031                     u21_20:	
  1205  0031                     i1l973:	
  1206                           
  1207                           ;Reo1.c: 58:     {;Reo1.c: 59:         SSPCONbits.CKP = 0;
  1208  0031  1214               	bcf	20,4	;volatile
  1209                           
  1210                           ;Reo1.c: 61:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL))
  1211  0032  1B14               	btfsc	20,6	;volatile
  1212  0033  2835               	goto	u22_21
  1213  0034  2836               	goto	u22_20
  1214  0035                     u22_21:	
  1215  0035  283A               	goto	i1l977
  1216  0036                     u22_20:	
  1217  0036                     i1l975:	
  1218  0036  1F94               	btfss	20,7	;volatile
  1219  0037  2839               	goto	u23_21
  1220  0038  283A               	goto	u23_20
  1221  0039                     u23_21:	
  1222  0039  2841               	goto	i1l985
  1223  003A                     u23_20:	
  1224  003A                     i1l977:	
  1225                           
  1226                           ;Reo1.c: 62:         {;Reo1.c: 63:             z = SSPBUF;
  1227  003A  0813               	movf	19,w	;volatile
  1228  003B  00F0               	movwf	??_isr
  1229  003C  0870               	movf	??_isr,w
  1230  003D  00F7               	movwf	_z
  1231  003E                     i1l979:	
  1232                           
  1233                           ;Reo1.c: 64:             SSPCONbits.SSPOV = 0;
  1234  003E  1314               	bcf	20,6	;volatile
  1235  003F                     i1l981:	
  1236                           
  1237                           ;Reo1.c: 65:             SSPCONbits.WCOL = 0;
  1238  003F  1394               	bcf	20,7	;volatile
  1239  0040                     i1l983:	
  1240                           
  1241                           ;Reo1.c: 66:             SSPCONbits.CKP = 1;
  1242  0040  1614               	bsf	20,4	;volatile
  1243  0041                     i1l985:	
  1244                           
  1245                           ;Reo1.c: 69:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW)
  1246  0041  1683               	bsf	3,5	;RP0=1, select bank1
  1247  0042  1303               	bcf	3,6	;RP1=0, select bank1
  1248  0043  1A94               	btfsc	20,5	;volatile
  1249  0044  2846               	goto	u24_21
  1250  0045  2847               	goto	u24_20
  1251  0046                     u24_21:	
  1252  0046  2864               	goto	i1l113
  1253  0047                     u24_20:	
  1254  0047                     i1l987:	
  1255  0047  1914               	btfsc	20,2	;volatile
  1256  0048  284A               	goto	u25_21
  1257  0049  284B               	goto	u25_20
  1258  004A                     u25_21:	
  1259  004A  2864               	goto	i1l113
  1260  004B                     u25_20:	
  1261  004B                     i1l989:	
  1262                           
  1263                           ;Reo1.c: 70:         {;Reo1.c: 72:             z = SSPBUF;
  1264  004B  1283               	bcf	3,5	;RP0=0, select bank0
  1265  004C  1303               	bcf	3,6	;RP1=0, select bank0
  1266  004D  0813               	movf	19,w	;volatile
  1267  004E  00F0               	movwf	??_isr
  1268  004F  0870               	movf	??_isr,w
  1269  0050  00F7               	movwf	_z
  1270  0051                     i1l991:	
  1271                           
  1272                           ;Reo1.c: 73:             PIR1bits.SSPIF = 0;
  1273  0051  118C               	bcf	12,3	;volatile
  1274  0052                     i1l993:	
  1275                           
  1276                           ;Reo1.c: 74:             SSPCONbits.CKP = 1;
  1277  0052  1614               	bsf	20,4	;volatile
  1278  0053                     i1l114:	
  1279                           ;Reo1.c: 75:             while(!SSPSTATbits.BF);
  1280                           
  1281  0053  1683               	bsf	3,5	;RP0=1, select bank1
  1282  0054  1303               	bcf	3,6	;RP1=0, select bank1
  1283  0055  1C14               	btfss	20,0	;volatile
  1284  0056  2858               	goto	u26_21
  1285  0057  2859               	goto	u26_20
  1286  0058                     u26_21:	
  1287  0058  2853               	goto	i1l114
  1288  0059                     u26_20:	
  1289  0059                     i1l995:	
  1290                           
  1291                           ;Reo1.c: 76:             y = SSPBUF;
  1292  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1293  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1294  005B  0813               	movf	19,w	;volatile
  1295  005C  00F0               	movwf	??_isr
  1296  005D  0870               	movf	??_isr,w
  1297  005E  00A4               	movwf	_y
  1298                           
  1299                           ;Reo1.c: 77:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1300  005F  3053               	movlw	83
  1301  0060  00F0               	movwf	??_isr
  1302  0061                     u40_27:	
  1303  0061  0BF0               	decfsz	??_isr,f
  1304  0062  2861               	goto	u40_27
  1305                           
  1306                           ;Reo1.c: 78:         }
  1307  0063  28A8               	goto	i1l117
  1308  0064                     i1l113:	
  1309                           ;Reo1.c: 80:         else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW)
  1310                           
  1311  0064  1A94               	btfsc	20,5	;volatile
  1312  0065  2867               	goto	u27_21
  1313  0066  2868               	goto	u27_20
  1314  0067                     u27_21:	
  1315  0067  28A8               	goto	i1l117
  1316  0068                     u27_20:	
  1317  0068                     i1l997:	
  1318  0068  1D14               	btfss	20,2	;volatile
  1319  0069  286B               	goto	u28_21
  1320  006A  286C               	goto	u28_20
  1321  006B                     u28_21:	
  1322  006B  28A8               	goto	i1l117
  1323  006C                     u28_20:	
  1324  006C                     i1l999:	
  1325                           
  1326                           ;Reo1.c: 81:         {;Reo1.c: 82:             if (x == 1)
  1327  006C  0376               	decf	_x,w
  1328  006D  1D03               	btfss	3,2
  1329  006E  2870               	goto	u29_21
  1330  006F  2871               	goto	u29_20
  1331  0070                     u29_21:	
  1332  0070  288A               	goto	i1l1007
  1333  0071                     u29_20:	
  1334  0071                     i1l1001:	
  1335                           
  1336                           ;Reo1.c: 83:             {;Reo1.c: 84:                 z = SSPBUF;
  1337  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1338  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1339  0073  0813               	movf	19,w	;volatile
  1340  0074  00F0               	movwf	??_isr
  1341  0075  0870               	movf	??_isr,w
  1342  0076  00F7               	movwf	_z
  1343  0077                     i1l1003:	
  1344                           
  1345                           ;Reo1.c: 85:                 BF = 0;
  1346  0077  1683               	bsf	3,5	;RP0=1, select bank1
  1347  0078  1303               	bcf	3,6	;RP1=0, select bank1
  1348  0079  1014               	bcf	20,0	;volatile
  1349                           
  1350                           ;Reo1.c: 86:                 SSPBUF = luz;
  1351  007A  0879               	movf	_luz,w
  1352  007B  1283               	bcf	3,5	;RP0=0, select bank0
  1353  007C  1303               	bcf	3,6	;RP1=0, select bank0
  1354  007D  0093               	movwf	19	;volatile
  1355  007E                     i1l1005:	
  1356                           
  1357                           ;Reo1.c: 87:                 SSPCONbits.CKP = 1;
  1358  007E  1614               	bsf	20,4	;volatile
  1359                           
  1360                           ;Reo1.c: 88:                 _delay((unsigned long)((250)*(4000000/4000000.0)));
  1361  007F  3053               	movlw	83
  1362  0080  00F0               	movwf	??_isr
  1363  0081                     u41_27:	
  1364  0081  0BF0               	decfsz	??_isr,f
  1365  0082  2881               	goto	u41_27
  1366  0083                     i1l120:	
  1367                           ;Reo1.c: 89:                 while(SSPSTATbits.BF);
  1368                           
  1369  0083  1683               	bsf	3,5	;RP0=1, select bank1
  1370  0084  1303               	bcf	3,6	;RP1=0, select bank1
  1371  0085  1814               	btfsc	20,0	;volatile
  1372  0086  2888               	goto	u30_21
  1373  0087  2889               	goto	u30_20
  1374  0088                     u30_21:	
  1375  0088  2883               	goto	i1l120
  1376  0089                     u30_20:	
  1377  0089  28A8               	goto	i1l117
  1378  008A                     i1l1007:	
  1379  008A  3002               	movlw	2
  1380  008B  0676               	xorwf	_x,w
  1381  008C  1D03               	btfss	3,2
  1382  008D  288F               	goto	u31_21
  1383  008E  2890               	goto	u31_20
  1384  008F                     u31_21:	
  1385  008F  28A8               	goto	i1l117
  1386  0090                     u31_20:	
  1387  0090                     i1l1009:	
  1388                           
  1389                           ;Reo1.c: 93:             {;Reo1.c: 94:                 z = SSPBUF;
  1390  0090  1283               	bcf	3,5	;RP0=0, select bank0
  1391  0091  1303               	bcf	3,6	;RP1=0, select bank0
  1392  0092  0813               	movf	19,w	;volatile
  1393  0093  00F0               	movwf	??_isr
  1394  0094  0870               	movf	??_isr,w
  1395  0095  00F7               	movwf	_z
  1396  0096                     i1l1011:	
  1397                           
  1398                           ;Reo1.c: 95:                 BF = 0;
  1399  0096  1683               	bsf	3,5	;RP0=1, select bank1
  1400  0097  1303               	bcf	3,6	;RP1=0, select bank1
  1401  0098  1014               	bcf	20,0	;volatile
  1402                           
  1403                           ;Reo1.c: 96:                 SSPBUF = humo;
  1404  0099  0878               	movf	_humo,w
  1405  009A  1283               	bcf	3,5	;RP0=0, select bank0
  1406  009B  1303               	bcf	3,6	;RP1=0, select bank0
  1407  009C  0093               	movwf	19	;volatile
  1408  009D                     i1l1013:	
  1409                           
  1410                           ;Reo1.c: 97:                 SSPCONbits.CKP = 1;
  1411  009D  1614               	bsf	20,4	;volatile
  1412                           
  1413                           ;Reo1.c: 98:                 _delay((unsigned long)((250)*(4000000/4000000.0)));
  1414  009E  3053               	movlw	83
  1415  009F  00F0               	movwf	??_isr
  1416  00A0                     u42_27:	
  1417  00A0  0BF0               	decfsz	??_isr,f
  1418  00A1  28A0               	goto	u42_27
  1419  00A2                     i1l125:	
  1420                           ;Reo1.c: 99:                 while(SSPSTATbits.BF);
  1421                           
  1422  00A2  1683               	bsf	3,5	;RP0=1, select bank1
  1423  00A3  1303               	bcf	3,6	;RP1=0, select bank1
  1424  00A4  1814               	btfsc	20,0	;volatile
  1425  00A5  28A7               	goto	u32_21
  1426  00A6  28A8               	goto	u32_20
  1427  00A7                     u32_21:	
  1428  00A7  28A2               	goto	i1l125
  1429  00A8                     u32_20:	
  1430  00A8                     i1l117:	
  1431                           
  1432                           ;Reo1.c: 103:         PIR1bits.SSPIF = 0;
  1433  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1434  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1435  00AA  118C               	bcf	12,3	;volatile
  1436  00AB                     i1l128:	
  1437  00AB  0873               	movf	??_isr+3,w
  1438  00AC  008A               	movwf	10
  1439  00AD  0E72               	swapf	(??_isr+2)^(0+4294967168),w
  1440  00AE  0083               	movwf	3
  1441  00AF  0EFE               	swapf	btemp,f
  1442  00B0  0E7E               	swapf	btemp,w
  1443  00B1  0009               	retfie
  1444  00B2                     __end_of_isr:	
  1445  007E                     btemp	set	126	;btemp
  1446  007E                     wtemp0	set	126
  1447                           
  1448                           	psect	intentry
  1449  0004                     __pintentry:	
  1450                           ;incstack = 0
  1451                           ; Regs used in _isr: [wreg+status,2+status,0]
  1452                           
  1453  0004                     interrupt_function:	
  1454  007E                     saved_w	set	btemp
  1455  0004  00FE               	movwf	btemp
  1456  0005  0E03               	swapf	3,w
  1457  0006  00F2               	movwf	??_isr+2
  1458  0007  080A               	movf	10,w
  1459  0008  00F3               	movwf	??_isr+3
  1460  0009  120A  118A  281B   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      4       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_iniciarADC
    _main->_iniciarOSC
    _main->_leerADC

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_leerADC

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     197
                                              3 BANK0      1     1      0
                          _I2C_Negro
                         _iniciarADC
                         _iniciarOSC
                            _leerADC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _leerADC                                              5     3      2      62
                                              4 COMMON     2     0      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _iniciarOSC                                           3     3      0      22
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _iniciarADC                                           2     0      2      98
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Negro                                            1     1      0      15
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Negro
   _iniciarADC
   _iniciarOSC
   _leerADC
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Mar 14 18:17:10 2020

                       _x 0076                         _y 0024        __size_of_I2C_Negro 001A  
                       _z 0077               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      _BF 04A0                        l63 01C4                        l71 019A  
                      l72 018F                        l82 0113                        l67 01CB  
                      l91 0114                        l77 01E5                       l131 01F8  
                     l811 01EB                       l821 01F5                       l813 01EC  
                     l815 01EF                       l807 01E6                       l817 01F3  
                     l809 01EA                       l771 01DD                       l931 019B  
                     l819 01F4                       l773 01DE                       l765 01CD  
                     l933 019C                       l775 01DF                       l767 01DB  
                     l935 01A1                       l943 01B4                       l777 01E2  
                     l769 01DC                       l937 01A8                       l939 01AF  
                     _GIE 005F                       u330 016E                       u331 016D  
                     u350 0193                       u351 0192                       u345 0178  
            __CFG_CPD$OFF 0000                       u367 0143                       u377 015D  
                     u387 0188                       _isr 001B                       _luz 0079  
            __CFG_LVP$OFF 0000                      l1101 00D7                      l1103 00DE  
                    l1111 00F1                      l1105 00E5                      l1121 011B  
                    l1107 00EA                      l1131 013F                      l1123 0120  
                    l1133 0147                      l1125 0129                      l1135 0159  
                    l1127 012F                      l1119 0115                      l1081 0182  
                    l1073 0168                      l1129 0133                      l1091 00B6  
                    l1083 018C                      l1075 016E                      l1093 00BB  
                    l1085 0193                      l1095 00C2                      l1079 0171  
                    l1097 00C9                      l1089 00B5                      l1187 00F9  
                    l1099 00D0                      l1189 01B9                      ?_isr 0070  
                    _PEIE 005E              __CFG_WRT$OFF 0000                      _dato 0025  
                    _main 0115                      _humo 0078                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_isr 0070  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   i1l120 0083                     i1l113 0064                     i1l114 0053  
                   i1l125 00A2                     i1l117 00A8                     i1l128 00AB  
                   i1l971 002B                     i1l981 003F                     i1l973 0031  
                   i1l965 001B                     i1l991 0051                     i1l983 0040  
                   i1l975 0036                     i1l967 0021                     i1l993 0052  
                   i1l985 0041                     i1l977 003A                     i1l969 0022  
                   i1l995 0059                     i1l987 0047                     i1l979 003E  
                   i1l997 0068                     i1l989 004B                     i1l999 006C  
                   u20_20 0021                     u20_21 0020                     u21_20 0031  
                   u21_21 0030                     u30_20 0089                     u22_20 0036  
                   u30_21 0088                     u22_21 0035                     u31_20 0090  
                   u23_20 003A                     u31_21 008F                     u23_21 0039  
                   u32_20 00A8                     u24_20 0047                     u32_21 00A7  
                   u24_21 0046                     u40_27 0061                     u25_20 004B  
                   u25_21 004A                     u41_27 0081                     u26_20 0059  
                   u26_21 0058                     u42_27 00A0                     u27_20 0068  
                   u27_21 0067                     _PORTA 0005                     u28_20 006C  
                   u28_21 006B                     u29_20 0071                     u29_21 0070  
                   u39_27 0026                     _SSPIE 0463                     _SSPIF 0063  
          __CFG_FCMEN$OFF 0000           __end_of_leerADC 019B         __end_of_I2C_Negro 01E6  
                   _setup 01E6            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 0165                    ??_main 0023  
          iniciarADC@conv 0074                    _ADCON0 001F                    _ADRESH 001E  
                  ?_setup 0070                    _ANSELH 0189                    i1l1001 0071  
                  i1l1011 0096                    i1l1003 0077                    i1l1013 009D  
                  i1l1005 007E                    i1l1007 008A                    i1l1009 0090  
                  _SSPADD 0093                    _TRISC3 043B                    _TRISC4 043C  
                  _SSPCON 0014                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
          iniciarOSC@frec 0020                 ??_leerADC 0020                    saved_w 007E  
 __end_of__initialization 0017            __pcstackCOMMON 0070             __end_of_setup 01F9  
                 ??_setup 0074                __pbssBANK0 0024                __pmaintext 0115  
              __pintentry 0004                   _SSPCON2 0091                   _SSPSTAT 0094  
               _I2C_Negro 01CC                _iniciarADC 019B                _iniciarOSC 00B2  
        I2C_Negro@address 0074                 _ANSELbits 0188                   __ptext1 01E6  
                 __ptext2 0165                   __ptext3 00B2                   __ptext4 019B  
                 __ptext5 01CC                   __ptext6 001B                   _leerADC 0165  
            __size_of_isr 0097      end_of_initialization 0017                ?_I2C_Negro 0070  
               _TRISAbits 0085               ?_iniciarADC 0074               ?_iniciarOSC 0070  
     start_initialization 000F               __end_of_isr 00B2               ??_I2C_Negro 0074  
__CFG_FOSC$INTRC_NOCLKOUT 0000               __pbssCOMMON 0076                 ___latbits 0002  
           __pcstackBANK0 0020       __size_of_iniciarADC 0031       __size_of_iniciarOSC 0063  
                ?_leerADC 0074            __size_of_setup 0013         interrupt_function 0004  
                _PIE1bits 008C                  _PIR1bits 000C                  _GO_nDONE 00F9  
              _ADCON0bits 001F                _ADCON1bits 009F              ??_iniciarADC 0076  
            ??_iniciarOSC 0074          __size_of_leerADC 0036        __end_of_iniciarADC 01CC  
      __end_of_iniciarOSC 0115         __CFG_BOR4V$BOR40V 0000             __size_of_main 0050  
              _INTCONbits 000B                  intlevel1 0000                _OSCCONbits 008F  
          leerADC@channel 0022                _SSPCONbits 0014  
