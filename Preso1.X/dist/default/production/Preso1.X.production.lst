

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Mar 15 03:26:06 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.10
    20                           ; Generated 31/07/2019 GMT
    21                           ; 
    22                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  000B                     _INTCONbits	set	11
   210  0005                     _PORTA	set	5
   211  0013                     _SSPBUF	set	19
   212  0014                     _SSPCONbits	set	20
   213  000C                     _PIR1bits	set	12
   214  0014                     _SSPCON	set	20
   215  001E                     _ADRESH	set	30
   216  001F                     _ADCON0	set	31
   217  001F                     _ADCON0bits	set	31
   218  0063                     _SSPIF	set	99
   219  005E                     _PEIE	set	94
   220  005F                     _GIE	set	95
   221  00F9                     _GO_nDONE	set	249
   222  008C                     _PIE1bits	set	140
   223  0085                     _TRISAbits	set	133
   224  0094                     _SSPSTATbits	set	148
   225  008F                     _OSCCONbits	set	143
   226  0091                     _SSPCON2	set	145
   227  0094                     _SSPSTAT	set	148
   228  0093                     _SSPADD	set	147
   229  009F                     _ADCON1bits	set	159
   230  04A0                     _BF	set	1184
   231  0463                     _SSPIE	set	1123
   232  043C                     _TRISC4	set	1084
   233  043B                     _TRISC3	set	1083
   234  0188                     _ANSELbits	set	392
   235  0189                     _ANSELH	set	393
   236  0188                     _ANSEL	set	392
   237                           
   238                           ; #config settings
   239  0000                     
   240                           	psect	cinit
   241  000F                     start_initialization:	
   242  000F                     __initialization:	
   243                           
   244                           ; Clear objects allocated to COMMON
   245  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   246  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   247  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   248  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   249  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   250                           
   251                           ; Clear objects allocated to BANK0
   252  0014  1283               	bcf	3,5	;RP0=0, select bank0
   253  0015  1303               	bcf	3,6	;RP1=0, select bank0
   254  0016  01A6               	clrf	__pbssBANK0& (0+127)
   255  0017                     end_of_initialization:	
   256                           ;End of C runtime variable initialization code
   257                           
   258  0017                     __end_of__initialization:	
   259  0017  0183               	clrf	3
   260  0018  120A  118A  28F1   	ljmp	_main	;jump to C main() function
   261                           
   262                           	psect	bssCOMMON
   263  0070                     __pbssCOMMON:	
   264  0070                     _dato:	
   265  0070                     	ds	1
   266  0071                     _z:	
   267  0071                     	ds	1
   268  0072                     _tempe:	
   269  0072                     	ds	1
   270  0073                     _humo:	
   271  0073                     	ds	1
   272  0074                     _luz:	
   273  0074                     	ds	1
   274                           
   275                           	psect	bssBANK0
   276  0026                     __pbssBANK0:	
   277  0026                     _x:	
   278  0026                     	ds	1
   279                           
   280                           	psect	cstackCOMMON
   281  0075                     __pcstackCOMMON:	
   282  0075                     ?_I2C_Negro:	
   283  0075                     ?_iniciarOSC:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0075                     ?_isr:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0075                     ??_isr:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0075                     ?_setup:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0075                     ?_main:	
   296                           ; 1 bytes @ 0x0
   297                           
   298                           
   299                           ; 1 bytes @ 0x0
   300  0075                     	ds	4
   301  0079                     ??_iniciarADC:	
   302  0079                     ??_I2C_Negro:	
   303                           ; 1 bytes @ 0x4
   304                           
   305  0079                     ??_setup:	
   306                           ; 1 bytes @ 0x4
   307                           
   308  0079                     leerADC@channel:	
   309                           ; 1 bytes @ 0x4
   310                           
   311  0079                     I2C_Negro@address:	
   312                           ; 1 bytes @ 0x4
   313                           
   314  0079                     iniciarOSC@frec:	
   315                           ; 1 bytes @ 0x4
   316                           
   317                           
   318                           ; 1 bytes @ 0x4
   319  0079                     	ds	1
   320                           
   321                           	psect	cstackBANK0
   322  0020                     __pcstackBANK0:	
   323  0020                     ?_iniciarADC:	
   324  0020                     ??_iniciarOSC:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0020                     ?_leerADC:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0020                     iniciarADC@conv:	
   331                           ; 2 bytes @ 0x0
   332                           
   333                           
   334                           ; 2 bytes @ 0x0
   335  0020                     	ds	2
   336  0022                     ??_leerADC:	
   337                           
   338                           ; 1 bytes @ 0x2
   339  0022                     	ds	2
   340  0024                     ??_main:	
   341                           
   342                           ; 1 bytes @ 0x4
   343  0024                     	ds	2
   344                           
   345                           	psect	maintext
   346  00F1                     __pmaintext:	
   347 ;;
   348 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   349 ;;
   350 ;; *************** function _main *****************
   351 ;; Defined at:
   352 ;;		line 139 in file "Reo1.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;		None
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      void 
   359 ;; Registers used:
   360 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   361 ;; Tracked objects:
   362 ;;		On entry : B00/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   366 ;;      Params:         0       0       0       0       0
   367 ;;      Locals:         0       0       0       0       0
   368 ;;      Temps:          0       2       0       0       0
   369 ;;      Totals:         0       2       0       0       0
   370 ;;Total ram usage:        2 bytes
   371 ;; Hardware stack levels required when called:    2
   372 ;; This function calls:
   373 ;;		_I2C_Negro
   374 ;;		_iniciarADC
   375 ;;		_iniciarOSC
   376 ;;		_leerADC
   377 ;;		_setup
   378 ;; This function is called by:
   379 ;;		Startup code after reset
   380 ;; This function uses a non-reentrant model
   381 ;;
   382                           
   383                           
   384                           ;psect for function _main
   385  00F1                     _main:	
   386  00F1                     l1101:	
   387                           ;incstack = 0
   388                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   389                           
   390                           
   391                           ;Reo1.c: 141:     iniciarOSC(6);
   392  00F1  3006               	movlw	6
   393  00F2  120A  118A  208E  120A  118A  	fcall	_iniciarOSC
   394  00F7                     l1103:	
   395                           
   396                           ;Reo1.c: 143:     setup();
   397  00F7  120A  118A  21A8  120A  118A  	fcall	_setup
   398  00FC                     l1105:	
   399                           
   400                           ;Reo1.c: 145:     iniciarADC(2);
   401  00FC  3002               	movlw	2
   402  00FD  1283               	bcf	3,5	;RP0=0, select bank0
   403  00FE  1303               	bcf	3,6	;RP1=0, select bank0
   404  00FF  00A0               	movwf	iniciarADC@conv
   405  0100  3000               	movlw	0
   406  0101  00A1               	movwf	iniciarADC@conv+1
   407  0102  120A  118A  2163  120A  118A  	fcall	_iniciarADC
   408  0107                     l1107:	
   409                           
   410                           ;Reo1.c: 147:     I2C_Negro(0x20);
   411  0107  3020               	movlw	32
   412  0108  120A  118A  218E  120A  118A  	fcall	_I2C_Negro
   413  010D                     l1109:	
   414                           
   415                           ;Reo1.c: 152:     {;Reo1.c: 153:         ADCON0bits.CHS = 0b0000;
   416  010D  30C3               	movlw	-61
   417  010E  1283               	bcf	3,5	;RP0=0, select bank0
   418  010F  1303               	bcf	3,6	;RP1=0, select bank0
   419  0110  059F               	andwf	31,f	;volatile
   420  0111                     l1111:	
   421                           
   422                           ;Reo1.c: 154:         luz = leerADC(0);
   423  0111  3000               	movlw	0
   424  0112  120A  118A  212B  120A  118A  	fcall	_leerADC
   425  0117  1283               	bcf	3,5	;RP0=0, select bank0
   426  0118  1303               	bcf	3,6	;RP1=0, select bank0
   427  0119  0820               	movf	?_leerADC,w
   428  011A  00A4               	movwf	??_main
   429  011B  0824               	movf	??_main,w
   430  011C  00F4               	movwf	_luz
   431  011D                     l1113:	
   432                           
   433                           ;Reo1.c: 155:         _delay((unsigned long)((2)*(4000000/4000.0)));
   434  011D  3003               	movlw	3
   435  011E  1283               	bcf	3,5	;RP0=0, select bank0
   436  011F  1303               	bcf	3,6	;RP1=0, select bank0
   437  0120  00A5               	movwf	??_main+1
   438  0121  3097               	movlw	151
   439  0122  00A4               	movwf	??_main
   440  0123                     u307:	
   441  0123  0BA4               	decfsz	??_main,f
   442  0124  2923               	goto	u307
   443  0125  0BA5               	decfsz	??_main+1,f
   444  0126  2923               	goto	u307
   445  0127  290D               	goto	l1109
   446  0128  120A  118A  280C   	ljmp	start
   447  012B                     __end_of_main:	
   448                           
   449                           	psect	text1
   450  01A8                     __ptext1:	
   451 ;; *************** function _setup *****************
   452 ;; Defined at:
   453 ;;		line 119 in file "Reo1.c"
   454 ;; Parameters:    Size  Location     Type
   455 ;;		None
   456 ;; Auto vars:     Size  Location     Type
   457 ;;		None
   458 ;; Return value:  Size  Location     Type
   459 ;;                  1    wreg      void 
   460 ;; Registers used:
   461 ;;		status,2
   462 ;; Tracked objects:
   463 ;;		On entry : 0/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   467 ;;      Params:         0       0       0       0       0
   468 ;;      Locals:         0       0       0       0       0
   469 ;;      Temps:          0       0       0       0       0
   470 ;;      Totals:         0       0       0       0       0
   471 ;;Total ram usage:        0 bytes
   472 ;; Hardware stack levels used:    1
   473 ;; Hardware stack levels required when called:    1
   474 ;; This function calls:
   475 ;;		Nothing
   476 ;; This function is called by:
   477 ;;		_main
   478 ;; This function uses a non-reentrant model
   479 ;;
   480                           
   481                           
   482                           ;psect for function _setup
   483  01A8                     _setup:	
   484  01A8                     l801:	
   485                           ;incstack = 0
   486                           ; Regs used in _setup: [status,2]
   487                           
   488                           
   489                           ;Reo1.c: 121:     ANSEL = 0;
   490  01A8  1683               	bsf	3,5	;RP0=1, select bank3
   491  01A9  1703               	bsf	3,6	;RP1=1, select bank3
   492  01AA  0188               	clrf	8	;volatile
   493                           
   494                           ;Reo1.c: 122:     ANSELH = 0;
   495  01AB  0189               	clrf	9	;volatile
   496  01AC                     l803:	
   497                           
   498                           ;Reo1.c: 124:     ANSELbits.ANS0 = 1;
   499  01AC  1408               	bsf	8,0	;volatile
   500  01AD                     l805:	
   501                           
   502                           ;Reo1.c: 125:     ANSELbits.ANS1 = 1;
   503  01AD  1488               	bsf	8,1	;volatile
   504  01AE                     l807:	
   505                           
   506                           ;Reo1.c: 128:     TRISAbits.TRISA0 = 1;
   507  01AE  1683               	bsf	3,5	;RP0=1, select bank1
   508  01AF  1303               	bcf	3,6	;RP1=0, select bank1
   509  01B0  1405               	bsf	5,0	;volatile
   510  01B1                     l809:	
   511                           
   512                           ;Reo1.c: 129:     TRISAbits.TRISA1 = 1;
   513  01B1  1485               	bsf	5,1	;volatile
   514                           
   515                           ;Reo1.c: 132:     PORTA = 0;
   516  01B2  1283               	bcf	3,5	;RP0=0, select bank0
   517  01B3  1303               	bcf	3,6	;RP1=0, select bank0
   518  01B4  0185               	clrf	5	;volatile
   519  01B5                     l811:	
   520                           
   521                           ;Reo1.c: 134:     INTCONbits.GIE = 1;
   522  01B5  178B               	bsf	11,7	;volatile
   523  01B6                     l813:	
   524                           
   525                           ;Reo1.c: 135:     INTCONbits.PEIE = 1;
   526  01B6  170B               	bsf	11,6	;volatile
   527  01B7                     l815:	
   528                           
   529                           ;Reo1.c: 136:     PIE1bits.ADIE = 1;
   530  01B7  1683               	bsf	3,5	;RP0=1, select bank1
   531  01B8  1303               	bcf	3,6	;RP1=0, select bank1
   532  01B9  170C               	bsf	12,6	;volatile
   533  01BA                     l125:	
   534  01BA  0008               	return
   535  01BB                     __end_of_setup:	
   536                           
   537                           	psect	text2
   538  012B                     __ptext2:	
   539 ;; *************** function _leerADC *****************
   540 ;; Defined at:
   541 ;;		line 128 in file "./ADC.h"
   542 ;; Parameters:    Size  Location     Type
   543 ;;  channel         1    wreg     unsigned char 
   544 ;; Auto vars:     Size  Location     Type
   545 ;;  channel         1    4[COMMON] unsigned char 
   546 ;; Return value:  Size  Location     Type
   547 ;;                  2    0[BANK0 ] unsigned int 
   548 ;; Registers used:
   549 ;;		wreg, status,2, status,0
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   555 ;;      Params:         0       2       0       0       0
   556 ;;      Locals:         1       0       0       0       0
   557 ;;      Temps:          0       2       0       0       0
   558 ;;      Totals:         1       4       0       0       0
   559 ;;Total ram usage:        5 bytes
   560 ;; Hardware stack levels used:    1
   561 ;; Hardware stack levels required when called:    1
   562 ;; This function calls:
   563 ;;		Nothing
   564 ;; This function is called by:
   565 ;;		_main
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569                           
   570                           ;psect for function _leerADC
   571  012B                     _leerADC:	
   572                           
   573                           ;incstack = 0
   574                           ; Regs used in _leerADC: [wreg+status,2+status,0]
   575                           ;leerADC@channel stored from wreg
   576  012B  00F9               	movwf	leerADC@channel
   577  012C                     l1057:	
   578                           
   579                           ;./ADC.h: 128: unsigned int leerADC(unsigned char channel);./ADC.h: 129: {;./ADC.h: 130:
      +                               if(channel > 7)
   580  012C  3008               	movlw	8
   581  012D  0279               	subwf	leerADC@channel,w
   582  012E  1C03               	skipc
   583  012F  2931               	goto	u271
   584  0130  2932               	goto	u270
   585  0131                     u271:	
   586  0131  2937               	goto	l1063
   587  0132                     u270:	
   588  0132                     l1059:	
   589                           
   590                           ;./ADC.h: 131:     {;./ADC.h: 132:         return 0;
   591  0132  1283               	bcf	3,5	;RP0=0, select bank0
   592  0133  1303               	bcf	3,6	;RP1=0, select bank0
   593  0134  01A0               	clrf	?_leerADC
   594  0135  01A1               	clrf	?_leerADC+1
   595  0136  2962               	goto	l71
   596  0137                     l1063:	
   597                           
   598                           ;./ADC.h: 135:     ADCON0 &= 0xC5;
   599  0137  30C5               	movlw	197
   600  0138  1283               	bcf	3,5	;RP0=0, select bank0
   601  0139  1303               	bcf	3,6	;RP1=0, select bank0
   602  013A  00A2               	movwf	??_leerADC
   603  013B  0822               	movf	??_leerADC,w
   604  013C  059F               	andwf	31,f	;volatile
   605                           
   606                           ;./ADC.h: 136:     ADCON0 |= channel<<3;
   607  013D  0879               	movf	leerADC@channel,w	;volatile
   608  013E  00A2               	movwf	??_leerADC
   609  013F  3002               	movlw	2
   610  0140                     u285:	
   611  0140  1003               	clrc
   612  0141  0DA2               	rlf	??_leerADC,f
   613  0142  3EFF               	addlw	-1
   614  0143  1D03               	skipz
   615  0144  2940               	goto	u285
   616  0145  1003               	clrc
   617  0146  0D22               	rlf	??_leerADC,w
   618  0147  00A3               	movwf	??_leerADC+1
   619  0148  0823               	movf	??_leerADC+1,w
   620  0149  049F               	iorwf	31,f	;volatile
   621  014A                     l1065:	
   622                           
   623                           ;./ADC.h: 137:     _delay((unsigned long)((2)*(4000000/4000.0)));
   624  014A  3003               	movlw	3
   625  014B  1283               	bcf	3,5	;RP0=0, select bank0
   626  014C  1303               	bcf	3,6	;RP1=0, select bank0
   627  014D  00A3               	movwf	??_leerADC+1
   628  014E  3097               	movlw	151
   629  014F  00A2               	movwf	??_leerADC
   630  0150                     u317:	
   631  0150  0BA2               	decfsz	??_leerADC,f
   632  0151  2950               	goto	u317
   633  0152  0BA3               	decfsz	??_leerADC+1,f
   634  0153  2950               	goto	u317
   635  0154                     l1067:	
   636                           
   637                           ;./ADC.h: 138:     GO_nDONE = 1;
   638  0154  1283               	bcf	3,5	;RP0=0, select bank0
   639  0155  1303               	bcf	3,6	;RP1=0, select bank0
   640  0156  149F               	bsf	31,1	;volatile
   641  0157                     l72:	
   642                           ;./ADC.h: 141:     {;./ADC.h: 142:     }
   643                           
   644                           
   645                           ;./ADC.h: 140:     while(GO_nDONE)
   646  0157  189F               	btfsc	31,1	;volatile
   647  0158  295A               	goto	u291
   648  0159  295B               	goto	u290
   649  015A                     u291:	
   650  015A  2957               	goto	l72
   651  015B                     u290:	
   652  015B                     l1069:	
   653                           
   654                           ;./ADC.h: 144:     return (ADRESH);
   655  015B  081E               	movf	30,w	;volatile
   656  015C  00A2               	movwf	??_leerADC
   657  015D  01A3               	clrf	??_leerADC+1
   658  015E  0822               	movf	??_leerADC,w
   659  015F  00A0               	movwf	?_leerADC
   660  0160  0823               	movf	??_leerADC+1,w
   661  0161  00A1               	movwf	?_leerADC+1
   662  0162                     l71:	
   663  0162  0008               	return
   664  0163                     __end_of_leerADC:	
   665                           
   666                           	psect	text3
   667  008E                     __ptext3:	
   668 ;; *************** function _iniciarOSC *****************
   669 ;; Defined at:
   670 ;;		line 5 in file "./Oscilador.h"
   671 ;; Parameters:    Size  Location     Type
   672 ;;  frec            1    wreg     unsigned char 
   673 ;; Auto vars:     Size  Location     Type
   674 ;;  frec            1    4[COMMON] unsigned char 
   675 ;; Return value:  Size  Location     Type
   676 ;;                  1    wreg      void 
   677 ;; Registers used:
   678 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   684 ;;      Params:         0       0       0       0       0
   685 ;;      Locals:         1       0       0       0       0
   686 ;;      Temps:          0       2       0       0       0
   687 ;;      Totals:         1       2       0       0       0
   688 ;;Total ram usage:        3 bytes
   689 ;; Hardware stack levels used:    1
   690 ;; Hardware stack levels required when called:    1
   691 ;; This function calls:
   692 ;;		Nothing
   693 ;; This function is called by:
   694 ;;		_main
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           
   699                           ;psect for function _iniciarOSC
   700  008E                     _iniciarOSC:	
   701                           
   702                           ;incstack = 0
   703                           ; Regs used in _iniciarOSC: [wreg-fsr0h+status,2+status,0]
   704                           ;iniciarOSC@frec stored from wreg
   705  008E  00F9               	movwf	iniciarOSC@frec
   706  008F                     l1073:	
   707                           
   708                           ;./Oscilador.h: 5: void iniciarOSC(uint8_t frec);./Oscilador.h: 6: {;./Oscilador.h: 7:  
      +                             switch(frec)
   709  008F  28CB               	goto	l1095
   710  0090                     l1075:	
   711                           
   712                           ;./Oscilador.h: 10:             OSCCONbits.IRCF = 0b000;
   713  0090  308F               	movlw	-113
   714  0091  1683               	bsf	3,5	;RP0=1, select bank1
   715  0092  1303               	bcf	3,6	;RP1=0, select bank1
   716  0093  058F               	andwf	15,f	;volatile
   717                           
   718                           ;./Oscilador.h: 11:             break;
   719  0094  28EF               	goto	l82
   720  0095                     l1077:	
   721                           
   722                           ;./Oscilador.h: 14:             OSCCONbits.IRCF = 0b001;
   723  0095  1683               	bsf	3,5	;RP0=1, select bank1
   724  0096  1303               	bcf	3,6	;RP1=0, select bank1
   725  0097  080F               	movf	15,w	;volatile
   726  0098  398F               	andlw	-113
   727  0099  3810               	iorlw	16
   728  009A  008F               	movwf	15	;volatile
   729                           
   730                           ;./Oscilador.h: 15:             break;
   731  009B  28EF               	goto	l82
   732  009C                     l1079:	
   733                           
   734                           ;./Oscilador.h: 18:             OSCCONbits.IRCF = 0b010;
   735  009C  1683               	bsf	3,5	;RP0=1, select bank1
   736  009D  1303               	bcf	3,6	;RP1=0, select bank1
   737  009E  080F               	movf	15,w	;volatile
   738  009F  398F               	andlw	-113
   739  00A0  3820               	iorlw	32
   740  00A1  008F               	movwf	15	;volatile
   741                           
   742                           ;./Oscilador.h: 19:             break;
   743  00A2  28EF               	goto	l82
   744  00A3                     l1081:	
   745                           
   746                           ;./Oscilador.h: 22:             OSCCONbits.IRCF = 0b001;
   747  00A3  1683               	bsf	3,5	;RP0=1, select bank1
   748  00A4  1303               	bcf	3,6	;RP1=0, select bank1
   749  00A5  080F               	movf	15,w	;volatile
   750  00A6  398F               	andlw	-113
   751  00A7  3810               	iorlw	16
   752  00A8  008F               	movwf	15	;volatile
   753                           
   754                           ;./Oscilador.h: 23:             break;
   755  00A9  28EF               	goto	l82
   756  00AA                     l1083:	
   757                           
   758                           ;./Oscilador.h: 26:             OSCCONbits.IRCF = 0b100;
   759  00AA  1683               	bsf	3,5	;RP0=1, select bank1
   760  00AB  1303               	bcf	3,6	;RP1=0, select bank1
   761  00AC  080F               	movf	15,w	;volatile
   762  00AD  398F               	andlw	-113
   763  00AE  3840               	iorlw	64
   764  00AF  008F               	movwf	15	;volatile
   765                           
   766                           ;./Oscilador.h: 27:             break;
   767  00B0  28EF               	goto	l82
   768  00B1                     l1085:	
   769                           
   770                           ;./Oscilador.h: 30:             OSCCONbits.IRCF = 0b101;
   771  00B1  1683               	bsf	3,5	;RP0=1, select bank1
   772  00B2  1303               	bcf	3,6	;RP1=0, select bank1
   773  00B3  080F               	movf	15,w	;volatile
   774  00B4  398F               	andlw	-113
   775  00B5  3850               	iorlw	80
   776  00B6  008F               	movwf	15	;volatile
   777                           
   778                           ;./Oscilador.h: 31:             break;
   779  00B7  28EF               	goto	l82
   780  00B8                     l1087:	
   781                           
   782                           ;./Oscilador.h: 34:             OSCCONbits.IRCF = 0b110;
   783  00B8  1683               	bsf	3,5	;RP0=1, select bank1
   784  00B9  1303               	bcf	3,6	;RP1=0, select bank1
   785  00BA  080F               	movf	15,w	;volatile
   786  00BB  398F               	andlw	-113
   787  00BC  3860               	iorlw	96
   788  00BD  008F               	movwf	15	;volatile
   789                           
   790                           ;./Oscilador.h: 35:             break;
   791  00BE  28EF               	goto	l82
   792  00BF                     l1089:	
   793                           
   794                           ;./Oscilador.h: 38:             OSCCONbits.IRCF = 0b111;
   795  00BF  3070               	movlw	112
   796  00C0  1683               	bsf	3,5	;RP0=1, select bank1
   797  00C1  1303               	bcf	3,6	;RP1=0, select bank1
   798  00C2  048F               	iorwf	15,f	;volatile
   799                           
   800                           ;./Oscilador.h: 39:             break;
   801  00C3  28EF               	goto	l82
   802  00C4                     l1091:	
   803                           
   804                           ;./Oscilador.h: 42:             OSCCONbits.IRCF = 0b110;
   805  00C4  1683               	bsf	3,5	;RP0=1, select bank1
   806  00C5  1303               	bcf	3,6	;RP1=0, select bank1
   807  00C6  080F               	movf	15,w	;volatile
   808  00C7  398F               	andlw	-113
   809  00C8  3860               	iorlw	96
   810  00C9  008F               	movwf	15	;volatile
   811                           
   812                           ;./Oscilador.h: 43:             break;
   813  00CA  28EF               	goto	l82
   814  00CB                     l1095:	
   815  00CB  0879               	movf	iniciarOSC@frec,w
   816  00CC  1283               	bcf	3,5	;RP0=0, select bank0
   817  00CD  1303               	bcf	3,6	;RP1=0, select bank0
   818  00CE  00A0               	movwf	??_iniciarOSC
   819  00CF  01A1               	clrf	??_iniciarOSC+1
   820                           
   821                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   822                           ; Switch size 1, requested type "simple"
   823                           ; Number of cases is 1, Range of values is 0 to 0
   824                           ; switch strategies available:
   825                           ; Name         Instructions Cycles
   826                           ; simple_byte            4     3 (average)
   827                           ; direct_byte           11     8 (fixed)
   828                           ; jumptable            260     6 (fixed)
   829                           ;	Chosen strategy is simple_byte
   830  00D0  0821               	movf	??_iniciarOSC+1,w
   831  00D1  3A00               	xorlw	0	; case 0
   832  00D2  1903               	skipnz
   833  00D3  28D5               	goto	l1155
   834  00D4  28C4               	goto	l1091
   835  00D5                     l1155:	
   836                           
   837                           ; Switch size 1, requested type "simple"
   838                           ; Number of cases is 8, Range of values is 0 to 7
   839                           ; switch strategies available:
   840                           ; Name         Instructions Cycles
   841                           ; simple_byte           25    13 (average)
   842                           ; direct_byte           32     8 (fixed)
   843                           ; jumptable            260     6 (fixed)
   844                           ;	Chosen strategy is simple_byte
   845  00D5  0820               	movf	??_iniciarOSC,w
   846  00D6  3A00               	xorlw	0	; case 0
   847  00D7  1903               	skipnz
   848  00D8  2890               	goto	l1075
   849  00D9  3A01               	xorlw	1	; case 1
   850  00DA  1903               	skipnz
   851  00DB  2895               	goto	l1077
   852  00DC  3A03               	xorlw	3	; case 2
   853  00DD  1903               	skipnz
   854  00DE  289C               	goto	l1079
   855  00DF  3A01               	xorlw	1	; case 3
   856  00E0  1903               	skipnz
   857  00E1  28A3               	goto	l1081
   858  00E2  3A07               	xorlw	7	; case 4
   859  00E3  1903               	skipnz
   860  00E4  28AA               	goto	l1083
   861  00E5  3A01               	xorlw	1	; case 5
   862  00E6  1903               	skipnz
   863  00E7  28B1               	goto	l1085
   864  00E8  3A03               	xorlw	3	; case 6
   865  00E9  1903               	skipnz
   866  00EA  28B8               	goto	l1087
   867  00EB  3A01               	xorlw	1	; case 7
   868  00EC  1903               	skipnz
   869  00ED  28BF               	goto	l1089
   870  00EE  28C4               	goto	l1091
   871  00EF                     l82:	
   872                           
   873                           ;./Oscilador.h: 47:     OSCCONbits.SCS = 1;
   874  00EF  140F               	bsf	15,0	;volatile
   875  00F0                     l91:	
   876  00F0  0008               	return
   877  00F1                     __end_of_iniciarOSC:	
   878                           
   879                           	psect	text4
   880  0163                     __ptext4:	
   881 ;; *************** function _iniciarADC *****************
   882 ;; Defined at:
   883 ;;		line 12 in file "./ADC.h"
   884 ;; Parameters:    Size  Location     Type
   885 ;;  conv            2    0[BANK0 ] int 
   886 ;; Auto vars:     Size  Location     Type
   887 ;;		None
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   897 ;;      Params:         0       2       0       0       0
   898 ;;      Locals:         0       0       0       0       0
   899 ;;      Temps:          0       0       0       0       0
   900 ;;      Totals:         0       2       0       0       0
   901 ;;Total ram usage:        2 bytes
   902 ;; Hardware stack levels used:    1
   903 ;; Hardware stack levels required when called:    1
   904 ;; This function calls:
   905 ;;		Nothing
   906 ;; This function is called by:
   907 ;;		_main
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           
   912                           ;psect for function _iniciarADC
   913  0163                     _iniciarADC:	
   914  0163                     l1039:	
   915                           ;incstack = 0
   916                           ; Regs used in _iniciarADC: [wreg-fsr0h+status,2+status,0]
   917                           
   918                           
   919                           ;./ADC.h: 12: ;./ADC.h: 13:         case 2:;./ADC.h: 18:             ADCON0bits.ADCS = 0
      +                          b10;
   920  0163  2974               	goto	l1051
   921  0164                     l1041:	
   922                           
   923                           ;./ADC.h: 21:         default:
   924  0164  303F               	movlw	-193
   925  0165  059F               	andwf	31,f	;volatile
   926                           
   927                           ;./ADC.h: 22:             ADCON0bits.ADCS = 0b11;
   928  0166  2986               	goto	l63
   929  0167                     l1043:	
   930  0167  081F               	movf	31,w	;volatile
   931  0168  393F               	andlw	-193
   932  0169  3840               	iorlw	64
   933  016A  009F               	movwf	31	;volatile
   934  016B  2986               	goto	l63
   935  016C                     l1045:	
   936  016C  081F               	movf	31,w	;volatile
   937  016D  393F               	andlw	-193
   938  016E  3880               	iorlw	128
   939  016F  009F               	movwf	31	;volatile
   940  0170  2986               	goto	l63
   941  0171                     l1047:	
   942  0171  30C0               	movlw	192
   943  0172  049F               	iorwf	31,f	;volatile
   944  0173  2986               	goto	l63
   945  0174                     l1051:	
   946                           
   947                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   948                           ; Switch size 1, requested type "simple"
   949                           ; Number of cases is 1, Range of values is 0 to 0
   950                           ; switch strategies available:
   951                           ; Name         Instructions Cycles
   952                           ; simple_byte            4     3 (average)
   953                           ; direct_byte           11     8 (fixed)
   954                           ; jumptable            260     6 (fixed)
   955                           ;	Chosen strategy is simple_byte
   956  0174  1283               	bcf	3,5	;RP0=0, select bank0
   957  0175  1303               	bcf	3,6	;RP1=0, select bank0
   958  0176  0821               	movf	iniciarADC@conv+1,w
   959  0177  3A00               	xorlw	0	; case 0
   960  0178  1903               	skipnz
   961  0179  297B               	goto	l1157
   962  017A  2971               	goto	l1047
   963  017B                     l1157:	
   964                           
   965                           ; Switch size 1, requested type "simple"
   966                           ; Number of cases is 3, Range of values is 1 to 3
   967                           ; switch strategies available:
   968                           ; Name         Instructions Cycles
   969                           ; simple_byte           10     6 (average)
   970                           ; direct_byte           20    11 (fixed)
   971                           ; jumptable            263     9 (fixed)
   972                           ;	Chosen strategy is simple_byte
   973  017B  0820               	movf	iniciarADC@conv,w
   974  017C  3A01               	xorlw	1	; case 1
   975  017D  1903               	skipnz
   976  017E  2964               	goto	l1041
   977  017F  3A03               	xorlw	3	; case 2
   978  0180  1903               	skipnz
   979  0181  2967               	goto	l1043
   980  0182  3A01               	xorlw	1	; case 3
   981  0183  1903               	skipnz
   982  0184  296C               	goto	l1045
   983  0185  2971               	goto	l1047
   984  0186                     l63:	
   985                           
   986                           ;./ADC.h: 112:     ADCON0bits.GO_DONE = 1;
   987  0186  149F               	bsf	31,1	;volatile
   988                           
   989                           ;./ADC.h: 114:     ADCON0bits.ADON = 1;
   990  0187  141F               	bsf	31,0	;volatile
   991                           
   992                           ;./ADC.h: 116:     ADCON1bits.ADFM = 0;
   993  0188  1683               	bsf	3,5	;RP0=1, select bank1
   994  0189  1303               	bcf	3,6	;RP1=0, select bank1
   995  018A  139F               	bcf	31,7	;volatile
   996                           
   997                           ;./ADC.h: 118:     ADCON1bits.VCFG1 = 0;
   998  018B  129F               	bcf	31,5	;volatile
   999                           
  1000                           ;./ADC.h: 120:     ADCON1bits.VCFG0 = 0;
  1001  018C  121F               	bcf	31,4	;volatile
  1002  018D                     l67:	
  1003  018D  0008               	return
  1004  018E                     __end_of_iniciarADC:	
  1005                           
  1006                           	psect	text5
  1007  018E                     __ptext5:	
  1008 ;; *************** function _I2C_Negro *****************
  1009 ;; Defined at:
  1010 ;;		line 18 in file "./I2Cesclavo.h"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;  address         1    wreg     unsigned char 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  address         1    4[COMMON] unsigned char 
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  1    wreg      void 
  1017 ;; Registers used:
  1018 ;;		wreg
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1024 ;;      Params:         0       0       0       0       0
  1025 ;;      Locals:         1       0       0       0       0
  1026 ;;      Temps:          0       0       0       0       0
  1027 ;;      Totals:         1       0       0       0       0
  1028 ;;Total ram usage:        1 bytes
  1029 ;; Hardware stack levels used:    1
  1030 ;; Hardware stack levels required when called:    1
  1031 ;; This function calls:
  1032 ;;		Nothing
  1033 ;; This function is called by:
  1034 ;;		_main
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           
  1039                           ;psect for function _I2C_Negro
  1040  018E                     _I2C_Negro:	
  1041                           
  1042                           ;incstack = 0
  1043                           ; Regs used in _I2C_Negro: [wreg]
  1044                           ;I2C_Negro@address stored from wreg
  1045  018E  00F9               	movwf	I2C_Negro@address
  1046  018F                     l759:	
  1047                           
  1048                           ;./I2Cesclavo.h: 18: void I2C_Negro(uint8_t address);./I2Cesclavo.h: 19: {;./I2Cesclavo.
      +                          h: 20:     SSPADD = address;
  1049  018F  0879               	movf	I2C_Negro@address,w
  1050  0190  1683               	bsf	3,5	;RP0=1, select bank1
  1051  0191  1303               	bcf	3,6	;RP1=0, select bank1
  1052  0192  0093               	movwf	19	;volatile
  1053                           
  1054                           ;./I2Cesclavo.h: 21:     SSPCON = 0x36;
  1055  0193  3036               	movlw	54
  1056  0194  1283               	bcf	3,5	;RP0=0, select bank0
  1057  0195  1303               	bcf	3,6	;RP1=0, select bank0
  1058  0196  0094               	movwf	20	;volatile
  1059                           
  1060                           ;./I2Cesclavo.h: 22:     SSPSTAT = 0x80;
  1061  0197  3080               	movlw	128
  1062  0198  1683               	bsf	3,5	;RP0=1, select bank1
  1063  0199  1303               	bcf	3,6	;RP1=0, select bank1
  1064  019A  0094               	movwf	20	;volatile
  1065                           
  1066                           ;./I2Cesclavo.h: 23:     SSPCON2 = 0x01;
  1067  019B  3001               	movlw	1
  1068  019C  0091               	movwf	17	;volatile
  1069  019D                     l761:	
  1070                           
  1071                           ;./I2Cesclavo.h: 24:     TRISC3 = 1;
  1072  019D  1587               	bsf	7,3	;volatile
  1073  019E                     l763:	
  1074                           
  1075                           ;./I2Cesclavo.h: 25:     TRISC4 = 1;
  1076  019E  1607               	bsf	7,4	;volatile
  1077  019F                     l765:	
  1078                           
  1079                           ;./I2Cesclavo.h: 26:     GIE = 1;
  1080  019F  178B               	bsf	11,7	;volatile
  1081  01A0                     l767:	
  1082                           
  1083                           ;./I2Cesclavo.h: 27:     PEIE = 1;
  1084  01A0  170B               	bsf	11,6	;volatile
  1085  01A1                     l769:	
  1086                           
  1087                           ;./I2Cesclavo.h: 28:     SSPIF = 0;
  1088  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1089  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1090  01A3  118C               	bcf	12,3	;volatile
  1091  01A4                     l771:	
  1092                           
  1093                           ;./I2Cesclavo.h: 29:     SSPIE = 1;
  1094  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  1095  01A5  1303               	bcf	3,6	;RP1=0, select bank1
  1096  01A6  158C               	bsf	12,3	;volatile
  1097  01A7                     l77:	
  1098  01A7  0008               	return
  1099  01A8                     __end_of_I2C_Negro:	
  1100                           
  1101                           	psect	text6
  1102  001B                     __ptext6:	
  1103 ;; *************** function _isr *****************
  1104 ;; Defined at:
  1105 ;;		line 47 in file "Reo1.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;		None
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;		None
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  1    wreg      void 
  1112 ;; Registers used:
  1113 ;;		wreg
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1119 ;;      Params:         0       0       0       0       0
  1120 ;;      Locals:         0       0       0       0       0
  1121 ;;      Temps:          4       0       0       0       0
  1122 ;;      Totals:         4       0       0       0       0
  1123 ;;Total ram usage:        4 bytes
  1124 ;; Hardware stack levels used:    1
  1125 ;; This function calls:
  1126 ;;		Nothing
  1127 ;; This function is called by:
  1128 ;;		Interrupt level 1
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           
  1133                           ;psect for function _isr
  1134  001B                     _isr:	
  1135  001B                     i1l945:	
  1136                           
  1137                           ;Reo1.c: 50:     if (PIR1bits.ADIF == 1)
  1138  001B  1283               	bcf	3,5	;RP0=0, select bank0
  1139  001C  1303               	bcf	3,6	;RP1=0, select bank0
  1140  001D  1F0C               	btfss	12,6	;volatile
  1141  001E  2820               	goto	u17_21
  1142  001F  2821               	goto	u17_20
  1143  0020                     u17_21:	
  1144  0020  282B               	goto	i1l951
  1145  0021                     u17_20:	
  1146  0021                     i1l947:	
  1147                           
  1148                           ;Reo1.c: 51:     {;Reo1.c: 52:         PIR1bits.ADIF = 0;
  1149  0021  130C               	bcf	12,6	;volatile
  1150  0022                     i1l949:	
  1151                           
  1152                           ;Reo1.c: 53:         _delay((unsigned long)((2)*(4000000/4000.0)));
  1153  0022  3003               	movlw	3
  1154  0023  00F6               	movwf	??_isr+1
  1155  0024  3097               	movlw	151
  1156  0025  00F5               	movwf	??_isr
  1157  0026                     u32_27:	
  1158  0026  0BF5               	decfsz	??_isr,f
  1159  0027  2826               	goto	u32_27
  1160  0028  0BF6               	decfsz	??_isr+1,f
  1161  0029  2826               	goto	u32_27
  1162  002A  282B               	nop2
  1163  002B                     i1l951:	
  1164                           
  1165                           ;Reo1.c: 56:     if(PIR1bits.SSPIF == 1)
  1166  002B  1283               	bcf	3,5	;RP0=0, select bank0
  1167  002C  1303               	bcf	3,6	;RP1=0, select bank0
  1168  002D  1D8C               	btfss	12,3	;volatile
  1169  002E  2830               	goto	u18_21
  1170  002F  2831               	goto	u18_20
  1171  0030                     u18_21:	
  1172  0030  2887               	goto	i1l122
  1173  0031                     u18_20:	
  1174  0031                     i1l953:	
  1175                           
  1176                           ;Reo1.c: 57:     {;Reo1.c: 58:         SSPCONbits.CKP = 0;
  1177  0031  1214               	bcf	20,4	;volatile
  1178                           
  1179                           ;Reo1.c: 60:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL))
  1180  0032  1B14               	btfsc	20,6	;volatile
  1181  0033  2835               	goto	u19_21
  1182  0034  2836               	goto	u19_20
  1183  0035                     u19_21:	
  1184  0035  283A               	goto	i1l957
  1185  0036                     u19_20:	
  1186  0036                     i1l955:	
  1187  0036  1F94               	btfss	20,7	;volatile
  1188  0037  2839               	goto	u20_21
  1189  0038  283A               	goto	u20_20
  1190  0039                     u20_21:	
  1191  0039  2841               	goto	i1l965
  1192  003A                     u20_20:	
  1193  003A                     i1l957:	
  1194                           
  1195                           ;Reo1.c: 61:         {;Reo1.c: 62:             z = SSPBUF;
  1196  003A  0813               	movf	19,w	;volatile
  1197  003B  00F5               	movwf	??_isr
  1198  003C  0875               	movf	??_isr,w
  1199  003D  00F1               	movwf	_z
  1200  003E                     i1l959:	
  1201                           
  1202                           ;Reo1.c: 63:             SSPCONbits.SSPOV = 0;
  1203  003E  1314               	bcf	20,6	;volatile
  1204  003F                     i1l961:	
  1205                           
  1206                           ;Reo1.c: 64:             SSPCONbits.WCOL = 0;
  1207  003F  1394               	bcf	20,7	;volatile
  1208  0040                     i1l963:	
  1209                           
  1210                           ;Reo1.c: 65:             SSPCONbits.CKP = 1;
  1211  0040  1614               	bsf	20,4	;volatile
  1212  0041                     i1l965:	
  1213                           
  1214                           ;Reo1.c: 68:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW)
  1215  0041  1683               	bsf	3,5	;RP0=1, select bank1
  1216  0042  1303               	bcf	3,6	;RP1=0, select bank1
  1217  0043  1A94               	btfsc	20,5	;volatile
  1218  0044  2846               	goto	u21_21
  1219  0045  2847               	goto	u21_20
  1220  0046                     u21_21:	
  1221  0046  2864               	goto	i1l113
  1222  0047                     u21_20:	
  1223  0047                     i1l967:	
  1224  0047  1914               	btfsc	20,2	;volatile
  1225  0048  284A               	goto	u22_21
  1226  0049  284B               	goto	u22_20
  1227  004A                     u22_21:	
  1228  004A  2864               	goto	i1l113
  1229  004B                     u22_20:	
  1230  004B                     i1l969:	
  1231                           
  1232                           ;Reo1.c: 69:         {;Reo1.c: 71:             z = SSPBUF;
  1233  004B  1283               	bcf	3,5	;RP0=0, select bank0
  1234  004C  1303               	bcf	3,6	;RP1=0, select bank0
  1235  004D  0813               	movf	19,w	;volatile
  1236  004E  00F5               	movwf	??_isr
  1237  004F  0875               	movf	??_isr,w
  1238  0050  00F1               	movwf	_z
  1239  0051                     i1l971:	
  1240                           
  1241                           ;Reo1.c: 72:             PIR1bits.SSPIF = 0;
  1242  0051  118C               	bcf	12,3	;volatile
  1243  0052                     i1l973:	
  1244                           
  1245                           ;Reo1.c: 73:             SSPCONbits.CKP = 1;
  1246  0052  1614               	bsf	20,4	;volatile
  1247  0053                     i1l114:	
  1248                           ;Reo1.c: 74:             while(!SSPSTATbits.BF);
  1249                           
  1250  0053  1683               	bsf	3,5	;RP0=1, select bank1
  1251  0054  1303               	bcf	3,6	;RP1=0, select bank1
  1252  0055  1C14               	btfss	20,0	;volatile
  1253  0056  2858               	goto	u23_21
  1254  0057  2859               	goto	u23_20
  1255  0058                     u23_21:	
  1256  0058  2853               	goto	i1l114
  1257  0059                     u23_20:	
  1258  0059                     i1l975:	
  1259                           
  1260                           ;Reo1.c: 75:             x = SSPBUF;
  1261  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1262  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1263  005B  0813               	movf	19,w	;volatile
  1264  005C  00F5               	movwf	??_isr
  1265  005D  0875               	movf	??_isr,w
  1266  005E  00A6               	movwf	_x
  1267                           
  1268                           ;Reo1.c: 76:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1269  005F  3053               	movlw	83
  1270  0060  00F5               	movwf	??_isr
  1271  0061                     u33_27:	
  1272  0061  0BF5               	decfsz	??_isr,f
  1273  0062  2861               	goto	u33_27
  1274                           
  1275                           ;Reo1.c: 77:         }
  1276  0063  2884               	goto	i1l117
  1277  0064                     i1l113:	
  1278                           ;Reo1.c: 79:         else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW)
  1279                           
  1280  0064  1A94               	btfsc	20,5	;volatile
  1281  0065  2867               	goto	u24_21
  1282  0066  2868               	goto	u24_20
  1283  0067                     u24_21:	
  1284  0067  2884               	goto	i1l117
  1285  0068                     u24_20:	
  1286  0068                     i1l977:	
  1287  0068  1D14               	btfss	20,2	;volatile
  1288  0069  286B               	goto	u25_21
  1289  006A  286C               	goto	u25_20
  1290  006B                     u25_21:	
  1291  006B  2884               	goto	i1l117
  1292  006C                     u25_20:	
  1293  006C                     i1l979:	
  1294                           
  1295                           ;Reo1.c: 80:         {;Reo1.c: 83:                 z = SSPBUF;
  1296  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1297  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1298  006E  0813               	movf	19,w	;volatile
  1299  006F  00F5               	movwf	??_isr
  1300  0070  0875               	movf	??_isr,w
  1301  0071  00F1               	movwf	_z
  1302  0072                     i1l981:	
  1303                           
  1304                           ;Reo1.c: 84:                 BF = 0;
  1305  0072  1683               	bsf	3,5	;RP0=1, select bank1
  1306  0073  1303               	bcf	3,6	;RP1=0, select bank1
  1307  0074  1014               	bcf	20,0	;volatile
  1308                           
  1309                           ;Reo1.c: 85:                 SSPBUF = luz;
  1310  0075  0874               	movf	_luz,w
  1311  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1312  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1313  0078  0093               	movwf	19	;volatile
  1314  0079                     i1l983:	
  1315                           
  1316                           ;Reo1.c: 86:                 SSPCONbits.CKP = 1;
  1317  0079  1614               	bsf	20,4	;volatile
  1318                           
  1319                           ;Reo1.c: 87:                 _delay((unsigned long)((250)*(4000000/4000000.0)));
  1320  007A  3053               	movlw	83
  1321  007B  00F5               	movwf	??_isr
  1322  007C                     u34_27:	
  1323  007C  0BF5               	decfsz	??_isr,f
  1324  007D  287C               	goto	u34_27
  1325  007E                     i1l119:	
  1326                           ;Reo1.c: 88:                 while(SSPSTATbits.BF);
  1327                           
  1328  007E  1683               	bsf	3,5	;RP0=1, select bank1
  1329  007F  1303               	bcf	3,6	;RP1=0, select bank1
  1330  0080  1814               	btfsc	20,0	;volatile
  1331  0081  2883               	goto	u26_21
  1332  0082  2884               	goto	u26_20
  1333  0083                     u26_21:	
  1334  0083  287E               	goto	i1l119
  1335  0084                     u26_20:	
  1336  0084                     i1l117:	
  1337                           
  1338                           ;Reo1.c: 112:         PIR1bits.SSPIF = 0;
  1339  0084  1283               	bcf	3,5	;RP0=0, select bank0
  1340  0085  1303               	bcf	3,6	;RP1=0, select bank0
  1341  0086  118C               	bcf	12,3	;volatile
  1342  0087                     i1l122:	
  1343  0087  0878               	movf	??_isr+3,w
  1344  0088  008A               	movwf	10
  1345  0089  0E77               	swapf	(??_isr+2)^(0+4294967168),w
  1346  008A  0083               	movwf	3
  1347  008B  0EFE               	swapf	btemp,f
  1348  008C  0E7E               	swapf	btemp,w
  1349  008D  0009               	retfie
  1350  008E                     __end_of_isr:	
  1351  007E                     btemp	set	126	;btemp
  1352  007E                     wtemp0	set	126
  1353                           
  1354                           	psect	intentry
  1355  0004                     __pintentry:	
  1356                           ;incstack = 0
  1357                           ; Regs used in _isr: [wreg]
  1358                           
  1359  0004                     interrupt_function:	
  1360  007E                     saved_w	set	btemp
  1361  0004  00FE               	movwf	btemp
  1362  0005  0E03               	swapf	3,w
  1363  0006  00F7               	movwf	??_isr+2
  1364  0007  080A               	movf	10,w
  1365  0008  00F8               	movwf	??_isr+3
  1366  0009  120A  118A  281B   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80      6       7
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2C_Negro
    _main->_iniciarOSC
    _main->_leerADC

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_leerADC

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     220
                                              4 BANK0      2     2      0
                          _I2C_Negro
                         _iniciarADC
                         _iniciarOSC
                            _leerADC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _leerADC                                              5     3      2      62
                                              4 COMMON     1     1      0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _iniciarOSC                                           3     3      0      22
                                              4 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _iniciarADC                                           2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Negro                                            1     1      0      15
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Negro
   _iniciarADC
   _iniciarOSC
   _leerADC
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      11       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       7       5        8.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      11      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Mar 15 03:26:06 2020

                       _x 0026        __size_of_I2C_Negro 001A                         _z 0071  
             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        _BF 04A0  
                      l63 0186                        l71 0162                        l72 0157  
                      l82 00EF                        l67 018D                        l91 00F0  
                      l77 01A7                       l125 01BA                       l801 01A8  
                     l811 01B5                       l803 01AC                       l813 01B6  
                     l805 01AD                       l815 01B7                       l807 01AE  
                     l761 019D                       l809 01B1                       l771 01A4  
                     l763 019E                       l765 019F                       l767 01A0  
                     l759 018F                       l769 01A1                       _GIE 005F  
                     u307 0123                       u317 0150                       u270 0132  
                     u271 0131                       u290 015B              __CFG_CPD$OFF 0000  
                     u291 015A                       u285 0140                       _isr 001B  
                     _luz 0074              __CFG_LVP$OFF 0000                      l1101 00F1  
                    l1111 0111                      l1103 00F7                      l1041 0164  
                    l1113 011D                      l1105 00FC                      l1043 0167  
                    l1051 0174                      l1107 0107                      l1045 016C  
                    l1109 010D                      l1047 0171                      l1039 0163  
                    l1063 0137                      l1081 00A3                      l1073 008F  
                    l1065 014A                      l1057 012C                      l1155 00D5  
                    l1091 00C4                      l1083 00AA                      l1075 0090  
                    l1067 0154                      l1059 0132                      l1157 017B  
                    l1085 00B1                      l1077 0095                      l1069 015B  
                    l1087 00B8                      l1079 009C                      l1095 00CB  
                    l1089 00BF                      ?_isr 0075                      _PEIE 005E  
            __CFG_WRT$OFF 0000                      _dato 0070                      _main 00F1  
                    _humo 0073                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000                     ??_isr 0075                     ?_main 0075  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l113 0064  
                   i1l114 0053                     i1l122 0087                     i1l117 0084  
                   i1l119 007E                     i1l951 002B                     i1l961 003F  
                   i1l953 0031                     i1l945 001B                     i1l971 0051  
                   i1l963 0040                     i1l955 0036                     i1l947 0021  
                   i1l981 0072                     i1l973 0052                     i1l965 0041  
                   i1l957 003A                     i1l949 0022                     i1l983 0079  
                   i1l975 0059                     i1l967 0047                     i1l959 003E  
                   i1l977 0068                     i1l969 004B                     i1l979 006C  
                   u20_20 003A                     u20_21 0039                     u21_20 0047  
                   u21_21 0046                     u22_20 004B                     u22_21 004A  
                   u23_20 0059                     u23_21 0058                     u24_20 0068  
                   u24_21 0067                     u32_27 0026                     u25_20 006C  
                   u17_20 0021                     u25_21 006B                     u17_21 0020  
                   u33_27 0061                     u26_20 0084                     u18_20 0031  
                   u26_21 0083                     u18_21 0030                     u34_27 007C  
                   u19_20 0036                     u19_21 0035                     _PORTA 0005  
                   _SSPIE 0463                     _SSPIF 0063            __CFG_FCMEN$OFF 0000  
         __end_of_leerADC 0163                     _tempe 0072         __end_of_I2C_Negro 01A8  
                   _setup 01A8            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 012B                    ??_main 0024  
          iniciarADC@conv 0020                    _ADCON0 001F                    _ADRESH 001E  
                  ?_setup 0075                    _ANSELH 0189                    _SSPADD 0093  
                  _TRISC3 043B                    _TRISC4 043C                    _SSPCON 0014  
                  _SSPBUF 0013            __CFG_PWRTE$OFF 0000            iniciarOSC@frec 0079  
               ??_leerADC 0022                    saved_w 007E   __end_of__initialization 0017  
          __pcstackCOMMON 0075             __end_of_setup 01BB                   ??_setup 0079  
              __pbssBANK0 0026                __pmaintext 00F1                __pintentry 0004  
                 _SSPCON2 0091                   _SSPSTAT 0094                 _I2C_Negro 018E  
              _iniciarADC 0163                _iniciarOSC 008E          I2C_Negro@address 0079  
               _ANSELbits 0188                   __ptext1 01A8                   __ptext2 012B  
                 __ptext3 008E                   __ptext4 0163                   __ptext5 018E  
                 __ptext6 001B                   _leerADC 012B              __size_of_isr 0073  
    end_of_initialization 0017                ?_I2C_Negro 0075                 _TRISAbits 0085  
             ?_iniciarADC 0020               ?_iniciarOSC 0075       start_initialization 000F  
             __end_of_isr 008E               ??_I2C_Negro 0079  __CFG_FOSC$INTRC_NOCLKOUT 0000  
             __pbssCOMMON 0070                 ___latbits 0002             __pcstackBANK0 0020  
     __size_of_iniciarADC 002B       __size_of_iniciarOSC 0063                  ?_leerADC 0020  
          __size_of_setup 0013         interrupt_function 0004                  _PIE1bits 008C  
                _PIR1bits 000C                  _GO_nDONE 00F9                _ADCON0bits 001F  
              _ADCON1bits 009F              ??_iniciarADC 0079              ??_iniciarOSC 0020  
        __size_of_leerADC 0038        __end_of_iniciarADC 018E        __end_of_iniciarOSC 00F1  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 003A                _INTCONbits 000B  
                intlevel1 0000                _OSCCONbits 008F            leerADC@channel 0079  
              _SSPCONbits 0014  
